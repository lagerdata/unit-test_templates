<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ADC.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_a_d_c_8h</filename>
    <class kind="struct">ADC_Params</class>
    <class kind="struct">ADC_FxnTable</class>
    <class kind="struct">ADC_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>ADC_convertRawToMicroVolts</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>ab9f0fda9cf7e26636cee5817789f0030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_CMD_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga1850e2c1e2791103d1102917d1e5b01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5a8bd7786df22349b1a5434f48b08581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADC_Config_ *</type>
      <name>ADC_Handle</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a7447d17264445ab6285ddab2bb794582</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct ADC_Config_</type>
      <name>ADC_Config</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>acde6feaa979f1952a70a38e9e1e1ea74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_close</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>adb49f74bdef5e3e45ee5de306c5dfc08</anchor>
      <arglist>(ADC_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADC_control</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>af4be7e5e4f5cc931f4501a542d689c32</anchor>
      <arglist>(ADC_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>ADC_convert</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>afcac5582b8be42a7740091d150aef05c</anchor>
      <arglist>(ADC_Handle handle, uint16_t *value)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>ADC_convertToMicroVolts</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>aa1cd6feaa85ea5409dbe1769586bff20</anchor>
      <arglist>(ADC_Handle handle, uint16_t adcValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_init</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a4b4a2ddcb45df0c8497c47d4ed800e2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>ADC_Handle</type>
      <name>ADC_open</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a1bfe07e93650e1288ba5fc6acc212c46</anchor>
      <arglist>(uint_least8_t index, ADC_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ADC_Params_init</name>
      <anchorfile>_a_d_c_8h.html</anchorfile>
      <anchor>a21df1c0987f5cecb660581ae081c4dc7</anchor>
      <arglist>(ADC_Params *params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Overview</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Usage</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Synopsis</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Synopsis_Code</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_open</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_convert</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Examples_convert_microvolts</docanchor>
    <docanchor file="_a_d_c_8h">ti_drivers_ADC_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>ADCCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/adc/</path>
    <filename>_a_d_c_c_c32_x_x_8h</filename>
    <includes id="_a_d_c_8h" name="ADC.h" local="no" imported="no">ti/drivers/ADC.h</includes>
    <class kind="struct">ADCCC32XX_HWAttrsV1</class>
    <class kind="struct">ADCCC32XX_State</class>
    <class kind="struct">ADCCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>ADCCC32XX_PIN_57_CH_0</name>
      <anchorfile>_a_d_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a06bc9acbe3d2a5fbbd5ef6014073d45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCCC32XX_PIN_58_CH_1</name>
      <anchorfile>_a_d_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad3624f019b5f781f0e7cab64b372204c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCCC32XX_PIN_59_CH_2</name>
      <anchorfile>_a_d_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a307156243c7d41fd67914223bc078e12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADCCC32XX_PIN_60_CH_3</name>
      <anchorfile>_a_d_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac53870d0f1947fa3ece1315f0062d0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ADC_FxnTable</type>
      <name>ADCCC32XX_fxnTable</name>
      <anchorfile>_a_d_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5571574dfaed35ccc55827cc34cc2090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AnsiColor.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_ansi_color_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_GET_OVERRIDE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a49965362e47696a62f21ffa09ef0076c</anchor>
      <arglist>(_1, _2, _3, _4, _5, NAME,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR5</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ad57e32136cc9d69fe509c755e2cd4cc3</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR4</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a2026886265de7d76010acce7509775f6</anchor>
      <arglist>(a, b, c, d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR3</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a20c6ab13ea229a5b74079981271b06cd</anchor>
      <arglist>(a, b, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR2</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>abd4017412a5fd15fa1178a8ccdfc0201</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_CONCAT_COLOR1</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a90ffafe7a1d89932d930575af75a0ddd</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_BLACK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a043724f878efc719971f723a4d92a84d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_RED</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>abcd917cb35f72b774d84ee81afc2163c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_GREEN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aa13fecf1ab43ae10c79a0f8bdbed9b49</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_YELLOW</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a4fc1374b41c3b66434c11a58cac171e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_BLUE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ab425ef9a4ca402b1ac39443c317e54e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_MAGENTA</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a30821f9c459eb0e6302a8386408f7615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_CYAN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a36323a8866bed9b28665282e1491ad2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_FG_WHITE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ab441c7b162f6d598a7a42a96ede47715</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_BLACK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a6cb00a7e9010abe71653852315e7e63c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_RED</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a58929aceffefa7fe319147549ad607e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_GREEN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a4b4a6f764b796b729119b127919d0b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_YELLOW</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a908208bb9586e8e4af51d5b0c58f5b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_BLUE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a9065c6ca2865d2db98f740163de39637</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_MAGENTA</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aa828e82796953a349685d267542ad3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_CYAN</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a9def07af3e36ad6b185e295e169dfd90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_BG_WHITE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a43dad261a112ea2bc013caa4287a3b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_RESET</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>aac41ed0a29c21ed530fc40a65891ba7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_BOLD</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ad9fe9116a2d4bcd648583ed5db66bfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_UNDERLINE</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a5f5d28fecca1fd8c0d6e961078e1c0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_ANSI_TERM_ATTR_BLINK</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>a5bec963624ac2d111096807fa9c8ce13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANSI_COLOR</name>
      <anchorfile>_ansi_color_8h.html</anchorfile>
      <anchor>ae6efc8fc733b092f8c099d238123f946</anchor>
      <arglist>(...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Board.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_board_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>Board_init</name>
      <anchorfile>_board_8h.html</anchorfile>
      <anchor>a6c191e6138454022bba4dbcb4278f141</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_board_8h">ti_drivers_Board_Synopsis</docanchor>
    <docanchor file="_board_8h">ti_drivers_Board_Synopsis_Code</docanchor>
  </compound>
  <compound kind="file">
    <name>Button.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/apps/</path>
    <filename>_button_8h</filename>
    <includes id="_g_p_i_o_8h" name="GPIO.h" local="no" imported="no">ti/drivers/GPIO.h</includes>
    <class kind="struct">Button_Config</class>
    <class kind="struct">Button_HWAttrs</class>
    <class kind="struct">Button_Object</class>
    <class kind="struct">Button_Params</class>
    <member kind="typedef">
      <type>struct Button_Config</type>
      <name>Button_Config</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a81b89ce77e3e44e27e47f47c33a762f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Button_Config *</type>
      <name>Button_Handle</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a88fb45fbe7adae0d042a5c0236f4c930</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>enum Button_Events</type>
      <name>Button_Events</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>acdfd319931008644073df247327f93dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>Button_EventMask</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>af90bcd722e5b5d5e5855ecb7ad5bbe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Button_Callback</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a9ea227c0303faf9290cab0f5c5b8e061</anchor>
      <arglist>)(Button_Handle buttonHandle, Button_EventMask buttonEvents)</arglist>
    </member>
    <member kind="typedef">
      <type>enum Button_Pull</type>
      <name>Button_Pull</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a6acf77947342cf75769fde0b6cc7536c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Button_HWAttrs</type>
      <name>Button_HWAttrs</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a09f5b0032b30544686f551dd3bae4cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Button_Object</type>
      <name>Button_Object</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>af429db945680535818f99db254374e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Button_Params</type>
      <name>Button_Params</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>af849faed7b8830d903b15c57f2433199</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button_Events</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_PRESSED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6da5978c7286e0e858bb4cba454638b8287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_LONGPRESSED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6da3dbe9c7f766d60fa266f53c66d53a38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_RELEASED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6da9ddcce86c0ecb00a3b3e26b7289e3ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_CLICKED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6dadd2b047eb9c60a999dde2f8a924cc4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_LONGCLICKED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6dad513d57eeab56a7125f5f09d542167e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_EV_DOUBLECLICKED</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a616c2f9898615555ed92b3695ba41b6da971ecf310202ddd41308518a34a41a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Button_Pull</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a7540f487e4c8d28b980847bb68e708f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_PULL_DOWN</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a7540f487e4c8d28b980847bb68e708f5a04b8bbae8d344ee2e20924e09a3415c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_PULL_UP</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a7540f487e4c8d28b980847bb68e708f5adca1194f335c13c6410aaf523c7c7c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Button_PULL_NOTSET</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>a7540f487e4c8d28b980847bb68e708f5a5f4c3ead6067b22c30648b5c01f55765</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Button_close</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>ad3c055a77dbbe47d325bb0340d032594</anchor>
      <arglist>(Button_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Button_init</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>acd126a8ddb116ea8ba1f14b934d82286</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Button_Handle</type>
      <name>Button_open</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>aed14971430edf2a69570ed1f8567ed1b</anchor>
      <arglist>(uint_least8_t buttonIndex, Button_Callback buttonCallback, Button_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Button_Params_init</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>ab9d816a81c2c2767aa77be997c57a9d8</anchor>
      <arglist>(Button_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Button_getLastPressedDuration</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>ad0aa5471701cf9004520b01a2b2f73a3</anchor>
      <arglist>(Button_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Button_setCallback</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>aaf06f615b32fb85352e10dca952b97b6</anchor>
      <arglist>(Button_Handle handle, Button_Callback buttonCallback)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Button_gpioCallbackFxn</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>ad2d67d1527b966a2fc27c3bcda2e4924</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="variable">
      <type>const uint_least8_t</type>
      <name>Button_count</name>
      <anchorfile>_button_8h.html</anchorfile>
      <anchor>aa88510a4a5ebb61453d888916750c098</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_button_8h">ti_drivers_Button_Synopsis</docanchor>
    <docanchor file="_button_8h">ti_drivers_Button_Examples</docanchor>
    <docanchor file="_button_8h">ti_drivers_Button_Examples_config</docanchor>
  </compound>
  <compound kind="file">
    <name>Camera.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_camera_8h</filename>
    <class kind="struct">Camera_Params</class>
    <class kind="struct">Camera_FxnTable</class>
    <class kind="struct">Camera_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_CMD_RESERVED</name>
      <anchorfile>group___c_a_m_e_r_a___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaed2b3df48a75ec7e6e78320bb3a48eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_RESERVED</name>
      <anchorfile>group___c_a_m_e_r_a___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga13b3728d2673d72db6cc71744a0cbedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_SUCCESS</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa4d73b4da4ce113c8fb545d1f2649257</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_ERROR</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2863402eca66d26cf447fc02340a0d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaae8cae4253d68cc8ae921b63a74d1cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Camera_WAIT_FOREVER</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a1b85e579e68cecb09d1e2be70a6c56a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Camera_Config_ *</type>
      <name>Camera_Handle</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a95f2d51c0199015feef82e93ee545f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Camera_Callback</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>aba0b8eb4e05a4adb316be6390d7c3ade</anchor>
      <arglist>)(Camera_Handle handle, void *buf, size_t frameLength)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Camera_CloseFxn</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>ae6f2789af3ea253197fd2ce98db352f4</anchor>
      <arglist>)(Camera_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Camera_ControlFxn</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a9ce2e2dcde1d32bd25059ce6284ff6e3</anchor>
      <arglist>)(Camera_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Camera_InitFxn</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a3b6d043e96bfc1f1443521ef10ea01f3</anchor>
      <arglist>)(Camera_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>Camera_Handle(*</type>
      <name>Camera_OpenFxn</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a589bec3690a5b7c7890a0e411a1cad9f</anchor>
      <arglist>)(Camera_Handle handle, Camera_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Camera_CaptureFxn</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a1eebbf7cd299fbe5eac8feed76659094</anchor>
      <arglist>)(Camera_Handle handle, void *buffer, size_t bufferlen, size_t *frameLen)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Camera_Config_</type>
      <name>Camera_Config</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a32ba4ebe191fe708a75cbe09023efddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_CaptureMode</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a74c8a8a13eebddea16c33c726d096ba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_MODE_BLOCKING</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a74c8a8a13eebddea16c33c726d096ba8aad6127b321c6b22ffe1a50caee5a4fe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_MODE_CALLBACK</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a74c8a8a13eebddea16c33c726d096ba8ae2f15a1a358226aa81d59509f5a31191</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_HSyncPolarity</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a44b110de33cc32adba6d4a5807665987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_HSYNC_POLARITY_HIGH</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a44b110de33cc32adba6d4a5807665987af152b2a7d9da944fe46858efe055d095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_HSYNC_POLARITY_LOW</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a44b110de33cc32adba6d4a5807665987abcb1c81f87d7738515cd6b22afc09cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_VSyncPolarity</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a05347818dd7d8986a24a0fe1bc74d412</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_VSYNC_POLARITY_HIGH</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a05347818dd7d8986a24a0fe1bc74d412acde960b001c2a12b75b7fad97bf7ec54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_VSYNC_POLARITY_LOW</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a05347818dd7d8986a24a0fe1bc74d412a3f3b042b294fe98c91a6d50c7989db35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_PixelClkConfig</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a081a0e4af0b04d76a5476d22e6cf8657</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_PCLK_CONFIG_RISING_EDGE</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a081a0e4af0b04d76a5476d22e6cf8657ade970e1c835dea0c6d00f94fcf2abdca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_PCLK_CONFIG_FALLING_EDGE</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a081a0e4af0b04d76a5476d22e6cf8657a2cab0af65ebc5fd82af8bd118d20a6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_ByteOrder</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>ae5c1282ca99dd27ba0faf0f16f6e9904</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_BYTE_ORDER_NORMAL</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>ae5c1282ca99dd27ba0faf0f16f6e9904a819196064eea1c6f65a0aeaee5f99acb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_BYTE_ORDER_SWAP</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>ae5c1282ca99dd27ba0faf0f16f6e9904a90cfebe886cda289023a577c9b2cc831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_IfSynchoronisation</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a741d469cc903899255a1d3e76fdce47b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_INTERFACE_SYNC_OFF</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a741d469cc903899255a1d3e76fdce47baebefaa79a8ad8c68d84f3e0839dd7ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_INTERFACE_SYNC_ON</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a741d469cc903899255a1d3e76fdce47bab3f554e1d669f4d87917f3f43a45727b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_StopCaptureConfig</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a783564f838bc718a5b56f114027f5185</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_STOP_CAPTURE_IMMEDIATE</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a783564f838bc718a5b56f114027f5185a95410e8c6eb0a0ae4488f722931d4150</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_STOP_CAPTURE_FRAME_END</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a783564f838bc718a5b56f114027f5185a949d55caf973f4e50fbf1fa3e4246718</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Camera_StartCaptureConfig</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a97037da7c87b817ddb71ec7100c69ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_START_CAPTURE_IMMEDIATE</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a97037da7c87b817ddb71ec7100c69ca5a2e7b7db227fef9bf1d1083f1d167c3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Camera_START_CAPTURE_FRAME_START</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a97037da7c87b817ddb71ec7100c69ca5a5f6f496192b849174e7b652df2ca1823</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Camera_close</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a132c638e5ea994c1f06124f5762470b4</anchor>
      <arglist>(Camera_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Camera_control</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a24e145b3a8c57337dedcdeb2e6a9ece6</anchor>
      <arglist>(Camera_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Camera_init</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>ab0208c74b70ac5b50cb26c36f1f3ebad</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Camera_Handle</type>
      <name>Camera_open</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a6efd7498899d107ce3c92b96fbaec3c0</anchor>
      <arglist>(uint_least8_t index, Camera_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Camera_Params_init</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a522620ae3e5fb202b1f46f5535619564</anchor>
      <arglist>(Camera_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Camera_capture</name>
      <anchorfile>_camera_8h.html</anchorfile>
      <anchor>a0588184ada46a5ad668af0e685d943e8</anchor>
      <arglist>(Camera_Handle handle, void *buffer, size_t bufferlen, size_t *frameLen)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CameraCC32XXDMA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/camera/</path>
    <filename>_camera_c_c32_x_x_d_m_a_8h</filename>
    <includes id="_camera_8h" name="Camera.h" local="no" imported="no">ti/drivers/Camera.h</includes>
    <class kind="struct">CameraCC32XXDMA_HWAttrs</class>
    <class kind="struct">CameraCC32XXDMA_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>CameraCC32XXDMA_DMA_TRANSFER_SIZE</name>
      <anchorfile>_camera_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ac5d69c18e03422017c44d848977f03d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CameraCC32XXDMA_Object *</type>
      <name>CameraCC32XXDMA_Handle</name>
      <anchorfile>_camera_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a2d1c580e5aac1658739dbf1f650defc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Camera_FxnTable</type>
      <name>CameraCC32XXDMA_fxnTable</name>
      <anchorfile>_camera_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>adf92735f4b23687da3cf2bdc2979fdac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Capture.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_capture_8h</filename>
    <class kind="struct">Capture_Params</class>
    <class kind="struct">Capture_FxnTable</class>
    <class kind="struct">Capture_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>Capture_CMD_RESERVED</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>afcb908fe248e5aa0f0f83d6b0dac392a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Capture_STATUS_RESERVED</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a38272a451aa6ff7ea39a9e0eb2574df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Capture_STATUS_SUCCESS</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>abf666e626bf27880f104fc4e8489a4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Capture_STATUS_ERROR</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a438bf703ea8eea15d39ef8cd6e94322a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Capture_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a18b1cc41db33b8504db3d1378265c187</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Capture_Config_ *</type>
      <name>Capture_Handle</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a74b1322bfaa6efa86bb1f1f43b2ed714</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Capture_CallBackFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a52c0dd527e4793b37d1928f05897ea56</anchor>
      <arglist>)(Capture_Handle handle, uint32_t interval, int_fast16_t status)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Capture_CloseFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>ac94758009fcf136975142fae5a76908d</anchor>
      <arglist>)(Capture_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Capture_ControlFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>ac8581aab4251b0b86e5f1bbea29773cd</anchor>
      <arglist>)(Capture_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Capture_InitFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a10fd2424672b0307aa92d4ab205f8e70</anchor>
      <arglist>)(Capture_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>Capture_Handle(*</type>
      <name>Capture_OpenFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a24766acbc59d43d109626e14f49cc025</anchor>
      <arglist>)(Capture_Handle handle, Capture_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int32_t(*</type>
      <name>Capture_StartFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a4770aa835a24e73223f22952fad0ce6b</anchor>
      <arglist>)(Capture_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Capture_StopFxn</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>af24f67ee7aa30b79ab1745e79fe793d3</anchor>
      <arglist>)(Capture_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Capture_Config_</type>
      <name>Capture_Config</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a3945a1b3420ba168ee166cb8e7931911</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Capture_Mode</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_RISING_EDGE</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231ad86339bd12f32a5783138536e92bf35d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_FALLING_EDGE</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231ad81d8c687bce527cf986b738dcc0bc5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_ANY_EDGE</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231a3cda7df083b56d1e1ed54d19d1813528</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_RISING_EDGE_FALLING_EDGE</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231a392ecf3f1f531cd115aa0ac9b6cb8f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_FALLING_EDGE_RISING_EDGE</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a6382e7d47f7d4551ff15a421e79da231aeb947d640b86ef0b36965910e4bd5750</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Capture_PeriodUnits</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aaca480a01a184f77deba46e78fd61037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_PERIOD_US</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aaca480a01a184f77deba46e78fd61037a93407c4aa7ee40cfe498082b7cf2f246</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_PERIOD_HZ</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aaca480a01a184f77deba46e78fd61037a7a720a1bd6f1c959c00717481cfa3272</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_PERIOD_COUNTS</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aaca480a01a184f77deba46e78fd61037a3803ec2ba167766ee6a4b06f4a21d86c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Capture_PERIOD_NS</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aaca480a01a184f77deba46e78fd61037a0ad1bae5f1498c86c2550f4c8e80fd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Capture_close</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a1e5d3de290f67a950f52571e6cff185f</anchor>
      <arglist>(Capture_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Capture_control</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a87e62f4b1cc1800afecf54b74fd58e63</anchor>
      <arglist>(Capture_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Capture_init</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>ae892a54311895e6cc4640276ed1bfb1d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Capture_Handle</type>
      <name>Capture_open</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>af627bf1b9d94ec29bea351e7d4cc9c34</anchor>
      <arglist>(uint_least8_t index, Capture_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Capture_Params_init</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>ae8cb953d04c279876165c7697726b202</anchor>
      <arglist>(Capture_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Capture_start</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>aedfad453a8fc2f449c3680b397421e9a</anchor>
      <arglist>(Capture_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Capture_stop</name>
      <anchorfile>_capture_8h.html</anchorfile>
      <anchor>a82c4e453c52c4ecb7e4f87544e0e1460</anchor>
      <arglist>(Capture_Handle handle)</arglist>
    </member>
    <docanchor file="_capture_8h">ti_drivers_Capture_Overview</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Usage</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Synopsis</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Synopsis_Code</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Examples</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Examples_open</docanchor>
    <docanchor file="_capture_8h">ti_drivers_Capture_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>CaptureCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/capture/</path>
    <filename>_capture_c_c32_x_x_8h</filename>
    <includes id="_capture_8h" name="Capture.h" local="no" imported="no">ti/drivers/Capture.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">CaptureCC32XX_HWAttrs</class>
    <class kind="struct">CaptureCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_01</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaab6f92096fe054b126140412c4aca3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_02</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga89546c923e06750d54018fa7ca400cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_03</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga03bd2e7d3aea434e577df20537563dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_04</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa4906df49fe0732139dce8f1f8ee723d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_05</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf2b1e61b620b825511af385ef5a3f9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_06</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gad83dbb82c35acc6a2b1804d386bca3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_07</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab5f47fc3b13c4444838eca9a6d2cdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_15</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa5354f8a446fe1c99c33a08d59d038c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_17</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa92ca8344ad77c6c2003713301533193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_50</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab0cdb9a66537366b684b714a091b2f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_53</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga97028e10717b482f1761b7688d79dc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_55</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga93ea1364563c9c42e85016b6bc41b7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_57</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga78d1d540dbbd4998a6d229e5e5c72f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_60</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga73ed11859cb1948650013bfd9f798b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_61</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa0013ba561bdc94f115ae0dc1efa107e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_63</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gafda041247ad55e7d661d3a15e4a7be29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_64</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3ebeec1d545d6a20399d2d1555022677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Capture_FxnTable</type>
      <name>CaptureCC32XX_fxnTable</name>
      <anchorfile>_capture_c_c32_x_x_8h.html</anchorfile>
      <anchor>a81fe931b79083ddc02c1c86fcd4a70f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_01</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaab6f92096fe054b126140412c4aca3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_02</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga89546c923e06750d54018fa7ca400cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_03</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga03bd2e7d3aea434e577df20537563dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_04</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa4906df49fe0732139dce8f1f8ee723d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_05</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf2b1e61b620b825511af385ef5a3f9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_06</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gad83dbb82c35acc6a2b1804d386bca3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_07</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab5f47fc3b13c4444838eca9a6d2cdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_15</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa5354f8a446fe1c99c33a08d59d038c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_17</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa92ca8344ad77c6c2003713301533193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_50</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab0cdb9a66537366b684b714a091b2f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_53</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga97028e10717b482f1761b7688d79dc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_55</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga93ea1364563c9c42e85016b6bc41b7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_57</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga78d1d540dbbd4998a6d229e5e5c72f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_60</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga73ed11859cb1948650013bfd9f798b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_61</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa0013ba561bdc94f115ae0dc1efa107e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_63</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gafda041247ad55e7d661d3a15e4a7be29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_64</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3ebeec1d545d6a20399d2d1555022677</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/crypto/</path>
    <filename>_crypto_c_c32_x_x_8h</filename>
    <class kind="struct">CryptoCC32XX_AesAadInputParams</class>
    <class kind="union">CryptoCC32XX_AesAadParams</class>
    <class kind="struct">CryptoCC32XX_AesParams</class>
    <class kind="struct">CryptoCC32XX_DesParams</class>
    <class kind="union">CryptoCC32XX_EncryptParams</class>
    <class kind="struct">CryptoCC32XX_HmacParams</class>
    <class kind="struct">CryptoCC32XX_Config</class>
    <class kind="struct">CryptoCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_CMD_RESERVED</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a92c0453486dee140c2052c655563f434</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_RESERVED</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a8bcb9880f738627923d7880cde4eaf9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_SUCCESS</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac467bcedd5da2e2a524b35312b26a729</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_ERROR</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a8eaf905c38d00e30fd8f9e6f60fe48b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a45b4166204bb8da882597ccb95fe0637</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_ERROR_VERIFY</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab386c59bb7f245ae3154ba245808eb78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_STATUS_ERROR_NOT_SUPPORTED</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae723482b9a81a38e219552c14cb0e825</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_MAX_TYPES</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>adc106538a31a4cd5db6f88b495c3b6d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_MD5_BLOCK_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>acd388f6d67c169197ab055a687ca2e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_SHA1_BLOCK_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a68e68dfdbfba6f97d502693503eadd22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_SHA256_BLOCK_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>aebef5761e1ee71db46568c77a111d444</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_MD5_DIGEST_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a22c61979969cae8019dfaa3b34a4b51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_SHA1_DIGEST_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa37e48228b8700d78461c3197bbf24c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_SHA256_DIGEST_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>af611c112ed01c7b6e27dd9556ca66d0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_MAX_DIGEST_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae06b568567100eaea9fb1053c86f8200</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CryptoCC32XX_MAX_BLOCK_SIZE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a964c57864c3d46f6462cbc04f3a11bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CryptoCC32XX_Config *</type>
      <name>CryptoCC32XX_Handle</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>abeebc104db919f58fbeb3ed3d87eca6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC32XX_Type</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a19644d0a505aee6bc6e904a52cf1cd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a19644d0a505aee6bc6e904a52cf1cd3eac54409fdc8f1158b985529b320325d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a19644d0a505aee6bc6e904a52cf1cd3eab15ffdf5780f4e4d6946db0d276e5605</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_HMAC</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a19644d0a505aee6bc6e904a52cf1cd3ead7a35216d18ce8239afc2a92dfd426f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC32XX_EncryptMethod</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_ECB</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7a34ead2f5b7e05f3a0d79bebe8da67520</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_CBC</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7a12bf6db085282fba65f64756e62d6033</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_CTR</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7a53ef12b433c92f60da3f43477b965fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_ICM</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7ae428b04702c3a21eb2dabea650471492</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_CFB</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7aa22a84b6253ee9a79d73fcb1c315a898</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_GCM</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7ae1987d19b9307d7b24a604c2953b949a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_CCM</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7a0bd97c898f7db438ac91fccd63137be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES_ECB</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7a3ca745ef7d637ccddd967352db59e193</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES_CBC</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7aa679e2e406dc95100ef7fc43f1d13305</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES_CFB</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a192d3aa3b4e70212f9aa0d02db20a0f7aa5d70d96687f379594815802ad9710d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC32XX_HmacMethod</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a41562672366863573601f9804e745a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_HMAC_MD5</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a41562672366863573601f9804e745a52a71336928d74b7736b056078e2674c6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_HMAC_SHA1</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a41562672366863573601f9804e745a52a8ee76eef6a147e203b81e82ce423df5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_HMAC_SHA224</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a41562672366863573601f9804e745a52a4d3a1b4671728039f89c32bab72ac714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_HMAC_SHA256</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a41562672366863573601f9804e745a52a4f12298bf66e2e168610c8c24f859faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC32XX_AesKeySize</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f3a0d67365500c8faf37db349ccd5ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_KEY_SIZE_128BIT</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f3a0d67365500c8faf37db349ccd5caaf6862c735cb68f66057085b107e33582</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_KEY_SIZE_192BIT</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f3a0d67365500c8faf37db349ccd5caa17d47b9931f9dcf05d5b7288473ad792</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_AES_KEY_SIZE_256BIT</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f3a0d67365500c8faf37db349ccd5caae3f924d0fd0394267ac6c00cf78704d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CryptoCC32XX_DesKeySize</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9bc1c433559c0b9112ffc84d35338bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES_KEY_SIZE_SINGLE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9bc1c433559c0b9112ffc84d35338bf5ad6b5ee54d07f9864f9566aede6b70f8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CryptoCC32XX_DES_KEY_SIZE_TRIPLE</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9bc1c433559c0b9112ffc84d35338bf5ad9d8048a04492517329927602d327547</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC32XX_close</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5c702224da5a00669a7f3118bc597b7b</anchor>
      <arglist>(CryptoCC32XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC32XX_init</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>afc604beb66b331d175456758a038f595</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>CryptoCC32XX_Handle</type>
      <name>CryptoCC32XX_open</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a76f8996505a6022dcf3d1d1338a42f12</anchor>
      <arglist>(uint32_t index, uint32_t types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoCC32XX_HmacParams_init</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab651fe16dd7acc2b616300fe8c5ed1cc</anchor>
      <arglist>(CryptoCC32XX_HmacParams *params)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>CryptoCC32XX_encrypt</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>a358670dff935e00bcbb7ebb3b8e34de3</anchor>
      <arglist>(CryptoCC32XX_Handle handle, CryptoCC32XX_EncryptMethod method, void *pInBuff, size_t inLen, void *pOutBuff, size_t *outLen, CryptoCC32XX_EncryptParams *pParams)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>CryptoCC32XX_decrypt</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad595e60ce5e3b1d9effc738df2a548c7</anchor>
      <arglist>(CryptoCC32XX_Handle handle, CryptoCC32XX_EncryptMethod method, void *pInBuff, size_t inLen, void *pOutBuff, size_t *outLen, CryptoCC32XX_EncryptParams *pParams)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>CryptoCC32XX_sign</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab240f1d5ed6f878db523b09902d466ba</anchor>
      <arglist>(CryptoCC32XX_Handle handle, CryptoCC32XX_HmacMethod method, void *pBuff, size_t len, uint8_t *pSignature, CryptoCC32XX_HmacParams *pParams)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>CryptoCC32XX_verify</name>
      <anchorfile>_crypto_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae90ba3618dfccfbaaa6942b476525c8c</anchor>
      <arglist>(CryptoCC32XX_Handle handle, CryptoCC32XX_HmacMethod method, void *pBuff, size_t len, uint8_t *pSignature, CryptoCC32XX_HmacParams *pParams)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptoUtils.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/cryptoutils/utils/</path>
    <filename>_crypto_utils_8h</filename>
    <member kind="function">
      <type>bool</type>
      <name>CryptoUtils_buffersMatch</name>
      <anchorfile>_crypto_utils_8h.html</anchorfile>
      <anchor>acc7981f58050225dfd3624d27b46650b</anchor>
      <arglist>(const void *buffer0, const void *buffer1, size_t bufferByteLength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CryptoUtils_buffersMatchWordAligned</name>
      <anchorfile>_crypto_utils_8h.html</anchorfile>
      <anchor>aca64829fc33d392aa0fb731982268141</anchor>
      <arglist>(const uint32_t *buffer0, const uint32_t *buffer1, size_t bufferByteLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoUtils_reverseBufferBytewise</name>
      <anchorfile>_crypto_utils_8h.html</anchorfile>
      <anchor>a5272fb483ed7d4851fb80c75262b0ed8</anchor>
      <arglist>(void *buffer, size_t bufferByteLength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CryptoUtils_reverseCopyPad</name>
      <anchorfile>_crypto_utils_8h.html</anchorfile>
      <anchor>a4bf025e2bcdeb90a52f42bca4566e61b</anchor>
      <arglist>(const void *source, void *destination, size_t sourceLength)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>disclaimer.dox</name>
    <path>/db/vendors/ti/swtools/1_44_00_04/Linux/etc/doc_api/</path>
    <filename>disclaimer_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Display.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_8h</filename>
    <class kind="struct">Display_Params</class>
    <class kind="struct">Display_FxnTable</class>
    <class kind="struct">Display_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANY</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga18e865923359fab7d26c09dc169caf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_INVALID</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga09ec0c157c10708af6c2fec8e5b26805</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LCD</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga9b8f62fe443d3a584f598392d233f38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_UART</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga0257ac5b377a67eb525400e4c2a4f0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LOG</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gaaf8a10cc8b8de9d38f144d44f968b1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ITM</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gae19f6c6b10d4e3d491819fb02ae4c865</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_HOST</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga159af3b59e8fa662fc153a0307fd1817</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANSI</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gabdee477121870fb7102a9a572c5cdc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_GRLIB</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga498ae390d2feea643ec3f23533859f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_MAXINDEX</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a61eb3c7b2406cb61825a0924b066d1ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga99c2401cd11ea3b49e5e3e4ffac5c886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gacb7031dd18c19e3ecb86d97cb7b17abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_SUCCESS</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f6a4a10f24cf55bc13d1750e38bb946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_ERROR</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf91798b06dd95fce8063b7328420fab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3e506301dbdad496a95e12c3b17efc6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_CLOSE</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga5be24ea4a3ddfd94efbb513d649ac88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_OPEN</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>gae12206be356c6b2ce885b5ada9b1854d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clearLine</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a4dacdea7e09ccbb7fc6464bb9af6c2cd</anchor>
      <arglist>(handle, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_isIndex</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a1c085d5459020e806cafd71632e3d8ed</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_isMetaType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ac0fca232ed955fd16bdf1d7b1b560a9e</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_init</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a587814881d96c49960b4ae2b73199fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_open</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3aa87973a354d4fd6a2969f764e8afe6</anchor>
      <arglist>(id, params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Params_init</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a4fb2982f52995a80194fbb107883a183</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clear</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ab5a031704e2a1a9525d2c1a92346f842</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_clearLines</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>abae2ae910c2c533dbf11d24c656609d1</anchor>
      <arglist>(handle, fromLine, toLine)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_printf</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a371873a0f96f2e895bf92af7e586b244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print0</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>acd3685718132aa56f51827b28cab9717</anchor>
      <arglist>(handle, line, col, fmt)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print1</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a32faeb481b205f15a47fe8a57b15050c</anchor>
      <arglist>(handle, line, col, fmt, a0)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print2</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a38c04b221312d6810860cc798c5bd87a</anchor>
      <arglist>(handle, line, col, fmt, a0, a1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print3</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ac4666e03680fc5c36ba2d186fce9f8f1</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print4</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a346f79ffd49fb4b049812cff58e1c55b</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2, a3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_print5</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a9c5ad419aa15ab0f127aec0e81a4706a</anchor>
      <arglist>(handle, line, col, fmt, a0, a1, a2, a3, a4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_getType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a16a3d662df61924feff0eb34e5439794</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_control</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ad623d21e3c6d821bf6f4bdcfa05ec21f</anchor>
      <arglist>(handle, cmd, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_close</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>aea13e4e023f2b8020bed2e888cf98599</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Config *</type>
      <name>Display_Handle</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a045a26811755aabf1886d982c49e54ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_initFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a119c5ae929dff42a62b7ca51a3cad7ef</anchor>
      <arglist>)(Display_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>enum Display_LineClearMode</type>
      <name>Display_LineClearMode</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>af2fe59ceb3d8c9276018f1ef46e4251c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Params</type>
      <name>Display_Params</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a6b9502df6569d4ba369c01b50c7cdb9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Display_Handle(*</type>
      <name>Display_openFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3119ce57fb115a68a37d7ec274cb0001</anchor>
      <arglist>)(Display_Handle handle, Display_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_clearFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>af09f13daab765e83adfac09551e3ee51</anchor>
      <arglist>)(Display_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_clearLinesFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a8350bd25609f51433e21b502ed50f63a</anchor>
      <arglist>)(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_vprintfFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>aef0d17c065c728b72212da10297fa3c2</anchor>
      <arglist>)(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Display_closeFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>ade8c953094781efff0f10ee0696a984f</anchor>
      <arglist>)(Display_Handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>Display_controlFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a67b559ffeebd829633512c4381858cc1</anchor>
      <arglist>)(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int(*</type>
      <name>Display_getTypeFxn</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a2800d49b89aa7e3d9a2ec758d60358f1</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_FxnTable</type>
      <name>Display_FxnTable</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>abdb33c07acce5b6e5affae6725331399</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Display_Config</type>
      <name>Display_Config</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a154de9b84d3b0d30daa9d729d65a6d5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Display_LineClearMode</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_NONE</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377a8f60ab659badd77a0591a5357cfe5f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_LEFT</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377aabdeba4f8c5781eaff441a3778e6cc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_RIGHT</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377affc02447ea45e2c3db516a7b211b3b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISPLAY_CLEAR_BOTH</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3d9ab99875c344491227a76f1d47e377a14588c1117513fc430c964428f62484e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>Display_doOpen</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a3e9f4eee43bc9b70a4944e1a3961f7d2</anchor>
      <arglist>(uint32_t id, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doParamsInit</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>aff22833ae1cdccbbde3a57e82f85896c</anchor>
      <arglist>(Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClear</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a68955bb81b0db818bf2688695dca1e4a</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClearLines</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a443fc3167f9ce70bebf9e016443c6383</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doPrintf</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a9f61c57f4ba73cf430b839df5144d306</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doClose</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>add67d9c5e921786ec12d8029fe6096d1</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Display_doGetType</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a2746bc2b6ed341867e8434ed79dfd4b6</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doControl</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a330f4fa1032c03e41d3efee191b9670b</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Display_doInit</name>
      <anchorfile>_display_8h.html</anchorfile>
      <anchor>a1b97c9b7855ceba5ddd5a5aaaa15c907</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_display_8h">ti_drivers_Display_Overview</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Usage</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Synopsis</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Synopsis_Code</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_open</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_float</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_host</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Examples_lcd</docanchor>
    <docanchor file="_display_8h">ti_drivers_Display_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>DisplayExt.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_ext_8h</filename>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayGrLib_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DisplayExt_getGraphicsContext</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a1a91f53b6a55be41a9e1fefb6057a5d2</anchor>
      <arglist>(handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayGrLib_Object</type>
      <name>DisplayGrLib_Object</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a10bc4ee8d6e6e8694b4df64e39375a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayGrLib_Object *</type>
      <name>DisplayGrLib_Handle</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>a4f7c1242c4a278989925cff6ff214fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Graphics_Context *</type>
      <name>DisplayExt_doGetGraphicsContext</name>
      <anchorfile>_display_ext_8h.html</anchorfile>
      <anchor>aeb6dd2d48a05708b28d372a59cfcd95b</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayHost.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_host_8h</filename>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayHost_HWAttrs</class>
    <class kind="struct">DisplayHost_Object</class>
    <member kind="typedef">
      <type>struct DisplayHost_HWAttrs</type>
      <name>DisplayHost_HWAttrs</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a48e0ec430ab0c52fdab7c6c7caf541e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayHost_Object</type>
      <name>DisplayHost_Object</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a253a190cc3419385027ab13f49993fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayHost_Object *</type>
      <name>DisplayHost_Handle</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a593313134b4113afcfc7bf6ac036134c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_init</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a153702ab6f849ceb8c0c9a77aeb8a95d</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayHost_open</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ab01c955367cf2e4713bba470e1c0804f</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_clear</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a83e16fad5a0a4f11f211f5a6352249d5</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_clearLines</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>af8197e0a9f28d818e400fac50d8da98a</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_vprintf</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>afb93438434aec1acd9d427696f62ab74</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayHost_close</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a18d7e0d4baec8b86da93ede7ed9709dd</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayHost_control</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>a404df745dd4de12e069ba923ef5e160e</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayHost_getType</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ae9245a2419d54546a85201237d4f2550</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayHost_fxnTable</name>
      <anchorfile>_display_host_8h.html</anchorfile>
      <anchor>ad22670f7762565fe9060de8d9b335d9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplaySharp.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_sharp_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplaySharpColor_t</class>
    <class kind="struct">DisplaySharp_HWAttrsV1</class>
    <class kind="struct">DisplaySharp_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAYSHARP_CMD_SET_COLORS</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga27b9623d9abc7aa7eeae74ea7d77cd0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_HWAttrsV1</type>
      <name>DisplaySharp_HWAttrsV1</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>ae2b5bf32cfcefe11aebf7d0edeab6c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>DisplaySharp_Buf_96x96</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a252644281442bd3d66e41b9f4bf668f3</anchor>
      <arglist>[96 *96/8]</arglist>
    </member>
    <member kind="typedef">
      <type>uint8_t</type>
      <name>DisplaySharp_Buf_128x128</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>ad8ce0f227370642020f4950d846f099b</anchor>
      <arglist>[128 *128/8]</arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_Object</type>
      <name>DisplaySharp_Object</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a5c889fe79898e80e246386ed4b147a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplaySharp_Object *</type>
      <name>DisplaySharp_Handle</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>aa5921b9b7a4e44e010d86b858f3de52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_init</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>af86aae1188cffe017e3cb57d254365e4</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplaySharp_open</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a97a0ae6d2811237e4b0cddac24e04880</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_clear</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>adbb2a9fd5349f5ae4cb881a57da90c52</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_clearLines</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a6ca5f8e56b7d7e14d1c8facc1364edb1</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_vprintf</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a683e53f03ce8c6cbfb232f02f2eacbc2</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplaySharp_close</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a681c21997c6cc14058bba72bc0586ef4</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplaySharp_control</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a4ab2badbd3b5e9ce136a2d5d6766674a</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplaySharp_getType</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a84b926652d7f687008dc7cd081325c61</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplaySharp_fxnTable</name>
      <anchorfile>_display_sharp_8h.html</anchorfile>
      <anchor>a0177a7fbf362ab53a6fe3d520dd62017</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayUart.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_uart_8h</filename>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayUart_HWAttrs</class>
    <class kind="struct">DisplayUart_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DisplayUart_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7b2bde64caaa249727f356615feff4fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DisplayUart_SCROLLING</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a52c76b1a3e182b387cb009f1d8cad815</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_HWAttrs</type>
      <name>DisplayUart_HWAttrs</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a39d1c3ae2b6e69378e721a2730b5b8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_Object</type>
      <name>DisplayUart_Object</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ae0a2eead2881eb2daaeb792fb471c8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart_Object *</type>
      <name>DisplayUart_Handle</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>af5f02e5764d31e98b6c9862c07fa1d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_init</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a2a214b758f2317eb8e40500e38d87c78</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_init</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a664726066460a13bf0ddab73c5f7239b</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUartMin_open</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a78dc4bf7f970c0c266727780d1b003ac</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUartAnsi_open</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a74937e01f8d784f5525bf2c765c83dd9</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_clear</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a05519d14668d58644d8a2255e014c498</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_clear</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a48e8776c969155fca1101048b6d292c4</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_clearLines</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ac10c2786c244506500adb2fb319cf77e</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_clearLines</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>aba62f89a48e90b7d57bf46042ddacc0a</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_vprintf</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>afffb6c5de22ad2edc68e2d36f8f695f4</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_vprintf</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a57177c3f970097ce8905a8e61ae6476c</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartMin_close</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>ad2f4c6ee02d2d44cd8f908149e47877f</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUartAnsi_close</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a6b1c4b7ed41d355a895bb0a8c800a130</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUartMin_control</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a482628ebb74ebd192adc42ebab2ae947</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUartAnsi_control</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7abb1c2007abac2b0bb86366c21a70b7</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUartMin_getType</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a33a655668ba7bda2ae230aea2a33147f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUartAnsi_getType</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a9164c7ab723217f1a002e443ecf95ed7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUartMin_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a7b5ba2e3b651007636f57ae30d5a413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUartAnsi_fxnTable</name>
      <anchorfile>_display_uart_8h.html</anchorfile>
      <anchor>a025c5a633ea702d14b294072f325f9aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DisplayUart2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/</path>
    <filename>_display_uart2_8h</filename>
    <includes id="_u_a_r_t2_8h" name="UART2.h" local="no" imported="no">ti/drivers/UART2.h</includes>
    <includes id="_display_8h" name="Display.h" local="no" imported="no">ti/display/Display.h</includes>
    <class kind="struct">DisplayUart2_HWAttrs</class>
    <class kind="struct">DisplayUart2_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>DisplayUart2_SCROLLING</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>aca20083081af57e114cca057e9c7a470</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct DisplayUart2_Object *</type>
      <name>DisplayUart2_Handle</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a92a0040189b014183013f033c7623e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Min_init</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a4ba8103114ba6eeaa1806ee3831429e9</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Ansi_init</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>aa4b719b3e4b94d790000668753fe6688</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUart2Min_open</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a853458a8a1bbe4c400fcfac8a4b27be4</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>Display_Handle</type>
      <name>DisplayUart2Ansi_open</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>adf9ec1f776b49351ce889d89c67b98f0</anchor>
      <arglist>(Display_Handle, Display_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Min_clear</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a4e1dc949baa0f90ca880c74dcfa7c05c</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Ansi_clear</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a4e801a706946ce87543af3ae7bcf11f9</anchor>
      <arglist>(Display_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Min_clearLines</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a249fabb75b9b06ba52cc98d14723fcc1</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Ansi_clearLines</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>ab37aff8e711af0b755706b7e0eeb5b56</anchor>
      <arglist>(Display_Handle handle, uint8_t fromLine, uint8_t toLine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Min_vprintf</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a888408c1aa337341dae9100b55910677</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Ansi_vprintf</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>aabdf2532ea7b81c6afc05de78f5a3b26</anchor>
      <arglist>(Display_Handle handle, uint8_t line, uint8_t column, const char *fmt, va_list va)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Min_close</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a20a68c23f2e6dca2e0f5332863c43301</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DisplayUart2Ansi_close</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a3d45eedcb53e4a026f9f6502ff3a4dcc</anchor>
      <arglist>(Display_Handle)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUart2Min_control</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a644e61090589d597900c676ff794cc42</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>DisplayUart2Ansi_control</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a0d80628761115de879d4401dc7afab76</anchor>
      <arglist>(Display_Handle handle, unsigned int cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUart2Min_getType</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>acad946ed0ef6ad1f5c358608377b1d01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>DisplayUart2Ansi_getType</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a4709d3ac506abe52f32f11bfa25e6db3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUart2Min_fxnTable</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a44ef06399448c39146856585497b0d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Display_FxnTable</type>
      <name>DisplayUart2Ansi_fxnTable</name>
      <anchorfile>_display_uart2_8h.html</anchorfile>
      <anchor>a1597d08d64b1f0b19f009ca065b31aac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>doxygen_cc32xx.txt</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/source/etc/</path>
    <filename>doxygen__cc32xx_8txt</filename>
  </compound>
  <compound kind="file">
    <name>doxygen_drivers.txt</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/source/etc/</path>
    <filename>doxygen__drivers_8txt</filename>
    <member kind="function">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming</type>
      <name>interface</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a95652fbf6de05f7d50abac8cce2f53b7</anchor>
      <arglist>(API) which enables seamless migration across the SimpleLink SDK portfolio. Unless specifically stated otherwise</arglist>
    </member>
    <member kind="function">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating</type>
      <name>system</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a5434d7935a5a2f93c52488d151f814c1</anchor>
      <arglist>(RTOS) application. All TI-Driver implementations utilize the Power driver APIs to ensure low power consumption at all times. The drivers support TI-RTOS(SYS/BIOS) and NoRTOS with examples provided for each variant. Lastly</arglist>
    </member>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating the drivers are supported by SysConfig to enable easy re configuration of the drivers par</type>
      <name>Features</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a7ac43aa2679d024e187253360e9e8ec9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>This file contains snippets to be used in the TI Driver s documentation *******************************************************************************TI Drivers is a collective of peripheral drivers for TI s SimpleLink portfolio The drivers are centered around a portable application programming TI Drivers are designed to be thread safe and work seamlessly inside of a real time operating the drivers are supported by SysConfig to enable easy re configuration of the drivers par block</type>
      <name>execution</name>
      <anchorfile>doxygen__drivers_8txt.html</anchorfile>
      <anchor>a98c84171d4ef97ab1360cb122fecefe8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GPIO.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_g_p_i_o_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_RESERVED</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9338b76015f438019f21c32922f3308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_SUCCESS</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>acef3ff21200e0cff860ddd2b64adac07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_ERROR</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9128d9c1019c04160cfd76af9dff919a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>GPIO_PinConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a7f5d979226db633309b3fdc0f4a8aef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>GPIO_CallbackFxn</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a46b0c9afbe998c88539abc92082a1173</anchor>
      <arglist>)(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_clearInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a870cd0b05ac6fae2a930c4ea3298b570</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_disableInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a33005dec4e3a9a58322dd33779990a86</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_enableInt</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a31c4e65b3855424418262e35521c7051</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_getConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>adf0153b2f2ab21828521aec8eb568d39</anchor>
      <arglist>(uint_least8_t index, GPIO_PinConfig *pinConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_init</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a7aaec489dca5ac4d278d2eb3ae38a2d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint_fast8_t</type>
      <name>GPIO_read</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a39deeae6a6b28d3c56693a668601177e</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_setCallback</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a24c401f32e65f60f11a1594fdafb9d2a</anchor>
      <arglist>(uint_least8_t index, GPIO_CallbackFxn callback)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>GPIO_setConfig</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a015b75143cc3b8914cc298c5c4fc097e</anchor>
      <arglist>(uint_least8_t index, GPIO_PinConfig pinConfig)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_toggle</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a202292e331e2eb9ccf97f4caab2e97aa</anchor>
      <arglist>(uint_least8_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GPIO_write</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>adf697825b43c26c0126173780e57eb58</anchor>
      <arglist>(uint_least8_t index, unsigned int value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_RESERVED</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9338b76015f438019f21c32922f3308e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_SUCCESS</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>acef3ff21200e0cff860ddd2b64adac07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_STATUS_ERROR</name>
      <anchorfile>_g_p_i_o_8h.html</anchorfile>
      <anchor>a9128d9c1019c04160cfd76af9dff919a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Synopsis</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Synopsis_Code</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Examples</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Example_callback</docanchor>
    <docanchor file="_g_p_i_o_8h">ti_drivers_GPIO_Example_reconfigure</docanchor>
  </compound>
  <compound kind="file">
    <name>GPIOCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/gpio/</path>
    <filename>_g_p_i_o_c_c32_x_x_8h</filename>
    <includes id="_g_p_i_o_8h" name="GPIO.h" local="no" imported="no">ti/drivers/GPIO.h</includes>
    <class kind="struct">GPIOCC32XX_Config</class>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf51e71d53bee1689ca94447f0a203446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_00</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga66c5e06961dde0e35aa21aad4a39007d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_01</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gab74ecf0b1dc2503343eb75a8d2b92e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_02</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga5bfae7c21db05d71a287cc8d3d346c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_03</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8f6b4bc9a89034d93418c3abd10043d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_04</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa909ccf5ac289cf70a1cd4871d47f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_05</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga054dc451d2c1c78ad0d1bbd6bcb71f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_06</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga04353d72534d9fc0fe734979273cce31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_07</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeab3712581a5799dc5ecefb750a18df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_08</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1000d5aec64eaaa83312960c58382417</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_09</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga97d27cf77d13a4bc0bd6bb7fce8841c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_10</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa6b23d6bc6e6500ed2c6d3682ce860e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_11</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga290cb2051ced416f4648a37e5e81bdc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_12</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4d01d74e6136bc8fcd7e88b7daeedc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_13</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3b47fcbc24e39daac60d9597c7d9809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_14</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga605a3a7fbd2a02b498130df909f30e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_15</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga72c8cc238b2a732ebbfdb1e1843618c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_16</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf843db0af8bd59983e1bbaca484f51a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_17</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga49771649b024dd040f94e7c58c083146</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_22</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaed3b842467af76448b6bb36424d43927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_23</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacd47d2ef240fd1f5393fc6a33b55b5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_24</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga17d47034e903846b6eacb38845fbe268</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_25</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9cc07e8692514c1d4bbd3f52640057cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_26</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga81e6b1f3630c7f0dd7339a2e6cf3457a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_27</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf9e28ebb77e0c0d835775586cca6ac52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_28</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga7cdaec1fbdec4241fdaab8716ad4a20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_29</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga25ffb67bdab2e98ef1fa1f2915d77ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_30</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16c596c6a80c55c1b8073823f4525e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_31</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadab844d3954882a6af78b1c7429692a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_32</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga0faf3ed7f29dc8b8f874213f31318f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_USE_STATIC</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gabfa67fcbdc5c5304f95ef46853638395</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf51e71d53bee1689ca94447f0a203446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_00</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga66c5e06961dde0e35aa21aad4a39007d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_01</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gab74ecf0b1dc2503343eb75a8d2b92e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_02</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga5bfae7c21db05d71a287cc8d3d346c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_03</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8f6b4bc9a89034d93418c3abd10043d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_04</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa909ccf5ac289cf70a1cd4871d47f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_05</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga054dc451d2c1c78ad0d1bbd6bcb71f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_06</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga04353d72534d9fc0fe734979273cce31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_07</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeab3712581a5799dc5ecefb750a18df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_08</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1000d5aec64eaaa83312960c58382417</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_09</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga97d27cf77d13a4bc0bd6bb7fce8841c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_10</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa6b23d6bc6e6500ed2c6d3682ce860e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_11</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga290cb2051ced416f4648a37e5e81bdc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_12</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4d01d74e6136bc8fcd7e88b7daeedc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_13</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3b47fcbc24e39daac60d9597c7d9809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_14</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga605a3a7fbd2a02b498130df909f30e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_15</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga72c8cc238b2a732ebbfdb1e1843618c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_16</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf843db0af8bd59983e1bbaca484f51a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_17</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga49771649b024dd040f94e7c58c083146</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_22</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaed3b842467af76448b6bb36424d43927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_23</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacd47d2ef240fd1f5393fc6a33b55b5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_24</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga17d47034e903846b6eacb38845fbe268</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_25</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9cc07e8692514c1d4bbd3f52640057cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_26</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga81e6b1f3630c7f0dd7339a2e6cf3457a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_27</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf9e28ebb77e0c0d835775586cca6ac52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_28</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga7cdaec1fbdec4241fdaab8716ad4a20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_29</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga25ffb67bdab2e98ef1fa1f2915d77ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_30</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16c596c6a80c55c1b8073823f4525e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_31</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadab844d3954882a6af78b1c7429692a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_32</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga0faf3ed7f29dc8b8f874213f31318f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_USE_STATIC</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gabfa67fcbdc5c5304f95ef46853638395</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>I2C.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_i2_c_8h</filename>
    <class kind="struct">I2C_Transaction</class>
    <class kind="struct">I2C_Params</class>
    <class kind="struct">I2C_FxnTable</class>
    <class kind="struct">I2C_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_QUEUED</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa63ec7e8376d0bfa4c6255a1f723e13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_SUCCESS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa0bcf3acd26ac82bd8ff91daba2c78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ERROR</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7323fe57c39c46d0da9910e17f5f0b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga11c31c9869ed2441789205d9e5967d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_TIMEOUT</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacef5657ae83115da15f49dd76801638b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_CLOCK_TIMEOUT</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gae1ce91f866196f18abebfd6aead32cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ADDR_NACK</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga75c95f62df35a6769b69904e6cd90181</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_DATA_NACK</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3773311442a356cd750e1cf34b85ed5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ARB_LOST</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gadb5718560335315df79d4abe7ddba317</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_INCOMPLETE</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4d4ff3732548047b7c09a1f34ab93d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_BUS_BUSY</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf7455cb02ee12dfc513ceb28323b4b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_CANCEL</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2cca884b9720ab2ca750ebfdb8614601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_INVALID_TRANS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad92f93f1f1c8ef8fc2be70bb8b0c7aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_WAIT_FOREVER</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a4eb2bf76d4186e8752bcd32b32908b6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct I2C_Config_ *</type>
      <name>I2C_Handle</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a1d8718f847129c7aa61dd1c264d8a13c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2C_CallbackFxn</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>adaa5c99b7c23a00bac52d15a2469764e</anchor>
      <arglist>)(I2C_Handle handle, I2C_Transaction *transaction, bool transferStatus)</arglist>
    </member>
    <member kind="typedef">
      <type>struct I2C_Config_</type>
      <name>I2C_Config</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ae43e4c7b224a8cc37764acb792182453</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2C_TransferMode</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_MODE_BLOCKING</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26abe065350be2a0ae5c9beb24624626c75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_MODE_CALLBACK</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a39f3b9340fc4ee241b0d2da9b2841c26a129731a7edeb285f43a54b2cf9f5ac72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2C_BitRate</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_100kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea966fd2df13b3a9825615c50335cf1987</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_400kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea83cc3750242e6ae9194cd7ed94f764d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_1000kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea38a2e32ba65eb0f67b928d181242befa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_3330kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea37abd9be14a25ed731f14694922ee7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2C_3400kHz</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac954e3197f04c50293db466c4abb6fbea0c1376dab54ab817b76de1513b5707fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_cancel</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a8cad0c04a9eca0fffc0ffe5586a5179b</anchor>
      <arglist>(I2C_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_close</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a12c86d89a687f2ee1eb980d99c32326d</anchor>
      <arglist>(I2C_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>I2C_control</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a4c74b1b9f8e76ac22bec7608491cb223</anchor>
      <arglist>(I2C_Handle handle, uint_fast16_t cmd, void *controlArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_init</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a9ff51ddf1d325776fef90cce0223772b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>I2C_Handle</type>
      <name>I2C_open</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>a2db3461e1e956d9b86af414da2fb05f6</anchor>
      <arglist>(uint_least8_t index, I2C_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2C_Params_init</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ab11636302074d67180207ab81ceb323c</anchor>
      <arglist>(I2C_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>I2C_transfer</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>ac5d827b67fe77d7d179026941cc069d7</anchor>
      <arglist>(I2C_Handle handle, I2C_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>I2C_transferTimeout</name>
      <anchorfile>_i2_c_8h.html</anchorfile>
      <anchor>aaee4f0689acbe5f0596e35b18402abf3</anchor>
      <arglist>(I2C_Handle handle, I2C_Transaction *transaction, uint32_t timeout)</arglist>
    </member>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Overview</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Usage</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Synopsis</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Synopsis_Code</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Examples</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_open</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_write3bytes</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_read5bytes</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_writeread</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Example_callback</docanchor>
    <docanchor file="_i2_c_8h">ti_drivers_I2C_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>I2CCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/i2c/</path>
    <filename>_i2_c_c_c32_x_x_8h</filename>
    <includes id="_i2_c_8h" name="I2C.h" local="no" imported="no">ti/drivers/I2C.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">I2CCC32XX_HWAttrsV1</class>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_01_I2C_SCL</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab6c66e157f9da9b8992641ab5c5c9dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_02_I2C_SDA</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6155f74b4b65ba7336bc7e6e90b806ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_03_I2C_SCL</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab2bc0b39f79278809b20d13a13bf73f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_04_I2C_SDA</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9c6971b96c8b564db36435574a359de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_05_I2C_SCL</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a0c801ded8a23c02f9155eae17e04f122</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_06_I2C_SDA</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a467b2d792b7c9b5e77a2fa3a13e59fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_16_I2C_SCL</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7c24b15fd19af7c3771714a2d236b28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2CCC32XX_PIN_17_I2C_SDA</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>afd5d42a7dc5d7472b19abee4092e6fad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const I2C_FxnTable</type>
      <name>I2CCC32XX_fxnTable</name>
      <anchorfile>_i2_c_c_c32_x_x_8h.html</anchorfile>
      <anchor>a888c124cabf68f3b1bc30d55dd56cb21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>I2S.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_i2_s_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <class kind="struct">I2S_Config</class>
    <class kind="struct">I2S_Transaction</class>
    <class kind="struct">I2S_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>I2S_ALL_TRANSACTIONS_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab6513a393fed75b7c1b507d5ec9047fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TRANSACTION_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8265d03e72406770257a834e377247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TIMEOUT_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga815abf87dfe4353e42bea24940f45d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_BUS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeff50b687883296e143e5da70102a915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_WS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab9cb86b261eb8a0abcfc19091f46385a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_READ_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50be1b2cc5cef182aff769f626eb6e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_WRITE_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacb0dde45fe8df930d9914a100fbfcef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>I2S_Config *</type>
      <name>I2S_Handle</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a9994d996a1bb13482957494f5d9999c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_Callback</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a011a6a344bae2163e24b811e75c76fde</anchor>
      <arglist>)(I2S_Handle handle, int_fast16_t status, I2S_Transaction *transactionPtr)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_RegUpdate</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a7ce338dedc6f90e9b86705ad6a2e3eea</anchor>
      <arglist>)(uint32_t ui32Base, uint32_t ui32NextPointer)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2S_StopInterface</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a518f25dc99f76453c3ef7bfdb7fc390c</anchor>
      <arglist>)(I2S_Handle handle)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_MemoryLength</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>afc6b50bcb4c5bd0254c5efa0cdc14222</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_8BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>afc6b50bcb4c5bd0254c5efa0cdc14222a13e1dbc37a214b697892127dd14b39ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_16BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>afc6b50bcb4c5bd0254c5efa0cdc14222aa95b67ba7278bcb1d9a64cba9a8e1bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_24BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>afc6b50bcb4c5bd0254c5efa0cdc14222acc56087b412f11af3dc890f066fac0b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MEMORY_LENGTH_32BITS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>afc6b50bcb4c5bd0254c5efa0cdc14222a926727054bff1f3cbe2540434d0fab42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_Role</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a54ce68790d113be856f3a6840bc3ebe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SLAVE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a54ce68790d113be856f3a6840bc3ebe0a2e9b49c09201c26bec35c9b854b09e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_MASTER</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a54ce68790d113be856f3a6840bc3ebe0a10b52b2d09a9f58e2daeec0f5a392bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_SamplingEdge</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>adf99b8155252f529a3089cee99c52a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SAMPLING_EDGE_FALLING</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>adf99b8155252f529a3089cee99c52a51ac2b123abf8d93dc779178fd3ede764eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SAMPLING_EDGE_RISING</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>adf99b8155252f529a3089cee99c52a51a54900e14a06cfb9a08de7b1ed2583491</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_PhaseType</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a5d9de87aff52f63eadf4a95560abd61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_PHASE_TYPE_SINGLE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a5d9de87aff52f63eadf4a95560abd61fabe139271fd1177a8b3e81156a966695d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_PHASE_TYPE_DUAL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a5d9de87aff52f63eadf4a95560abd61fa0b3e4c2e6cca0317d05ec75b872b34de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_DataInterfaceUse</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_DISABLED</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7eaa745a9c11f2a2d74d1c6d001a32b355b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_INPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7eae0e5e7026b88277c279de0e798488e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD0_OUTPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7eab32df02fc78f8a4eabe6efa84fe3b28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_DISABLED</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7eaac2fb5fe175b0b96da5c7ea069ae48b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_INPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7eabc860688d07b2022d075448f597d7811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_SD1_OUTPUT</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3b6754868d365f8e3ec9b67883bf1a7ea966016f222e7831b399aac26e4b8c7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>I2S_ChannelConfig</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_NONE</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480af29054f891314a79ee5d2b105678fce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_MONO</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a9ae976eea3f03628bac96b3bd5b590a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_MONO_INV</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480ace24478308aa18581ea899b4749e1eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_STEREO</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480aa99f621d20e7c434dd8fc6eec81f88f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_1_CHANNEL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480aef21e0755c603bfa84cfcfb76087a2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_2_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a70296e535a023f5e486d169c56241938</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_3_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480acde532a4455d55712113984d1d9d14ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_4_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a4de908d16fbc3997ca26f9daf0a1ab15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_5_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a4dbc52ac6e50657e77ab1a5663c9bebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_6_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a6393bde043d2d9a820d0eaae3723390f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_7_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a3d28c1be7347c31842f949fce1b5c245</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_8_CHANNELS</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a7f1bd716ad44f22c8b359102c206c0fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>I2S_CHANNELS_ALL</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>accc9f53ca7fa3c96306f474cc0ade480a93050a292e0f863d146fc2bb6461505b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_close</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a111a6b44f868cf90f7b25ced9f22ae1b</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a79e8fdf40ee80c49b2cac09a3e428a82</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>I2S_Handle</type>
      <name>I2S_open</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a49305a04152a6fb37a7afceabca642eb</anchor>
      <arglist>(uint_least8_t index, I2S_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_Params_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a961c116273a6e8d4581278b2666f13b5</anchor>
      <arglist>(I2S_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_Transaction_init</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a6f45de7e62ff3b345dbd22a1e317e8b0</anchor>
      <arglist>(I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_setReadQueueHead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3f18edea4f87b8c16b0fa5ed60a02082</anchor>
      <arglist>(I2S_Handle handle, I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_setWriteQueueHead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a85c5b6f87590e1db5459c3be8d83993f</anchor>
      <arglist>(I2S_Handle handle, I2S_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startClocks</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3fd30c0f3e1d047df949d8a00260b2e5</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopClocks</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3c929c2811ba58180ef57abbb33d3ec5</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startRead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a4631dbd7e6b7480a95c976d03aa69e0f</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_startWrite</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a77a9ed563af3d038541d14f14901ab30</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopRead</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>ab97bed409bc639d5c7a5e847c5166ab0</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>I2S_stopWrite</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a19039189f3d38c849aa8c55008409f31</anchor>
      <arglist>(I2S_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const I2S_Params</type>
      <name>I2S_defaultParams</name>
      <anchorfile>_i2_s_8h.html</anchorfile>
      <anchor>a3854e487af0042986ad755b9517ff24c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Overview</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Usage</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_Transactions</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_ProvidingData</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Driver_StartStopClocks</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Examples</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_PlayAndStop</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_PlayAndStop_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_Streaming</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_Streaming_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_RepeatMode</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Example_RepeatMode_Code</docanchor>
    <docanchor file="_i2_s_8h">ti_drivers_I2S_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>I2SCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/i2s/</path>
    <filename>_i2_s_c_c32_x_x_8h</filename>
    <includes id="_i2_s_8h" name="I2S.h" local="no" imported="no">ti/drivers/I2S.h</includes>
    <includes id="_u_d_m_a_c_c32_x_x_8h" name="UDMACC32XX.h" local="no" imported="no">ti/drivers/dma/UDMACC32XX.h</includes>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">I2SCC32XX_HWAttrs</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>I2SCC32XX_FifoUpdate</name>
      <anchorfile>_i2_s_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5e652d4bf89933781d184b65bfa80740</anchor>
      <arglist>)(uintptr_t arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LED.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/apps/</path>
    <filename>_l_e_d_8h</filename>
    <includes id="_g_p_i_o_8h" name="GPIO.h" local="no" imported="no">ti/drivers/GPIO.h</includes>
    <includes id="_p_w_m_8h" name="PWM.h" local="no" imported="no">ti/drivers/PWM.h</includes>
    <class kind="struct">LED_Config</class>
    <class kind="struct">LED_HWAttrs</class>
    <class kind="struct">LED_Object</class>
    <class kind="struct">LED_Params</class>
    <member kind="define">
      <type>#define</type>
      <name>LED_BRIGHTNESS_MAX</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a7bb18ca9f746ebcfbfc397886643f16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_BRIGHTNESS_MIN</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a7c23f23fb4baef6038542bf4e3253892</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_ON</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>af2e697ac60e05813d45ea2c9c9e79c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_OFF</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a80700bb63bd56ebabbb4728aa433fd29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LED_BLINK_FOREVER</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>ab086abacbb603f695c9fe7d392a54fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LED_Config *</type>
      <name>LED_Handle</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a2a73ea54cf6feba7ebd1741ade8ea611</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LED_Type</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a058b30c4dad8492729144d11afa6ddb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_NONE</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a058b30c4dad8492729144d11afa6ddb1af545c04416e7b8be433ad172a18a8b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_GPIO_CONTROLLED</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a058b30c4dad8492729144d11afa6ddb1a5ea0edf61325cd915372af7b95954218</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_PWM_CONTROLLED</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a058b30c4dad8492729144d11afa6ddb1a0a374df97562bcbd852efe880eeaac99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LED_State</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a4a8326721c03c1e5b40de78b999236b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_STATE_OFF</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a4a8326721c03c1e5b40de78b999236b8a0eebea54c4dc200be6939742385ee789</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_STATE_ON</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a4a8326721c03c1e5b40de78b999236b8a024f137d8368d2d31196fbcfb8345550</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LED_STATE_BLINKING</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a4a8326721c03c1e5b40de78b999236b8af61006685f03f51d1560923ea5420b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_close</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a22daa13fd0b3e576de24272a574b5905</anchor>
      <arglist>(LED_Handle ledHandle)</arglist>
    </member>
    <member kind="function">
      <type>LED_State</type>
      <name>LED_getState</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a008301885ac288a61c5c9c6d6a9e92f8</anchor>
      <arglist>(LED_Handle ledHandle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_init</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a0a4419e3e369c088021add0b5054ff7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LED_Handle</type>
      <name>LED_open</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a9ead54bbe388c4164fd7e0e4416b0017</anchor>
      <arglist>(uint_least8_t index, LED_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_Params_init</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>aff04caa98eb18018bc7cec02e89fea86</anchor>
      <arglist>(LED_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LED_setBrightnessLevel</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>ab918b2aeace73f7c38f0c22acf7ec34e</anchor>
      <arglist>(LED_Handle ledHandle, uint8_t level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LED_setOff</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>aa5f4ef76e502faf11aba5714065f076a</anchor>
      <arglist>(LED_Handle ledHandle)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LED_setOn</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a6da3cef2f4e273fa33046e59da423362</anchor>
      <arglist>(LED_Handle ledHandle, uint8_t brightness)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_startBlinking</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>ab934d762491bdc04636ebbbe4a0a7d3a</anchor>
      <arglist>(LED_Handle ledHandle, uint16_t blinkPeriod, uint16_t blinkCount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_stopBlinking</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>af561cccde227fd2d79aa8851a4f3217b</anchor>
      <arglist>(LED_Handle ledHandle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_toggle</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>ab0ca5c5548cb4905e0ff92babc100313</anchor>
      <arglist>(LED_Handle ledHandle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LED_write</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>a229f28207624bf123fbc478e908534ac</anchor>
      <arglist>(LED_Handle ledHandle, bool value)</arglist>
    </member>
    <member kind="variable">
      <type>const uint_least8_t</type>
      <name>LED_count</name>
      <anchorfile>_l_e_d_8h.html</anchorfile>
      <anchor>ab213809d7fa06eb80b26f56c9b72d1b4</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_l_e_d_8h">ti_drivers_LED_Synopsis</docanchor>
    <docanchor file="_l_e_d_8h">ti_drivers_LED_Examples</docanchor>
    <docanchor file="_l_e_d_8h">ti_drivers_LED_Examples_config_array</docanchor>
    <docanchor file="_l_e_d_8h">ti_drivers_LED_Examples_gpio_config</docanchor>
    <docanchor file="_l_e_d_8h">ti_drivers_LED_Examples_pwm_led</docanchor>
  </compound>
  <compound kind="file">
    <name>List.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/utils/</path>
    <filename>_list_8h</filename>
    <class kind="struct">List_Elem_</class>
    <class kind="struct">List_List</class>
    <member kind="typedef">
      <type>struct List_Elem_</type>
      <name>List_Elem</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>aec4cbba21ef101a3efe07001550f9ebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_clearList</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a32d4e53da70142cec310cfa0006f146a</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>List_empty</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>ae60fe07328af331a850bd6bb25ecafee</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function">
      <type>List_Elem *</type>
      <name>List_get</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>ac8c9babb4481314e3f0cce444f7fbade</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_head</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a7eeb8ffe91673aa56fdd1c552c6435b6</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_insert</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a0725acc51893e377f5ee9225dd6fcd26</anchor>
      <arglist>(List_List *list, List_Elem *newElem, List_Elem *curElem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_next</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1683e4f9d2462f12dd60d0f810075ab5</anchor>
      <arglist>(List_Elem *elem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_prev</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>af0834d0f68b1adcf8c1d4f2fb10276fc</anchor>
      <arglist>(List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_put</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1608b5d7dc712fcf01dc5d837e22078a</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_putHead</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a1194d8eead79730c5da10e36b60f7044</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>List_remove</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a480146af207e00199372c66edb4d9960</anchor>
      <arglist>(List_List *list, List_Elem *elem)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static List_Elem *</type>
      <name>List_tail</name>
      <anchorfile>_list_8h.html</anchorfile>
      <anchor>a04432014c20d52c680076e3613aa68da</anchor>
      <arglist>(List_List *list)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NoRTOS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/kernel/nortos/</path>
    <filename>_no_r_t_o_s_8h</filename>
    <class kind="struct">_NoRTOS_Config</class>
    <member kind="typedef">
      <type>struct _NoRTOS_Config</type>
      <name>NoRTOS_Config</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a28dea0ee567d35cc2ee31fa62b8a2a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_getConfig</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a5beb1c723f408204ffa9251f778b9da6</anchor>
      <arglist>(NoRTOS_Config *cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_setConfig</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>ada45395ac2516b5d94fe4260e79def62</anchor>
      <arglist>(NoRTOS_Config *cfg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NoRTOS_start</name>
      <anchorfile>_no_r_t_o_s_8h.html</anchorfile>
      <anchor>a71a949aa77a36c1fbb73b482545d0b1b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NVS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_n_v_s_8h</filename>
    <class kind="struct">NVS_Params</class>
    <class kind="struct">NVS_Attrs</class>
    <class kind="struct">NVS_FxnTable</class>
    <class kind="struct">NVS_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>NVS_CMD_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaa9fa1c41660d17139bce63ff34cd774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gad82fd139152ca14946c80c6c91edb4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_SUCCESS</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga5f3b6583ee909863b86799762dc8b4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_ERROR</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga995c9896630b7a0cd1662e7be9c4cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8aa59663f65af4fa564a3a83cd7d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_TIMEOUT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga1b42309ac8efec007159e58382dd4a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_OFFSET</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga30a816faeeb9a50757055fb6f10189a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_ALIGNMENT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga07f2472d1204718531ddf7a369b86ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_SIZE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga6bdc99317ca872755243d9a76ad1db95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_WRITE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad8da7024d67625daf4347c22d50fdb4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_ERASE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>afdf449ac94235c5c4b108f5e5e925f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_PRE_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5a4d29a7281f1ad484cc8b7ccc30b363</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_POST_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a04d152372a71d46161f28b4db3163202</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_WAIT_FOREVER</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abaf71a566fbd69fc043956bfc8146153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_NO_WAIT</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad078d2e244f0c623722b3b9492733e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_REGION_NOT_ADDRESSABLE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a85b2420d7270c59d423d1733ed1f708a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct NVS_Config_ *</type>
      <name>NVS_Handle</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abdc600f33c94c8bd706ad42ccdafcf3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_CloseFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a82f2a5311bf6dc69d62046fe20c3e108</anchor>
      <arglist>)(NVS_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_ControlFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a80f150226f2b7a76dce36543d2ee635b</anchor>
      <arglist>)(NVS_Handle handle, uint_fast16_t cmd, uintptr_t arg)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_EraseFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a20498b8b2109828d0a3be43c1db27518</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_GetAttrsFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a68a18a48c3f49ce6d2f30b7e8931859e</anchor>
      <arglist>)(NVS_Handle handle, NVS_Attrs *attrs)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_InitFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad9de01b5a2f7cee170c2012e33a60f8a</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>NVS_Handle(*</type>
      <name>NVS_OpenFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ab40d7f4d10399ad5dfe51730d1dd0b9a</anchor>
      <arglist>)(uint_least8_t index, NVS_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_ReadFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a4846926325171c03e9b5cce5b16b6ba7</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_WriteFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a70430e07ab4927c8943cdadcd4add4bf</anchor>
      <arglist>)(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize, uint_fast16_t flags)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>NVS_LockFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>aa726bab3d4fe81260d3fefbb92e93060</anchor>
      <arglist>)(NVS_Handle handle, uint32_t timeout)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>NVS_UnlockFxn</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a45293f34f71f0a7e7c798917207b2874</anchor>
      <arglist>)(NVS_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct NVS_Config_</type>
      <name>NVS_Config</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5fc4d942abf495e07fba7f3c0a7da83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_close</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a12147fcc41f532802d97c0784c3e30c3</anchor>
      <arglist>(NVS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_control</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a79b9b07b5a9d2c35426c15932c6d7c0e</anchor>
      <arglist>(NVS_Handle handle, uint_fast16_t cmd, uintptr_t arg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_erase</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a4f309d160ac4641c89501adc95d170b3</anchor>
      <arglist>(NVS_Handle handle, size_t offset, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_getAttrs</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ae2b667cddd9531d7a06bb0f9d8fd890f</anchor>
      <arglist>(NVS_Handle handle, NVS_Attrs *attrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_init</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a94e249f718eba502cdf34d098c83209e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_lock</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a62d1593df9acb6d3c6446f1719f3bf28</anchor>
      <arglist>(NVS_Handle handle, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>NVS_Handle</type>
      <name>NVS_open</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a15488564c98e00aa62400a54dde3d44e</anchor>
      <arglist>(uint_least8_t index, NVS_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_Params_init</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>af7562718a6eed5456d423ef7a16c8598</anchor>
      <arglist>(NVS_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_read</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a9e058f0724a9c325664f68ecfa2239cb</anchor>
      <arglist>(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NVS_unlock</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a01fb843c26ca406c5c9463eae6b0b817</anchor>
      <arglist>(NVS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>NVS_write</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>aae7abe0cb889a6d0cc1858bfc69ab7e0</anchor>
      <arglist>(NVS_Handle handle, size_t offset, void *buffer, size_t bufferSize, uint_fast16_t flags)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_ERASE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>afdf449ac94235c5c4b108f5e5e925f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_PRE_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a5a4d29a7281f1ad484cc8b7ccc30b363</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_WRITE_POST_VERIFY</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a04d152372a71d46161f28b4db3163202</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_WAIT_FOREVER</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>abaf71a566fbd69fc043956bfc8146153</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_LOCK_NO_WAIT</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>ad078d2e244f0c623722b3b9492733e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_REGION_NOT_ADDRESSABLE</name>
      <anchorfile>_n_v_s_8h.html</anchorfile>
      <anchor>a85b2420d7270c59d423d1733ed1f708a</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Overview</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Usage</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Synopsis</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Synopsis_Code</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples_open</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Examples_typical</docanchor>
    <docanchor file="_n_v_s_8h">ti_drivers_NVS_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>NVSRAM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/nvs/</path>
    <filename>_n_v_s_r_a_m_8h</filename>
    <class kind="struct">NVSRAM_HWAttrs</class>
    <class kind="struct">NVSRAM_Object</class>
    <member kind="variable">
      <type>const NVS_FxnTable</type>
      <name>NVSRAM_fxnTable</name>
      <anchorfile>_n_v_s_r_a_m_8h.html</anchorfile>
      <anchor>a311a36a2f7b071ff09c7aed038ce5668</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NVSSPI25X.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/nvs/</path>
    <filename>_n_v_s_s_p_i25_x_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <class kind="struct">NVSSPI25X_HWAttrs</class>
    <class kind="struct">NVSSPI25X_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>NVSSPI25X_CMD_MASS_ERASE</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>a89a4a07b7be073b897feebf4760f1662</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVSSPI25X_SPI_MANAGES_CS</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>abf8ed123f5292601fe76a62275bb60f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const NVS_FxnTable</type>
      <name>NVSSPI25X_fxnTable</name>
      <anchorfile>_n_v_s_s_p_i25_x_8h.html</anchorfile>
      <anchor>a105e78ab0c157b8ad847af271b05b18c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_n_v_s_s_p_i25_x_8h">SPI_CS_MGMT</docanchor>
  </compound>
  <compound kind="file">
    <name>Power.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_power_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <class kind="struct">Power_NotifyObj</class>
    <member kind="define">
      <type>#define</type>
      <name>Power_TOTAL</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>gaa5e33b10202cc5a261c1800b4ae1de3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_RESUME</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>ga7343f6504f2df361dca3760a97584371</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYDONE</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98c91c03b469de0cf4f53b89a867ee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYERROR</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98066f45fce59fd38d8edcb6f2ac96fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_SOK</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga92eed670a5d7e3d43f612ca0da9d3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EFAIL</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaed2f92a8c72bfa183e14d10a2e35789f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDINPUT</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga200ab87d1e0ffbc4eb3864d18646e0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDPOINTER</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga0d24bacb087e8282be2e4394503a429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ECHANGE_NOT_ALLOWED</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaa4e7b580b1c9c026036bf53befe5723b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EBUSY</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga3132904395c5631392bd6301d9a2181e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ACTIVE</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga01074d8221d330077fbe040b9143e183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga6038b3877b09c908834af7d46595b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EXITING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga1ea41cdfb6fb053eaed2792c4edf886d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SHUTDOWN</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>gad09d75dfaa5d799c4f044df9814db485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_CHANGING_PERF_LEVEL</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga2b7d4ba49a9418af10c84132a8cbf108</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Power_PolicyInitFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a435fdeb71d13ea6be86f599c9b6a0d78</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Power_PolicyFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a333038d1e9cd5f93dda7b83f8a1afa8b</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Power_NotifyFxn</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ad6c365f54d37429c5bd32181e5dbf463</anchor>
      <arglist>)(uint_fast16_t eventType, uintptr_t eventArg, uintptr_t clientArg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Power_disablePolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>acf9706c39bd0fa07ec977dd643e5dd2a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_enablePolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ae8d6092a8fb35b6db52a69a35fcc327f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>Power_getConstraintMask</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a5a014bc499484e3340eed32b2aad9b56</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_getDependencyCount</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a3c4f3e678659b683126eef65aef4400b</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast16_t</type>
      <name>Power_getPerformanceLevel</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a33830ca68bc594b1f24c7285a62f0475</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>Power_getTransitionLatency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a54c4704ee529e55633288b0bd49ad583</anchor>
      <arglist>(uint_fast16_t sleepState, uint_fast16_t type)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast16_t</type>
      <name>Power_getTransitionState</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a20509b474f5e68c9d36832199d167b9b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_idleFunc</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a873219012923300f3b3b958b951a4ea1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_init</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a3c4e1eab2809636848b2758fb201707c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_registerNotify</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>aa89d120c82d4f23e6d4a337720b6300e</anchor>
      <arglist>(Power_NotifyObj *pNotifyObj, uint_fast16_t eventTypes, Power_NotifyFxn notifyFxn, uintptr_t clientArg)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_releaseConstraint</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>acc3b76add2f8fadd70bb747d7dd0f8e8</anchor>
      <arglist>(uint_fast16_t constraintId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_releaseDependency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a74f45b58c200fa042614e4a892f58a2d</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setConstraint</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a45bde4b6fc658e81dc70701e8bdc947a</anchor>
      <arglist>(uint_fast16_t constraintId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setDependency</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a25f2b780b7ea1ff1f515115fe1c2f519</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_setPerformanceLevel</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ae40483e9ed7c626a02399996d3a7878a</anchor>
      <arglist>(uint_fast16_t level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_setPolicy</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>aa4af0d238813058bf6146df6021df8cc</anchor>
      <arglist>(Power_PolicyFxn policy)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_shutdown</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a311d085ba6ecbeea0e279c52995892a5</anchor>
      <arglist>(uint_fast16_t shutdownState, uint_fast32_t shutdownTime)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Power_sleep</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>a45e1e0f3168cc39a2309fce40c3e271d</anchor>
      <arglist>(uint_fast16_t sleepState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Power_unregisterNotify</name>
      <anchorfile>_power_8h.html</anchorfile>
      <anchor>ac32c17ce6da099da97957f08ddb000b4</anchor>
      <arglist>(Power_NotifyObj *pNotifyObj)</arglist>
    </member>
    <docanchor file="_power_8h">ti_drivers_Power_Overview</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Usage</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Synopsis</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Synopsis_Code</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_enable</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_disable</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_constraint</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_dependency</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_notify</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Examples_transistion</docanchor>
    <docanchor file="_power_8h">ti_drivers_Power_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>PowerCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/power/</path>
    <filename>_power_c_c32_x_x_8h</filename>
    <includes id="_list_8h" name="List.h" local="no" imported="no">ti/drivers/utils/List.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">PowerCC32XX_ParkInfo</class>
    <class kind="struct">PowerCC32XX_ConfigV1</class>
    <class kind="struct">PowerCC32XX_Wakeup</class>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_RESUMETIMELPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a528f8e6597a7317f4314ff42f45bee4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_TOTALTIMELPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>adb1afc85435996fda4859a122342ed4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_TOTALTIMESHUTDOWN</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7277518bc0764d35bc429db6b027a677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_CAMERA</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a15304ae92de241614ab83dec83672670</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_I2S</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6c9a2b0d0c5eb13b780a6a86059ca3ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_SDHOST</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a4bcdd9efa6f8f2ca8869acb2ef0f4b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GSPI</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a820927c5bb17385de411adce16e6773d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_LSPI</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a8e1cf65d2c6c77b2e88889070fd8ada3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_UDMA</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a93eb7cbb4b3eda55e8154fcd4c8927d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GPIOA0</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a61230f895821ed7eed10cbc59e20c49f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GPIOA1</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a05b7ab3a242c5b9618913dfa4415e382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GPIOA2</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>acd49fff952e4131e7f1c11f4fb87ae46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GPIOA3</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5f680126084d0d402ab7c4ee2b8f63dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_GPIOA4</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a0b2bc3b127aed5b2b4194154ec0b0bc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_WDT</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aadbc8aa8d470467d95cbf189bf6afb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_UARTA0</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae953dbd38336d7f11217f892c011ce40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_UARTA1</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a48ab28f7fddb29508949caa25a46cf1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_TIMERA0</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a35ccb58cbe3c9478f0684b06920e4240</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_TIMERA1</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>acd53e008454a1ac2f1733e46aaae3936</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_TIMERA2</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa3b3c5254e1c805e1c93ca670d60e3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_TIMERA3</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>acb8adb699e8da6d7af415f4a9c0a4ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_DTHE</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a12f726f1a0b3932a78b3a8298f005fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_SSPI</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>acac0b50e887e5553c3c2c7c3bd4aec41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_PERIPH_I2CA0</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a84adb37d2fa4887ad909f34b9d87a1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_DISALLOW_LPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a28c1b9d61722626ebbf4b396cfe01f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_DISALLOW_SHUTDOWN</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>abe813e65b883356bfb391db56f1a74a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_ENTERING_LPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6d957905530048108aa0d1426e605aaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_ENTERING_SHUTDOWN</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a59e51a0e61a9a9c6e92d365126c8d419</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_AWAKE_LPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>affc28b42aa5baf96df3cbc40277569a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PowerCC32XX_LPDS</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f4e9817ec80977d198669c08d72518b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerCC32XX_ParkState</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_NO_PULL_HIZ</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fa3b1792d7242c007685f745bd6cefb595</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_WEAK_PULL_UP_STD</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0faad59e18a80fa084707cbcef6fb9c7bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_WEAK_PULL_DOWN_STD</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fad33d4f815b552912e0b14242686968b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_WEAK_PULL_UP_OPENDRAIN</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fae21a71872210a127ac0e0c88a5ac527b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_WEAK_PULL_DOWN_OPENDRAIN</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fa9d784d43cfb717602e0fb2f5e8ef2765</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_DRIVE_LOW</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0faa1f59990c0db454c5e3882e00f047d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_DRIVE_HIGH</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fad6e4bdd22a0b10b1537499ccd8e3e430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_DONT_PARK</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aed4c2508d1c416af97dbd8a8cb4d2f0fa69cd18ca49c0cacbc8b5274782862133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PowerCC32XX_Pin</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN01</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86daa6d530286e7c6edff15c8357701ee6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN02</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da80040b908cd70e980569d82bce8321cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN03</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da3ca9fe82daaa32eaad88f8dea71e9989</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN04</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da69ed41767c56a527bd25edb2e2f71669</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN05</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dac8e8798adbf836e12448c2a775bf4337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN06</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da94b2c84eac0041457288bc03aede4b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN07</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dacbe68681f64cad240c53b1e630fbc4e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN08</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dac0fc8f80f97992a2377de95fbae25e93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN11</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da5baa1d1e6797552bd1f8d1cf555b854e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN12</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86daa4dbe22b8bf795ef072405289dec100e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN13</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dae4bd63df193de87427f665fac2357a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN14</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da188008b66779aa65443641b8146e5798</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN15</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86daf6fece79ad36246a1a88cd3209e45120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN16</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da6fc93fe72819acc6eb0a39d1c988af72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN17</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da7d47f85656b9f77f1b6f69c72ec7f478</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN18</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da66d7117689a861f9ade5a6899d11ae5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN19</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da4e8b4e04c82921acdc686b81a760c897</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN20</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da97111a58b8907c05128b039143c8546c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN21</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dabc9a47127e0e43d1c5238c5eca014cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN29</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da8cf8196700c1f6465124f79b220b8b93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN30</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dae9f99709cb82edbb3609ba6f0a6c0713</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN45</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da6282e54ba25937f84013e1a574f97f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN50</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dafb479f020e210c0fe174abed8673ea51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN52</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dae0a58c3afc142220469ab14827ffc00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN53</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da4c459376dd7656028c55209721aac831</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN55</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86daf3cc88c0eb38f49958bb864d256733a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN57</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da3205333b26472c2c4b5f049188920f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN58</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da15fa91abf1a0536f2df9d2bf5b9adff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN59</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da64329ca809b721bcc7aad063c05c0bce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN60</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da46f94a1e0a3f5116506e250baf6fa827</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN61</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da952673c30d5c153ee9e2d570f7c4890a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN62</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da885a5c27dd804b7a7f19f17f5c1bd37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN63</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86da37cb6875ed3fc921e39b06f78c6c050b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PowerCC32XX_PIN64</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a724af10ff20ec56ef488e8f78593b86dad0bf37a3c62608011c74f7de5ad12a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_configureWakeup</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a986d0b70b32014ef782c87c0bce288f1</anchor>
      <arglist>(PowerCC32XX_Wakeup *wakeup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_initPolicy</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aefc92ad91252600e93d738cebd5c1280</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_getWakeup</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa3bc904695aaecb0ff1a97ab6875310b</anchor>
      <arglist>(PowerCC32XX_Wakeup *wakeup)</arglist>
    </member>
    <member kind="function">
      <type>PowerCC32XX_ParkState</type>
      <name>PowerCC32XX_getParkState</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aee13ddd0470aadaa329f813d2807c82b</anchor>
      <arglist>(PowerCC32XX_Pin pin)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_restoreParkState</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6f43293db9723019d14a869f781d230b</anchor>
      <arglist>(PowerCC32XX_Pin pin, PowerCC32XX_ParkState state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_setParkState</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>adeb2a87aaee02601bda2c9e155c5c76d</anchor>
      <arglist>(PowerCC32XX_Pin pin, uint32_t level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_disableIORetention</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>aacdb475d318a3e7bd68452d0915e621a</anchor>
      <arglist>(unsigned long groupFlags)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PowerCC32XX_sleepPolicy</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1eb16630d968dac31b60a3b698205cb1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PowerCC32XX_reset</name>
      <anchorfile>_power_c_c32_x_x_8h.html</anchorfile>
      <anchor>af8f4614a7beca2f02c65679bb98e7a4f</anchor>
      <arglist>(uint_fast16_t resourceId)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PWM.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_p_w_m_8h</filename>
    <class kind="struct">PWM_Params</class>
    <class kind="struct">PWM_FxnTable</class>
    <class kind="struct">PWM_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>PWM_DUTY_FRACTION_MAX</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a8b2763bf16c6446a35d536ea532f6a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_CMD_RESERVED</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ad731f4db58c72d280900da4be6e3434c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_RESERVED</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a88616e9288d6e3a4dbab321af26cc04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_SUCCESS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a9b234f3cd0bdffc3da5b56a6c4db9563</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_ERROR</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a739297dfb10ab4363e7b5db30fdd1ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>afed58384f49ce364218eeaabb0858bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_INVALID_PERIOD</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5541b99566b02450b1d44b3bf0c344bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWM_STATUS_INVALID_DUTY</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ac3b90551ab071520eccaabe4cabe1f1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct PWM_Config_ *</type>
      <name>PWM_Handle</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abd13611c9e61099dd02f1c87d9e9793d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_CloseFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a1643d365dfa900197b324ea74035d2ec</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_ControlFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a0ac1147ec944a3873ec1dad81d8c949f</anchor>
      <arglist>)(PWM_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_InitFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a38666ae4b117b81d35758258012b251a</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>PWM_Handle(*</type>
      <name>PWM_OpenFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a16b7b446398f8b90e4fa287c6e4a0981</anchor>
      <arglist>)(PWM_Handle handle, PWM_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetDutyFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a7e90114309f62bc7ddf878c2e1b46cd2</anchor>
      <arglist>)(PWM_Handle handle, uint32_t duty)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetPeriodFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a2761c0836cae3a3d56cf8e819d54a214</anchor>
      <arglist>)(PWM_Handle handle, uint32_t period)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>PWM_SetDutyAndPeriodFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a1e01d56b827255daf0b927e3d6d35ea8</anchor>
      <arglist>)(PWM_Handle handle, uint32_t duty, uint32_t period)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_StartFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af0a392fb66c104f9d60e80e023dd3b89</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>PWM_StopFxn</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aff8ad682f40a810ecf03824e8e190087</anchor>
      <arglist>)(PWM_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct PWM_Config_</type>
      <name>PWM_Config</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af4fdcd36077e2aba99d6996ae1ea64ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_Period_Units</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_US</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a35d73e8e481d16fd8c3880d9519894cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_HZ</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a083c3462c199f39afc7a9d0541595b7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_PERIOD_COUNTS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a11aa442e82549992c98729216d64fd63a52a5ee3b990d5edb816d19253bd9a571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_Duty_Units</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_US</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eeaf93cd02d0c2744e2d6a68a8e7070b7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_FRACTION</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eea004d0d56bfc7f629990e7b6b55c3dd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_DUTY_COUNTS</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>abc7bc5565f2767cf9f06c1572044a8eea4a20018a9620ed669dff0893858a44b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PWM_IdleLevel</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_IDLE_LOW</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9a698cc876a94b3e0629d65fecfec8c8f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PWM_IDLE_HIGH</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a5a40c7014745d15b0c1a604dae5593f9a0b126918629a951139ef9f17d417c50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_close</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a0e0f5899b067d27653db566fb148db11</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_control</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a7f5a5dd263b9d95f4fd71fbb69455369</anchor>
      <arglist>(PWM_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_init</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aadae3fe77e36cbf9643a22eeb99fb01e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>PWM_Handle</type>
      <name>PWM_open</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ae97f12cfc5530577069f76813504da3a</anchor>
      <arglist>(uint_least8_t index, PWM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_Params_init</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>acbdd3192f9f06bf689e4a3855926dcac</anchor>
      <arglist>(PWM_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setDuty</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>af72b43e2bcd68c0e78ae5dbe28db05c8</anchor>
      <arglist>(PWM_Handle handle, uint32_t duty)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setPeriod</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>afc1925126582a5a0721f992b92739e06</anchor>
      <arglist>(PWM_Handle handle, uint32_t period)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>PWM_setDutyAndPeriod</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>a3cc7201c72502a6d294ad1320e5a3c25</anchor>
      <arglist>(PWM_Handle handle, uint32_t duty, uint32_t period)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_start</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>aa1bd0cc3f0fa52879422fca74d254378</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PWM_stop</name>
      <anchorfile>_p_w_m_8h.html</anchorfile>
      <anchor>ae83a4cd327a07d6037ff1a8d72fb3ae6</anchor>
      <arglist>(PWM_Handle handle)</arglist>
    </member>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Overview</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Usage</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Synopsis</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Synopsis_Code</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_open</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_duty</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Examples_dutyperiod</docanchor>
    <docanchor file="_p_w_m_8h">ti_drivers_PWM_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>PWMTimerCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/pwm/</path>
    <filename>_p_w_m_timer_c_c32_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_p_w_m_8h" name="PWM.h" local="no" imported="no">ti/drivers/PWM.h</includes>
    <class kind="struct">PWMTimerCC32XX_HWAttrsV2</class>
    <class kind="struct">PWMTimerCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_01</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3618e170f0375e7f4c41263559d1282f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_02</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf155150099317e188cd7de403c210bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_17</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga26150cae31df21ab2940bc1197ad9d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_19</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga0494fc4c430672164f9da33123e552c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_21</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf825b711c08749fa231f21ebd4dc393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_64</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga8f18fefd94a4a5f08ae3ad0d620c8c97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const PWM_FxnTable</type>
      <name>PWMTimerCC32XX_fxnTable</name>
      <anchorfile>_p_w_m_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa0467f4acf73bc378b6964164d0065dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_01</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3618e170f0375e7f4c41263559d1282f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_02</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf155150099317e188cd7de403c210bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_17</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga26150cae31df21ab2940bc1197ad9d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_19</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga0494fc4c430672164f9da33123e552c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_21</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf825b711c08749fa231f21ebd4dc393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_64</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga8f18fefd94a4a5f08ae3ad0d620c8c97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Random.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/utils/</path>
    <filename>_random_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>Random_STATUS_SUCCESS</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a569eb30584df2e26b473d5507119527c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Random_STATUS_ERROR</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>ae958209336d4db0995ff4397a2280151</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Random_SEED_LENGTH</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a5abc4bdb7377950c94b9a748ee73e81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Random_seedAutomatic</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a268d2849532fa3d19a21477fad2465a9</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Random_seedManual</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a2daafc64202e2356609c0443847b4464</anchor>
      <arglist>(uint8_t seed[(20)])</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Random_getNumber</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>ae7ec74feb59a3a7b8990aec4694941c0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Random_getBytes</name>
      <anchorfile>_random_8h.html</anchorfile>
      <anchor>a761e6552681ea33b81aab8a807b4bc2d</anchor>
      <arglist>(void *buffer, size_t bufferSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RingBuf.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/utils/</path>
    <filename>_ring_buf_8h</filename>
    <class kind="struct">RingBuf_Object</class>
    <member kind="typedef">
      <type>struct RingBuf_Object *</type>
      <name>RingBuf_Handle</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>aa7a4c431179efc4a77b0d0ec140ca118</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RingBuf_construct</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>abadef81450098bc113f104e9adec83b1</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *bufPtr, size_t bufSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_get</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>abb0526bc9c7e9a496e7a9fafc34e753e</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_getCount</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>ac06c00bf7da6408bf2f17802e16c32a2</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RingBuf_isFull</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>adfa531b7441b7fcb65b72adef7e830b9</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_getMaxCount</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>a0e764325ed5803e2dfa555b3e0a77e39</anchor>
      <arglist>(RingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_peek</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>ac71f61b4218cdf81fc8ff30b8e9f1bce</anchor>
      <arglist>(RingBuf_Handle object, unsigned char *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RingBuf_put</name>
      <anchorfile>_ring_buf_8h.html</anchorfile>
      <anchor>a7f2d2d83515194f08fcc7901481b5c62</anchor>
      <arglist>(RingBuf_Handle object, unsigned char data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SD.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_s_d_8h</filename>
    <class kind="struct">SD_Params</class>
    <class kind="struct">SD_FxnTable</class>
    <class kind="struct">SD_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>SD_CMD_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaeae6617d0410c8dfd0df727b44d9fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gabca601c1ba0b541c82e3065b5f115ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_SUCCESS</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga691cc2fe1fe0fa94560519b53f18c647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_ERROR</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ed21a29e85502f5a205d5273df01713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga072054678e68aafcd16a7bf45892d8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_Config_ *</type>
      <name>SD_Handle</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ac00382e8276a2b571ef3bc511455812d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SD_CloseFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a1b83788bc426bb2b7c1eb7ed92958b4d</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_ControlFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae2308be8eec454cf4d95c8d6fc78c526</anchor>
      <arglist>)(SD_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>uint_fast32_t(*</type>
      <name>SD_getNumSectorsFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a2bf3ce8664f81012e946ed39028be875</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>uint_fast32_t(*</type>
      <name>SD_getSectorSizeFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ac3130521800102206c45ab597ce4f453</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SD_InitFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a49c5d5c34eaed7e73a2e3dd6ff38959a</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_InitializeFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a10d9d8767b6521bdb55f08d504131999</anchor>
      <arglist>)(SD_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>SD_Handle(*</type>
      <name>SD_OpenFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ab4bcae6f0885b93f6d5c3da91040638f</anchor>
      <arglist>)(SD_Handle handle, SD_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_ReadFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ab4201c8b89040c3f1829c2a154057b07</anchor>
      <arglist>)(SD_Handle handle, void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SD_WriteFxn</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a67504aaf6db25bed624e5bbcf3043ecd</anchor>
      <arglist>)(SD_Handle handle, const void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SD_Config_</type>
      <name>SD_Config</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae0de5710be04fcc793b2d8946d151b29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SD_CardType</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a90b1bf9153b1d83c5aaa80cad97bbec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_NOCARD</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a90b1bf9153b1d83c5aaa80cad97bbec2a1c121b7f5d4826090374c3c34b748d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_MMC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a90b1bf9153b1d83c5aaa80cad97bbec2a2d3cce4eff19e313516ca5b215f721be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_SDSC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a90b1bf9153b1d83c5aaa80cad97bbec2ae884372680134cfc338a4bc9f339bc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SD_SDHC</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a90b1bf9153b1d83c5aaa80cad97bbec2a328ee7940776cc398388d56e4eba5175</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_close</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ae7f98db7753385361e0f7927b1771c41</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_control</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>adeeaa4d71a639131abb9377322b3b226</anchor>
      <arglist>(SD_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>SD_getNumSectors</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>aecff5a5f73ac1cfbe27c2a0593dd7558</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>uint_fast32_t</type>
      <name>SD_getSectorSize</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>aa88b4d26d76ad3cdfcf652c0284e8f3d</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_init</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a0cfa8bf08501f1c19d2357856d4236ae</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SD_Params_init</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>afd09eeb2f5a0dc0a05a238a1e455e260</anchor>
      <arglist>(SD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_initialize</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a6532267348f0afa007adec0e3ff2c3e0</anchor>
      <arglist>(SD_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>SD_Handle</type>
      <name>SD_open</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>a0c897f68603b2f1341be1378ec976a2d</anchor>
      <arglist>(uint_least8_t index, SD_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_read</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>ad28e80ec85e28612af735a6a20d831c0</anchor>
      <arglist>(SD_Handle handle, void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SD_write</name>
      <anchorfile>_s_d_8h.html</anchorfile>
      <anchor>afb413a941fd83b75abdbb3dead5401d8</anchor>
      <arglist>(SD_Handle handle, const void *buf, int_fast32_t sector, uint_fast32_t secCount)</arglist>
    </member>
    <docanchor file="_s_d_8h">ti_drivers_SD_Overview</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Usage</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Synopsis</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Synopsis_Code</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Examples</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Example_getCardSpace</docanchor>
    <docanchor file="_s_d_8h">ti_drivers_SD_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>SDFatFS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_s_d_fat_f_s_8h</filename>
    <includes id="_s_d_8h" name="SD.h" local="no" imported="no">ti/drivers/SD.h</includes>
    <class kind="struct">SDFatFS_Object</class>
    <class kind="struct">SDFatFS_Config</class>
    <member kind="typedef">
      <type>SDFatFS_Config *</type>
      <name>SDFatFS_Handle</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>adaa1b3c3802d2a76f5fac08e993c48fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SDFatFS_Handle</type>
      <name>SDFatFS_open</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>af4f49c19ea2e426dc7fd4b0c534b9db8</anchor>
      <arglist>(uint_least8_t idx, uint_least8_t drive)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDFatFS_close</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>abe6d8057c1529b6e09489b1653ef48eb</anchor>
      <arglist>(SDFatFS_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SDFatFS_init</name>
      <anchorfile>_s_d_fat_f_s_8h.html</anchorfile>
      <anchor>ae3e438eb1f25f9b9f08d557bd480532c</anchor>
      <arglist>(void)</arglist>
    </member>
    <docanchor file="_s_d_fat_f_s_8h">ti_drivers_SDFatFS_Overview</docanchor>
  </compound>
  <compound kind="file">
    <name>SDHostCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/sd/</path>
    <filename>_s_d_host_c_c32_x_x_8h</filename>
    <includes id="_s_d_8h" name="SD.h" local="no" imported="no">ti/drivers/SD.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c32_x_x_8h" name="PowerCC32XX.h" local="no" imported="no">ti/drivers/power/PowerCC32XX.h</includes>
    <includes id="_u_d_m_a_c_c32_x_x_8h" name="UDMACC32XX.h" local="no" imported="no">ti/drivers/dma/UDMACC32XX.h</includes>
    <class kind="struct">SDHostCC32XX_HWAttrsV1</class>
    <class kind="struct">SDHostCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_06_SDCARD_DATA</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5d50e6d11c9fb365978f31f1dcbd28a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_07_SDCARD_CLK</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>aeec49bac201a171f8244737d9955adae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_08_SDCARD_CMD</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>a76bf7fa53044c6b0ad130d1de5e7846d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_01_SDCARD_CLK</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae9bd15604a3ae321ab181d7cb8fdc3bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_02_SDCARD_CMD</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac51233874d54441436061dd5ea2c8c71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDHostCC32XX_PIN_64_SDCARD_DATA</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>a309a157f81ed4f7d2c289964f0fd1150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SD_FxnTable</type>
      <name>sdHostCC32XX_fxnTable</name>
      <anchorfile>_s_d_host_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab3299949b2aa757aa4bac868d413b18d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SDSPI.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/sd/</path>
    <filename>_s_d_s_p_i_8h</filename>
    <includes id="_s_d_8h" name="SD.h" local="no" imported="no">ti/drivers/SD.h</includes>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <class kind="struct">SDSPI_HWAttrs</class>
    <class kind="struct">SDSPI_Object</class>
    <member kind="variable">
      <type>const SD_FxnTable</type>
      <name>SDSPI_fxnTable</name>
      <anchorfile>_s_d_s_p_i_8h.html</anchorfile>
      <anchor>a7535c02140f9b8b9762e67f46f5387ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SharpGrLib.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/display/lcd/</path>
    <filename>_sharp_gr_lib_8h</filename>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LANDSCAPE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a211dd160685be8a5a4f43be3fc3195a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_PALETTE_COLORS</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>adffaead97b78252cbb751cb2dd65b3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_BLACK</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a700708a7b3391e6ff293b1bc98a71502</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_WHITE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a7d13b434a6baf89ac9ac8b34ca7068b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_SEND_TOGGLE_VCOM_COMMAND</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>ae2cbee418c123953f828e87e7d635c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_SKIP_TOGGLE_VCOM_COMMAND</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a3047b67f085d1760edf2d6b402ad209a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_TRAILER_BYTE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a1a7f483ad96879e337efe4dad8e1f454</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_VCOM_TOGGLE_BIT</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a30554bd10ddbe85543b0ebb58e4106f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_CHANGE_VCOM</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a954836b459a3be2f0c39bc0b862fcb25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_CLEAR_SCREEN</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a9e93d5f230739149043a5415ecbea423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHARP_LCD_CMD_WRITE_LINE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a641d27c4086d7240c03b3d05ee1d45a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPYCOLORTRANSLATE</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a3b4f68242350706cc6e891fecc3399a9</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SharpGrLib_sendToggleVCOMCommand</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a8d00c53411ec9635841332391647216b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SharpGrLib_init</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>ac8a5473a3e97810ed14c47e58ee43335</anchor>
      <arglist>(SPI_Handle hSpi, uint32_t csPin)</arglist>
    </member>
    <member kind="variable">
      <type>const Graphics_Display_Functions</type>
      <name>g_sharpFxns</name>
      <anchorfile>_sharp_gr_lib_8h.html</anchorfile>
      <anchor>a6dae23f5c5fc2e9874d5e044c5727e72</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SPI.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_s_p_i_8h</filename>
    <class kind="struct">SPI_Transaction</class>
    <class kind="struct">SPI_Params</class>
    <class kind="struct">SPI_FxnTable</class>
    <class kind="struct">SPI_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>SPI_CMD_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga3d23d16525ee76f77276472d8dea80b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gae1af8c6ebf5e8fe481649f65e37b1b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab38fa90ff62128dbc98b2ecd84ca106f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_ERROR</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2d0020dd673cc28a9e1c20b0ff101073</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacfcd15e1eecdb99b4867adc7592a8d6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_WAIT_FOREVER</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a7cab73b936e6e08392882196df41277e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPI_Config_ *</type>
      <name>SPI_Handle</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a93072bc33543d36c9603198df25ee388</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_CallbackFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a207e2d5a7e7ea5606b6995b6485ca015</anchor>
      <arglist>)(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_CloseFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>aa361d580eb0a5a052d0a1403e0aa5746</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>SPI_ControlFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a0505b9eca5030ca4fc27959e2b5134ca</anchor>
      <arglist>)(SPI_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_InitFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>aa3b32db8f017fd0ce92bf46a089659e6</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>SPI_Handle(*</type>
      <name>SPI_OpenFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a7e0786f4c1487f9daec49adbc3ac1cf5</anchor>
      <arglist>)(SPI_Handle handle, SPI_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>bool(*</type>
      <name>SPI_TransferFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a470d264d053b30edb0aaafcafd335c26</anchor>
      <arglist>)(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>SPI_TransferCancelFxn</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a33f5b214451ac89ea462083eeba0bf8c</anchor>
      <arglist>)(SPI_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct SPI_Config_</type>
      <name>SPI_Config</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9ce9680cc88c403db466864c02ee4733</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_Status</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_COMPLETED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbabb35466595b950df7e3e3d880336502b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_STARTED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbad5266453aecb2fdedc0c23cd90921627</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_CANCELED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fba78957da92681e8400d84d9d3ede55836</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_FAILED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbac01b83da31c34da13025a5b987ef013f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_CSN_DEASSERT</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbaa363cddc53c1f44ca73aa661e6535816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_PEND_CSN_ASSERT</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fbad9c52e5a8cefc5b6926e19a8dd62125b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TRANSFER_QUEUED</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a913c57c335166de9caa54b7eb9ad95fba296a4fda0015070e612ab8e1ee5bc287</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_Mode</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MASTER</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942a84379dc90398ca075038c8d5ee465f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_SLAVE</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a60a7e3d74577b38aa79ea6983362f942abc98c1546fe12d3fceb1f86cf670faa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_FrameFormat</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL0_PHA0</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a0396d8c01166ff94e94e0c200261eba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL0_PHA1</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a340efc6d0f6f3b5be1151444c15faabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL1_PHA0</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489ace88daceb628498715aeda698541c95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_POL1_PHA1</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a4441729b292511628cb1e9f102da9166</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_TI</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489ac3cb11b3a833e28368e267161551eb1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MW</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a4e1f33555dfa8147205af5b266f3a489a34dc698e46fc5c1b2b1f0de19a44fdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SPI_TransferMode</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MODE_BLOCKING</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6fa0dfb2358e008316426895e7237c398e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPI_MODE_CALLBACK</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>ab9ea76c6529d6076eee5e1c4a5a92c6fa5631e69925c47a62a261c78ebbda39fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_close</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a0e3448b30b88609fa120915e49560601</anchor>
      <arglist>(SPI_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>SPI_control</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a1b3fafc9892141b7bab1bc9c19ede9ef</anchor>
      <arglist>(SPI_Handle handle, uint_fast16_t cmd, void *controlArg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_init</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>afd9b09f58917f0e2d14c61b956eba214</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>SPI_Handle</type>
      <name>SPI_open</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9c9022decfb136991d6b53f7dd2ae2fc</anchor>
      <arglist>(uint_least8_t index, SPI_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_Params_init</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a9c3dd1748332fd6e31c79a6538a71642</anchor>
      <arglist>(SPI_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SPI_transfer</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a989e17f96b54fcc3dc2cac5f8ac6bdb2</anchor>
      <arglist>(SPI_Handle handle, SPI_Transaction *transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPI_transferCancel</name>
      <anchorfile>_s_p_i_8h.html</anchorfile>
      <anchor>a6819f7761fc3505c4f885653ff8121f0</anchor>
      <arglist>(SPI_Handle handle)</arglist>
    </member>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Overview</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Usage</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Synopsis</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Examples</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_openblocking</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_opencallback</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_6bitframes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_12bitframes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Example_callbackarg</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_MasterSlaveModes</docanchor>
    <docanchor file="_s_p_i_8h">ti_drivers_SPI_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>SPICC32XXDMA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/spi/</path>
    <filename>_s_p_i_c_c32_x_x_d_m_a_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_s_p_i_8h" name="SPI.h" local="no" imported="no">ti/drivers/SPI.h</includes>
    <includes id="_u_d_m_a_c_c32_x_x_8h" name="UDMACC32XX.h" local="no" imported="no">ti/drivers/dma/UDMACC32XX.h</includes>
    <class kind="struct">SPICC32XXDMA_HWAttrsV1</class>
    <class kind="struct">SPICC32XXDMA_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>SPICC32XXDMA_PIN_NO_CONFIG</name>
      <anchorfile>_s_p_i_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ae945ff9c77552e825b903f25a65acecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPICC32XXDMA_Object *</type>
      <name>SPICC32XXDMA_Handle</name>
      <anchorfile>_s_p_i_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a7d912ead2cb5bc6da35a21dfefa087e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SPI_FxnTable</type>
      <name>SPICC32XXDMA_fxnTable</name>
      <anchorfile>_s_p_i_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ad804358f32b99442f86f3ef1f74255b9</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_s_p_i_c_c32_x_x_d_m_a_8h">ti_drivers_spi_SPICC32XXDMA_example_queueing</docanchor>
  </compound>
  <compound kind="file">
    <name>spiffs.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/third_party/spiffs/</path>
    <filename>spiffs_8h</filename>
    <class kind="struct">spiffs_config</class>
    <class kind="struct">spiffs_t</class>
    <class kind="struct">spiffs_stat</class>
    <class kind="struct">spiffs_dirent</class>
    <class kind="struct">spiffs_DIR</class>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_OK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaf46e44b46e27f0104c79041b35fcd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_MOUNTED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a95b07cd903621bd10ef7bd4cd82b03e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FULL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a60195f45cfc3e85e4c45984967916d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_FOUND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acbe4629e401ab11153050b14abb4c0d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_END_OF_OBJECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8e3ff2f9c010bdbac672ce08c4c2fc2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8a7ec7d700a8037223d710d017d0c3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_FINALIZED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac8694b846a4ea1818f0859978879e8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5f213eb33bba3a160a51727dea8feb96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_OUT_OF_FILE_DESCS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aebe2663803256d1983a8c1e64f6cd8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_CLOSED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a4117c02be38676c3307468c0e37f6e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9ad93f5b148381c38d035c7e2392c332</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_BAD_DESCRIPTOR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad217e50d0b8f1dbb38fc6dae257c9601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IS_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a91dca975b2da14dd0283fddd8abbbaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IS_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a75ebdffd7e64edfbedfb69b7e560020a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_SPAN_MISMATCH</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a51bbb3df20b44217eca88c0b626648b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_DATA_SPAN_MISMATCH</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9d699bd7663614dc7018cccfdd07d11a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af1959dc09a5f3b86a7078e290f95cf1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_LU</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1bdb498b308885d3e6fa7d5c816e5bb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_REF_INVALID</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a4f9cdd15910c779ead0af40c6af8462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_FREE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2a95dd91935e3ac3395675b33d1948f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_LU</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6042eeaa6871c8c10effbd7a1660852b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INDEX_INVALID</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1f28edbf79a1df2b37ef9895cc08bbf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_WRITABLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9702280484c31920f8f9e05601b42f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_READABLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a40afd7f07a93606167411b1c1c596462</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_CONFLICTING_NAME</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a51fc1846473ea5c4110dab3ab7aedc69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_CONFIGURED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad7710ce1db415f47eaff65faa164e1d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_A_FS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2c81a67c16112930ac3c08a4ca1cdf36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_MOUNTED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af3d313cdaed74625203afeee0f83fb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_ERASE_FAIL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a679a2e0cf96ecf797dc0e4cc2bfd8ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_MAGIC_NOT_POSSIBLE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a813d1248ba8b81bd889bfb6b3efde912</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NO_DELETED_BLOCKS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a2542f17c1fb9dd08cbf2f68b786b2a8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_FILE_EXISTS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0c27e45c85d584c641ea67cac3cb729a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NOT_A_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5d33fd2311517b3bb39a612021265e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_RO_NOT_IMPL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9d66dd941e345bb29809ab7ce4bcf397</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_RO_ABORTED_OPERATION</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8ef0cea17133a91eb23e95a1cedc4dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_PROBE_TOO_FEW_BLOCKS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1b1e4016fc803283471e84dd2f298b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_PROBE_NOT_A_FS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a7cb17d31aaad66b3542b781fc2aaf8d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_NAME_TOO_LONG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3d69df2d6b16ec7b56139cfee87bd00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_UNMAPPED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a416727f6cfa5caa44cd0acd358621518</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_MAPPED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a461af11cadc8809b5a7ef6d259b810e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_IX_MAP_BAD_RANGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1dc6302927b3d8597395013309aa0818</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_SEEK_BOUNDS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acc41886b91465d4ed7bc23bf2981be02</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_INTERNAL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab37e791bd90ab58be013d6654f7b273d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_ERR_TEST</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a96dcc8718b8d3ba369c8d4a7e7115add</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a219c4e2521b910408d4b13f9f6335fa9</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_GC_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a19bb9066adb9e72686564b30f5163db4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CACHE_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3be5a4ddb405c912c0f98c4ad5afa953</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CHECK_DBG</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adde3421152bb16ebdc80074b04cc87e4</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_APPEND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a8cc70d514d1a9f0d7c56adebb739a350</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_APPEND</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>abf2eb79c7e00f4bce92799f3bbe91bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TRUNC</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a32ce65d3a095a63730bf4628aa702549</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_TRUNC</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaca1d8666d8b9d14c43fc6be0a7ef2e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_CREAT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a862f18dd74ef4734b2a599c3d90f44f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_CREAT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3b150deb093f0bd78aaeb77ab25dccce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_RDONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a99b307af3f50d5bb705014b4da7d4fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_RDONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac5a7ae6872f9861130b99d5c3251cff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_WRONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acce3bbcf70c00099eec1cba7bbd7613f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_WRONLY</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af564b4e805764972072bf191d93d25bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_RDWR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>afd17ea90145b927e9b48e3377bc32658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_RDWR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aca28c6e538725ba8430ed74dcf3818ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_DIRECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae418936eb506aad21e28137ece75ec7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_DIRECT</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a71cdc0ddc8522057f0f7b93f272e33ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_EXCL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adf2830f94d06a88f6c636b31d7092325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_O_EXCL</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a58b14c2213b7d9516b32df81be42eee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_SET</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae321bd3f65212d82d8000e6f5b4e7bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_CUR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>afca3dc9ec2bd85a74c5cf5723fb84911</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_SEEK_END</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad3552eeb066a84e97d3edb0b6570ce84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aefcad3586e1b275fe1198aa2a5f0901b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_DIR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6315d54ace53506240e737e5375a1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_HARD_LINK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae154415a4359a734c79512cf1c2edf27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_TYPE_SOFT_LINK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a57147097b0ddc63bc504d25442450a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_LOCK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab96302d0630788c4b1b78c520943d286</anchor>
      <arglist>(fs)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFS_UNLOCK</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a46695e2a185280afbd9723da9cc6d9a4</anchor>
      <arglist>(fs)</arglist>
    </member>
    <member kind="typedef">
      <type>s16_t</type>
      <name>spiffs_file</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adedd285e078b4def41b8569797699346</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u16_t</type>
      <name>spiffs_flags</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a80a41355b551d9df0afa002b3bec5180</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u16_t</type>
      <name>spiffs_mode</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aaab6ad7b72ee956bf99f208c894c99e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>u8_t</type>
      <name>spiffs_obj_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a27e06ffa80e88de370c28c07654fe26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_read</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3861dee7404337e10303e4b60053a9e8</anchor>
      <arglist>)(u32_t addr, u32_t size, u8_t *dst)</arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_write</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a83a624c7f2fa5c652dcfffb8465e41ff</anchor>
      <arglist>)(u32_t addr, u32_t size, u8_t *src)</arglist>
    </member>
    <member kind="typedef">
      <type>s32_t(*</type>
      <name>spiffs_erase</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3b0c340a6f72ada33af802238a3a013c</anchor>
      <arglist>)(u32_t addr, u32_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>spiffs_check_callback</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a71711b340d43dc350f5142ed8e86e91c</anchor>
      <arglist>)(spiffs_check_type type, spiffs_check_report report, u32_t arg1, u32_t arg2)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>spiffs_file_callback</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a752009b605995fbff7bea2d84763e660</anchor>
      <arglist>)(struct spiffs_t *fs, spiffs_fileop_type op, spiffs_obj_id obj_id, spiffs_page_ix pix)</arglist>
    </member>
    <member kind="typedef">
      <type>struct spiffs_t</type>
      <name>spiffs</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad770b2e1589c193b8e39b6335e48e32e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_check_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_LOOKUP</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a8852b4978b03314e48e02ab129e87b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a36234203b1969cbfbdde4a32100d39d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_PAGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aecc824b4fda7a44172d9dc717367a7c1a870a8091717ec7d3500a0823d14344f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_check_report</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_PROGRESS</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea09458be9a09b788f17e873e586cc0d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_ERROR</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea2f790a0a5b2e2ece1862965f9ade3d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_FIX_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264eaafad10b1f2b2eded33c061ed087eb52d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_FIX_LOOKUP</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea5202022eab6ff9b6c200bfeda8c156c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_ORPHANED_INDEX</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea97b9d2c9d85505ba9cccd2eb159e73f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_PAGE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea2c0cc4d90c44ce277512b07ae8a38d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CHECK_DELETE_BAD_FILE</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0e06df30b45747676605d5b33183264ea431e9e76813a5d6a1c3096b41f627d93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>spiffs_fileop_type</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_CREATED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150eda6a101e5aefac29ac831386e6636350f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_UPDATED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150eda235d3dfa839481e4d01cdfe4d25c5570</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPIFFS_CB_DELETED</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab3f4ed294c1046408a32d25e8f7150edae9aea2479ae618ae2ef050fc81d65a90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_mount</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a16d6f29a836803993d12b0f51e81a1e0</anchor>
      <arglist>(spiffs *fs, spiffs_config *config, u8_t *work, u8_t *fd_space, u32_t fd_space_size, void *cache, u32_t cache_size, spiffs_check_callback check_cb_f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPIFFS_unmount</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a98b86b521e4e51790dac322618558441</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_creat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad653345a098d4933f63a95a1a64cb5fe</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ad6449ab3ad1c07b9a8ca743af4b836fa</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open_by_dirent</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5442ec7cf9973ef1bae26753f8715b8d</anchor>
      <arglist>(spiffs *fs, struct spiffs_dirent *e, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_file</type>
      <name>SPIFFS_open_by_page</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adc5848eb9323ebfbad6f1a94f34154f4</anchor>
      <arglist>(spiffs *fs, spiffs_page_ix page_ix, spiffs_flags flags, spiffs_mode mode)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_read</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>abe8899197a8c5032f7dd85f3a9f9eec6</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, void *buf, s32_t len)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_write</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>af34f802723bd3a2e033b44c644483d39</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, void *buf, s32_t len)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_lseek</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ae396bc62e88e9846d371f16859b93e54</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, s32_t offs, int whence)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_remove</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a962677491700668b80117a9e0f728b51</anchor>
      <arglist>(spiffs *fs, const char *path)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fremove</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a1e75f5d57aeb09fa936a1fa3d6ceb2d5</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_stat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a3ac72ca8843be826ef5a77b1663ee4ac</anchor>
      <arglist>(spiffs *fs, const char *path, spiffs_stat *s)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fstat</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a0bfb43557c275cf88eae52dcd7b53524</anchor>
      <arglist>(spiffs *fs, spiffs_file fh, spiffs_stat *s)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_fflush</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ac335bf8ade9f4f8ac44123a6a608d78a</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_close</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a9a9babd221dab492856c5da4fa74bf88</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_rename</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a20b3521d3794d9150f4116372ff7c4e9</anchor>
      <arglist>(spiffs *fs, const char *old, const char *newPath)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_errno</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a7c7c930dcabe1403be5bf5ecd57986ec</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPIFFS_clearerr</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a5b45ea9230e7d9a73bc63f871b33b709</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>spiffs_DIR *</type>
      <name>SPIFFS_opendir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a116271bb88503c16c860b805368c88be</anchor>
      <arglist>(spiffs *fs, const char *name, spiffs_DIR *d)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_closedir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a88a4782ebf1c1d37c5c2352a7700a4cf</anchor>
      <arglist>(spiffs_DIR *d)</arglist>
    </member>
    <member kind="function">
      <type>struct spiffs_dirent *</type>
      <name>SPIFFS_readdir</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>adb15aebc5a6add477b2f6dbf81756763</anchor>
      <arglist>(spiffs_DIR *d, struct spiffs_dirent *e)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_check</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>ab2a6e1f0464c8fa41535b43d597cdd26</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_info</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>acfda216b52879b2e8b637258f319269a</anchor>
      <arglist>(spiffs *fs, u32_t *total, u32_t *used)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_format</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a85de96c305e5b362975ef8dceebfd9e4</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>u8_t</type>
      <name>SPIFFS_mounted</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a6796d3c00ddb94ec1e2fe2fde2bb292a</anchor>
      <arglist>(spiffs *fs)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_gc_quick</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aea9c999e519fc5ad90c1580d9835ac9f</anchor>
      <arglist>(spiffs *fs, u16_t max_free_pages)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_gc</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a996713c9c86267523b1fcf14e1f59ba1</anchor>
      <arglist>(spiffs *fs, u32_t size)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_eof</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aa964e15f59ddd9053b78933d661282e8</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_tell</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>aae0d52538b75019bb6f745de8d143765</anchor>
      <arglist>(spiffs *fs, spiffs_file fh)</arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFS_set_file_callback_func</name>
      <anchorfile>spiffs_8h.html</anchorfile>
      <anchor>a10506068cc612f18ca683cdd1ea1e4fd</anchor>
      <arglist>(spiffs *fs, spiffs_file_callback cb_func)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SPIFFSNVS.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/third_party/spiffs/</path>
    <filename>_s_p_i_f_f_s_n_v_s_8h</filename>
    <includes id="spiffs_8h" name="spiffs.h" local="yes" imported="no">spiffs.h</includes>
    <includes id="_n_v_s_8h" name="NVS.h" local="no" imported="no">ti/drivers/NVS.h</includes>
    <class kind="struct">SPIFFSNVS_Lock_</class>
    <class kind="struct">SPIFFSNVS_Data_</class>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga44e1652f2eb8528bf93adc77e3e013d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_ERROR</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga24d6594e8daac912958ef381ffd60763</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_NVS_IDX</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaaed3fec880853b3df3ddc6f2bd171f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_BLOCK_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7961506209d7c5a1dc791159d6c52a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_PAGE_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga21872212b529e6a1157b6f3f4e579dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPIFFSNVS_Lock_</type>
      <name>SPIFFSNVS_Lock</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>a7cf3f1a05b93a1ab7433d42bb2bafc4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct SPIFFSNVS_Data_</type>
      <name>SPIFFSNVS_Data</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>a4c955949f2948a593abf50454c1dada9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>s32_t</type>
      <name>SPIFFSNVS_config</name>
      <anchorfile>_s_p_i_f_f_s_n_v_s_8h.html</anchorfile>
      <anchor>ad200c9f25659779041c17893b0155a48</anchor>
      <arglist>(SPIFFSNVS_Data *spiffsnvsData, u32_t nvsIndex, spiffs *fs, spiffs_config *fsConfig, u32_t logicalBlockSize, u32_t logicalPageSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StructRingBuf.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/utils/</path>
    <filename>_struct_ring_buf_8h</filename>
    <class kind="struct">StructRingBuf_Object</class>
    <member kind="typedef">
      <type>struct StructRingBuf_Object *</type>
      <name>StructRingBuf_Handle</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>ac490114d419bf92b434255510cf3a912</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StructRingBuf_construct</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>ade9017b95cd31b001b0fe4d8bb24f9c5</anchor>
      <arglist>(StructRingBuf_Handle object, void *bufPtr, size_t bufSize, size_t structSize)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StructRingBuf_get</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>afa628881f67542c519f34cfaf6ee143a</anchor>
      <arglist>(StructRingBuf_Handle object, void *data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StructRingBuf_getCount</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>a653022bda871039e93904e6ba138d783</anchor>
      <arglist>(StructRingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StructRingBuf_isFull</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>a67c3ee808816a1ef65eb50647b0fb1db</anchor>
      <arglist>(StructRingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StructRingBuf_getMaxCount</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>aca0676eb69149740fa3c2bd078dfe11e</anchor>
      <arglist>(StructRingBuf_Handle object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StructRingBuf_peek</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>a48be75cc90d0c872eb69f393a92f8098</anchor>
      <arglist>(StructRingBuf_Handle object, void **data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>StructRingBuf_put</name>
      <anchorfile>_struct_ring_buf_8h.html</anchorfile>
      <anchor>a75382329a423c45fde1896cdff4e1bb7</anchor>
      <arglist>(StructRingBuf_Handle object, const void *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Timer.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_timer_8h</filename>
    <class kind="struct">Timer_Params</class>
    <class kind="struct">Timer_FxnTable</class>
    <class kind="struct">Timer_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>Timer_CMD_RESERVED</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae07d04d02a6ddc6e02271084a71a365e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Timer_STATUS_RESERVED</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a904cb478987bb4d1747d39280ab5727e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Timer_STATUS_SUCCESS</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ac8686101a9b8fbee4eacc2b40ff708e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Timer_STATUS_ERROR</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>aaa10cf27200f356b47e6f8a4088d37f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Timer_STATUS_UNDEFINEDCMD</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a45b37be0a813d7d501da46578fd5f6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Timer_Config_ *</type>
      <name>Timer_Handle</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a20f0a8998127dfcff910d15393f564a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Timer_CallBackFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a2511f870b3eb9d872315fadeeeb09e4b</anchor>
      <arglist>)(Timer_Handle handle, int_fast16_t status)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Timer_ControlFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a965461a1bad38b7c19e37e3b337096e0</anchor>
      <arglist>)(Timer_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Timer_CloseFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a7418a314c1c025febfd2ea43fd55c740</anchor>
      <arglist>)(Timer_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t(*</type>
      <name>Timer_GetCountFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a99b9c3330524ba12bdcf9f4159bac7dc</anchor>
      <arglist>)(Timer_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Timer_InitFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a67ab2fce64b3252b4499d22d89679604</anchor>
      <arglist>)(Timer_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>Timer_Handle(*</type>
      <name>Timer_OpenFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ad833d510ee86d5b5c8cca2f23a9dbf9e</anchor>
      <arglist>)(Timer_Handle handle, Timer_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int32_t(*</type>
      <name>Timer_SetPeriodFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a55f7b62f178dcc476fd544893d178d2a</anchor>
      <arglist>)(Timer_Handle handle, Timer_PeriodUnits periodUnits, uint32_t period)</arglist>
    </member>
    <member kind="typedef">
      <type>int32_t(*</type>
      <name>Timer_StartFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>aa4cb84a48be15b66d2666239b06072d8</anchor>
      <arglist>)(Timer_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Timer_StopFxn</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a681079e95179fd797e04a7fc1e68bb6e</anchor>
      <arglist>)(Timer_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Timer_Config_</type>
      <name>Timer_Config</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a4c61ce326e1836cd5a5f9d9a728c1ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Timer_Mode</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab0e86a066b5c68c55183cd680090a9b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_ONESHOT_CALLBACK</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab0e86a066b5c68c55183cd680090a9b7a01f0c06391bb2ea1ec530ba502a795a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_ONESHOT_BLOCKING</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab0e86a066b5c68c55183cd680090a9b7ac93d728c52e809e9c179ff8da526ca00</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_CONTINUOUS_CALLBACK</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab0e86a066b5c68c55183cd680090a9b7ae8bfe2f9b37749ebc20b9905a459843b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_FREE_RUNNING</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab0e86a066b5c68c55183cd680090a9b7a90581a353ae32c561dfbc6c60b9ec49e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Timer_PeriodUnits</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae5b37c2cc77a2a426ba45d2c8544d439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_PERIOD_US</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae5b37c2cc77a2a426ba45d2c8544d439a03cfd261fae09a76a370acd8240181b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_PERIOD_HZ</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae5b37c2cc77a2a426ba45d2c8544d439afe77ce02e894805812fd4b497b2ba41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Timer_PERIOD_COUNTS</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae5b37c2cc77a2a426ba45d2c8544d439ac22836849686dc6b10a6cdf2c689d142</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Timer_close</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a826779747913a65d4f683a627fd0759f</anchor>
      <arglist>(Timer_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Timer_control</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ab27a6e779a8f6872cff60fdeab349700</anchor>
      <arglist>(Timer_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Timer_getCount</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a29ed26e8d3139f8ac21746c14d8b7abc</anchor>
      <arglist>(Timer_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Timer_init</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ace12508d33b354c0194b6f72cfc3bf12</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Timer_Handle</type>
      <name>Timer_open</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a85fff65681abf4b7d65309aeac73c52c</anchor>
      <arglist>(uint_least8_t index, Timer_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Timer_setPeriod</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>aee385432bc15af4d7ae919e941341a4c</anchor>
      <arglist>(Timer_Handle handle, Timer_PeriodUnits periodUnits, uint32_t period)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Timer_Params_init</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae5309d35d8dfc6b2f0b24c7eec556dec</anchor>
      <arglist>(Timer_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Timer_start</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>ae2f09cd2a7f7251e5fffade75378c332</anchor>
      <arglist>(Timer_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Timer_stop</name>
      <anchorfile>_timer_8h.html</anchorfile>
      <anchor>a3b951947aeec93b4610f87ba7b8a8621</anchor>
      <arglist>(Timer_Handle handle)</arglist>
    </member>
    <docanchor file="_timer_8h">ti_drivers_Timer_Overview</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Usage</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Synopsis</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Synopsis_Code</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Examples</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Examples_open</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Examples_mode</docanchor>
    <docanchor file="_timer_8h">ti_drivers_Timer_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>TimerCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/timer/</path>
    <filename>_timer_c_c32_x_x_8h</filename>
    <includes id="_timer_8h" name="Timer.h" local="no" imported="no">ti/drivers/Timer.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">TimerCC32XX_HWAttrs</class>
    <class kind="struct">TimerCC32XX_Object</class>
    <member kind="enumeration">
      <type></type>
      <name>TimerCC32XX_SubTimer</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>a97bb0318f72dfc66cb16aa018a374216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimerCC32XX_timer16A</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>a97bb0318f72dfc66cb16aa018a374216a43b7adae2f0ef1ee10e9da49473fb773</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimerCC32XX_timer16B</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>a97bb0318f72dfc66cb16aa018a374216aa51314518db28d1b5c91f8d6e5e80347</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TimerCC32XX_timer32</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>a97bb0318f72dfc66cb16aa018a374216a538222c3d455a024fc5081a58f6d47c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TimerCC32XX_allocateTimerResource</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9c7287300ff1a5fc69d13ccc79974b4a</anchor>
      <arglist>(uint32_t baseAddress, TimerCC32XX_SubTimer subTimer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TimerCC32XX_freeTimerResource</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>abbbd7c7539b84bf0e70be8564aeea5e3</anchor>
      <arglist>(uint32_t baseAddress, TimerCC32XX_SubTimer subTimer)</arglist>
    </member>
    <member kind="variable">
      <type>const Timer_FxnTable</type>
      <name>TimerCC32XX_fxnTable</name>
      <anchorfile>_timer_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac628780d3bd20f36d4fa40a3bfb9fe57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>types.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/kernel/nortos/posix/sys/</path>
    <filename>types_8h</filename>
    <member kind="typedef">
      <type>long int</type>
      <name>ssize_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a725ad8f32fd52878db75ae0efa60c3a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>clockid_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>aac50bafb9f9a838df14fab213146caea</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>useconds_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>a1cf3c794977f92f3ccf2e041a68f3342</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>timer_t</name>
      <anchorfile>types_8h.html</anchorfile>
      <anchor>aa37fa84abebf94371f0c8426c2fc614d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UART.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_u_a_r_t_8h</filename>
    <class kind="struct">UART_Params</class>
    <class kind="struct">UART_FxnTable</class>
    <class kind="struct">UART_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga0f5a809e0884da33fef102236eb51644</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga8f35027907fbab6a9ee302d2ee52a879</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga101b7761f89b3ec49f0c6726669acfed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_ERROR</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ae076f4aae13ca8e2aea674207df0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga61125a2eb8059fd8b96ad95edc68ac2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_PEEK</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga942596a37cb2109ae021f88f3d907bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_ISAVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaf5be6db621c5b048637dc93b26797693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_GETRXCOUNT</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga470321cbd9eccf137ffbe6553ae7f35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gad67d01fa376f25bb28141d819647e8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXDISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gac0b19ce2fa9f43d3fe255bcdbd3cda7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_ERROR</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a7e3562e7931cf51b41a32d8109072251</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_WAIT_FOREVER</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ada620b673241eb6335a71e75da291716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_Config_ *</type>
      <name>UART_Handle</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab69886c7119a5054a972d8c735f15928</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_Callback</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5d43bd8997e9153ce790bc81467ec935</anchor>
      <arglist>)(UART_Handle handle, void *buf, size_t count)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_CloseFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ae08ff15291bd6b21cb4e2eb1fce164a6</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>UART_ControlFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a583c5e0b34e5806ec225f61d0daed0d6</anchor>
      <arglist>)(UART_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_InitFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a2b3e89df3065fffb47e7354067c14d1b</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>UART_Handle(*</type>
      <name>UART_OpenFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a39e21ac60f24eb9ce32286e21de713d1</anchor>
      <arglist>)(UART_Handle handle, UART_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_ReadFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad1d454c210267a4d04ecce802947633c</anchor>
      <arglist>)(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_ReadPollingFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a96c6ef4189723f6ac960a82e6a232b35</anchor>
      <arglist>)(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_ReadCancelFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa46296acc2c197a775d44458e1eca197</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_WriteFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aad6b880dc397d9454038b383d6b821c8</anchor>
      <arglist>)(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast32_t(*</type>
      <name>UART_WritePollingFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aa6f14597bf561bf987ce6a48dac08076</anchor>
      <arglist>)(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART_WriteCancelFxn</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac5a3d974279a2d161746dfbc8ca91774</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UART_Config_</type>
      <name>UART_Config</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a68be81b9ce429a5e5c3ac02d285dbd3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_Mode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a2507a620dba95cd20885c52494d19e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_MODE_BLOCKING</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a2507a620dba95cd20885c52494d19e90ae6b6bd5d2d5df859ad6724e89e605ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_MODE_CALLBACK</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a2507a620dba95cd20885c52494d19e90ae0dbd9b5195e56c3c2aed10163523754</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_ReturnMode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acb5a82843435a1b5d51b6c27028d914f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_RETURN_FULL</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acb5a82843435a1b5d51b6c27028d914fa50c07cbaf7518a0acd14137e801687e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_RETURN_NEWLINE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>acb5a82843435a1b5d51b6c27028d914fa3b8e419e0e12abf80b25f72d17745f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_DataMode</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a694090fdb166f94ac30b809f9cba87b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_DATA_BINARY</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a694090fdb166f94ac30b809f9cba87b8aaa8edcbf6c236b0d86491ea1e7c9e4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_DATA_TEXT</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a694090fdb166f94ac30b809f9cba87b8a87fdfb7ca981eab7f56c51380fd7094e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_Echo</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aac6a03c2e1d76f53e1d9d923dcdc24f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_ECHO_OFF</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aac6a03c2e1d76f53e1d9d923dcdc24f2a2b286f182793d4a71bdf99409b9600dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_ECHO_ON</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>aac6a03c2e1d76f53e1d9d923dcdc24f2a6c4d8a2d4e30c22cf9fa45cd1bf79306</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_LEN</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>adf245d5f10db0abcbd8ad62a0d80c694</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_5</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>adf245d5f10db0abcbd8ad62a0d80c694a27d04dd1fa818f764eb9b8e849feb7ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_6</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>adf245d5f10db0abcbd8ad62a0d80c694a5bfd5507335d394d826e560930ce2a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_7</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>adf245d5f10db0abcbd8ad62a0d80c694a2ac8467047f55cc1954388bf94c72e35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_LEN_8</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>adf245d5f10db0abcbd8ad62a0d80c694a31abbaaeaa38a5c66fbe13bfc8ece221</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_STOP</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a176b71ca19bc13d7534fa30fc18c2243</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_STOP_ONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a176b71ca19bc13d7534fa30fc18c2243a9bfa599e95c5da9cfe5f964dab8a9c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_STOP_TWO</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a176b71ca19bc13d7534fa30fc18c2243a3f41137f3775e7d33fdb250471c0248e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART_PAR</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_NONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4a469955a283c95f261990ad07043d5d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_EVEN</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4a5405c8d842bffa2f76999eef9cee32c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ODD</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4a498f72ae68542763da3072d3e3af6603</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ZERO</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4adfb9d17fa33753ea5550e757b323bd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART_PAR_ONE</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ac70b5aa75500b8c45a51ec560deccfc4a7ab50a9a14f4c614e875fbab74911afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_close</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a6b49b65f3db709c408dc4db23a68895d</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART_control</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a5ce79dc51ddc3ef73e8f08983bfee2c7</anchor>
      <arglist>(UART_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_init</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab60a36f7295d704926120d22f806dcd1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>UART_Handle</type>
      <name>UART_open</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ab6d1d6b7b1f9922484f9b8a0f78ed030</anchor>
      <arglist>(uint_least8_t index, UART_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_Params_init</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a40e5c0823bb7ffd2e8fbf19f9f20b399</anchor>
      <arglist>(UART_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_write</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a1036c2d5258ff70e9afe6cbfc326544f</anchor>
      <arglist>(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_writePolling</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>ad8cda326eb3c05ee05950680bee42e5a</anchor>
      <arglist>(UART_Handle handle, const void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_writeCancel</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a0482cd0ab9ee7e802c8e785a5754d16d</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_read</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a15d77f489566ff9f7c9c28d25e9a0135</anchor>
      <arglist>(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int_fast32_t</type>
      <name>UART_readPolling</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a3ac6ed8cfd03b84198ba6adcd8c248e6</anchor>
      <arglist>(UART_Handle handle, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART_readCancel</name>
      <anchorfile>_u_a_r_t_8h.html</anchorfile>
      <anchor>a51ed7e94d5b409ca1fcb2d65c5a25c3c</anchor>
      <arglist>(UART_Handle handle)</arglist>
    </member>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Overview</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Usage</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Synopsis</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Synopsis_Code</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Examples</docanchor>
    <docanchor file="_u_a_r_t_8h">ti_drivers_UART_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>UART2.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_u_a_r_t2_8h</filename>
    <class kind="struct">UART2_Params</class>
    <class kind="struct">UART2_FxnTable</class>
    <class kind="struct">UART2_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50f50c06775b7ee13f45fe80c93fb356</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_SREADTIMEOUT</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2eafae271234b3df03442a2f5b1b7270</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EFRAMING</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga056a6acd9fc1a49cb30c8baabecc35df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EPARITY</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa3d362690c0ab4dd14e50f53737499a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EBREAK</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4684c6671d256dc72b13ddb1eafd9971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EOVERRUN</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab410e4da00bc79fdbbe921e89a78ffeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EINUSE</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga0ec322208aa002ae4b058a410a387801</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EINVALID</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac2a4b2002f04d6caaeee837aa662e7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EFAIL</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad3e0d7738225ce8f423e32e0c90d883e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EMEMORY</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4cab16fd65127a1987a20caa0653476b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ETIMEOUT</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeb708c48cd2517f08660196f16d31a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ECANCELLED</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad528e61ecc06c90d5824796ce547ecb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ENOTOPEN</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga02bfc05124702d98c0540896ead270a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_WAIT_FOREVER</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ad94e3ea6008dfc427628433dc5ac6592</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART2_Config_ *</type>
      <name>UART2_Handle</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>abbf55a000a1ce4c24c15c03fbb610b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART2_Callback</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a00d68ce47bb8b798f31c3338077d301a</anchor>
      <arglist>)(UART2_Handle handle, void *buf, size_t count, void *userArg, int_fast16_t status)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART2_CloseFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>af5d8a9b5f17bcff4e45ead5f5cc7f840</anchor>
      <arglist>)(UART2_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART2_FlushRxFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a8fa5891ee52a732cf856e7b252ad4c20</anchor>
      <arglist>)(UART2_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>UART2_Handle(*</type>
      <name>UART2_OpenFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ad3127226f01c75bcec70428aae16f1a0</anchor>
      <arglist>)(uint_least8_t index, UART2_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>UART2_ReadFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a0d71293060697e153d50dd20ac28cfd4</anchor>
      <arglist>)(UART2_Handle handle, void *buffer, size_t size, size_t *bytesRead, uint32_t timeout)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART2_ReadCancelFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a421e6f83dc5ad9f786277ed70c6e3e0c</anchor>
      <arglist>)(UART2_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>UART2_WriteFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a08dbaef8e8f6fd515a11c5fef172a927</anchor>
      <arglist>)(UART2_Handle handle, const void *buffer, size_t size, size_t *bytesWritten, uint32_t timeout)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UART2_WriteCancelFxn</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a72fe1832cd5a079387f38f86b33aec61</anchor>
      <arglist>)(UART2_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UART2_Config_</type>
      <name>UART2_Config</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a5a9ed8d3be24bf0ba355ec100f9eabbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2_Mode</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a5bfa1a3442db9943342497e519a08863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Mode_BLOCKING</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a5bfa1a3442db9943342497e519a08863a7d3f5d67bebb58f7ae475cce13779c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Mode_CALLBACK</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a5bfa1a3442db9943342497e519a08863a2bf221b50ba7a639b06b592cfdccd5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Mode_POLLING</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a5bfa1a3442db9943342497e519a08863a0e91143b8d918f4b11435189cb310c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2_ReadReturnMode</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ab233d65776f6f909c674c5baae27637d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_ReadReturnMode_FULL</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ab233d65776f6f909c674c5baae27637da183a4bd9f538e511bbbd6d91e6889037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_ReadReturnMode_PARTIAL</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ab233d65776f6f909c674c5baae27637dae54481886c1c305f3f8fdf842bdb53c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2_DataLen</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a6c14675701ba732f156c2eea7e3f6515</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_DataLen_5</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a6c14675701ba732f156c2eea7e3f6515abf6427750460fb2f0d0cdfbd4a1dce9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_DataLen_6</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a6c14675701ba732f156c2eea7e3f6515ab53fa866e596d2ea28672962b30ea0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_DataLen_7</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a6c14675701ba732f156c2eea7e3f6515ae669912970cfcd98fc5c5702f6256571</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_DataLen_8</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a6c14675701ba732f156c2eea7e3f6515abcb7ead4413215f0473c368f284ef729</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2_StopBits</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ae0d2d6413d7e338fd053569d848c239f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_StopBits_1</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ae0d2d6413d7e338fd053569d848c239faa707a48589e67b81ac5a2f22342070e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_StopBits_2</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>ae0d2d6413d7e338fd053569d848c239fa59f4de55d4d1844a50efc38f0e99bc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2_Parity</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Parity_NONE</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994dafef829752e4d035a457dce76f23cec19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Parity_EVEN</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994da7e4737a62b3bb4385542849b38a4c058</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Parity_ODD</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994da4a98084e16b8754a068fe9fb11c17ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Parity_ZERO</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994dafc82a57ded8fec31003fe0b6520f1fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2_Parity_ONE</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a259cb78d1b403c91619af5153a84994dae95a66e405093bb4a4c4f071facfa1c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2_close</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a2a82f370c2f15ececc5b03fbba65bcde</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2_flushRx</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a63fc2eca3cffea172c99d152f7d4ebd9</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>UART2_Handle</type>
      <name>UART2_open</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a03b76166f16518bc1cdf85fdf6aa206b</anchor>
      <arglist>(uint_least8_t index, UART2_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2_Params_init</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a8fd27db3b9bcca2fc88f65b2d26895d5</anchor>
      <arglist>(UART2_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2_read</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a3406839adde44077da387c89fa9ddb0d</anchor>
      <arglist>(UART2_Handle handle, void *buffer, size_t size, size_t *bytesRead)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2_readTimeout</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a0f025f78353515c8b0050f9d41596969</anchor>
      <arglist>(UART2_Handle handle, void *buffer, size_t size, size_t *bytesRead, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2_readCancel</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>aa8302b9b2d54d3f8a428a9225e267a41</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2_write</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a85ec2c5906ad36adc14cddd011b3b7cf</anchor>
      <arglist>(UART2_Handle handle, const void *buffer, size_t size, size_t *bytesWritten)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2_writeTimeout</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>adc4b4c351fc4fb2663d6737a0cd4c7db</anchor>
      <arglist>(UART2_Handle handle, const void *buffer, size_t size, size_t *bytesWritten, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2_writeCancel</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a7052ce61a02ae90920d11c9bacddbf1e</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const UART2_Config</type>
      <name>UART2_config</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a80d75291c42d2471b3c38dce6b6bdb0a</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>const uint_least8_t</type>
      <name>UART2_count</name>
      <anchorfile>_u_a_r_t2_8h.html</anchorfile>
      <anchor>a9a11a7ad983146f408d8deb22b764710</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Overview</docanchor>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Usage</docanchor>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Synopsis</docanchor>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Synopsis_Code</docanchor>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Examples</docanchor>
    <docanchor file="_u_a_r_t2_8h">ti_drivers_UART2_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>UART2CC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/uart2/</path>
    <filename>_u_a_r_t2_c_c32_x_x_8h</filename>
    <includes id="_power_c_c32_x_x_8h" name="PowerCC32XX.h" local="no" imported="no">ti/drivers/power/PowerCC32XX.h</includes>
    <includes id="_u_a_r_t2_8h" name="UART2.h" local="no" imported="no">ti/drivers/UART2.h</includes>
    <includes id="_u_d_m_a_c_c32_x_x_8h" name="UDMACC32XX.h" local="no" imported="no">ti/drivers/dma/UDMACC32XX.h</includes>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <class kind="struct">UART2CC32XX_HWAttrs</class>
    <class kind="struct">UART2CC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_UNASSIGNED</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a95529d13d5b3e4af7a4d2641584f36f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_DMACH_UNASSIGNED</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a83d8f41b3e317f385f2428584d81fdad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_01_UART1_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2dd7f7d54d96792ffac4f77b4b6aeeb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_02_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3772b016e51f060dc70489dbc754fde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_03_UART0_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab579fbd6e26f0741912da1faa43227b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_04_UART0_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a331462cb21a3be12396eb9979007a7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_07_UART1_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a4398bba470dc75a1f88866c6ae934e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_08_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab1ed327388aa2342903c9ef8a70401c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_16_UART1_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac7c27d83ee02ec87b76d6aa1aa6ca9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_17_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa57ad512870bd145c8b8e55472a36df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_45_UART0_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a4f46ea001c68212e75af7e62c9320ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_45_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9aea62bfebfc321f94dc918d608d6050</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_53_UART0_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a791793b79429625197f63f1d87275acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_55_UART0_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad2463da1403395cf421df36c8c884b01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_55_UART1_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>add7e584f235c5f7915c4847d980b6287</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_57_UART0_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad2f0a5add9d70c4a424262ba63187e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_57_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a5e350d334366b67c0f702b99a0dd3528</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_58_UART1_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae4a69950baeb686f7bb69f99b2264306</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_59_UART1_RX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a8ec3cc272ebe8cca71ca4861fccbf367</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_62_UART0_TX</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1e55a89b0df7037c5c138e1e8e249fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_50_UART0_CTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a0da4cb0bafc8f26f83bac99c4441c3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_50_UART0_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>af401a69b6e6f7d2d45f073517ae0eb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_50_UART1_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ae6807a4c7b513943ec8b41f41fe0f654</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_52_UART0_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>ac426e8b7066ab76b55d009d8dfcd1443</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_61_UART0_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1c627890b80c3cb9e29cb16c8198e9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_61_UART0_CTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a2f63b2dc37b0974146d39f2595127cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_61_UART1_CTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a031038ab9225f374418d79f01dbd2d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_62_UART0_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3b827cb0945b35a5492048c94162ccc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_PIN_62_UART1_RTS</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1bf230af9be7ac28129187a642a71e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_FLOWCTRL_NONE</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>aca4bc0545ae5b0aa97504a46c0c7f0fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2CC32XX_FLOWCTRL_HARDWARE</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1681d4bcca6813b4956b9641ad58bdaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct UART2CC32XX_Object *</type>
      <name>UART2CC32XX_Handle</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a55aecd1b4c9a4483792d4838f67f99a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>UART2CC32XX_FifoThreshold</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2CC32XX_FIFO_THRESHOLD_1_8</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34aac884d80146d07ce5226c4a023b4cc11</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2CC32XX_FIFO_THRESHOLD_2_8</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34aca3ea68a27e0d31feb4a79ca0604b7f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2CC32XX_FIFO_THRESHOLD_4_8</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34a59b3df0005f53723415662335cf939c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2CC32XX_FIFO_THRESHOLD_6_8</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34a259058fb83f8bc1cdb1c449675d136d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UART2CC32XX_FIFO_THRESHOLD_7_8</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a38c91843484377049b4739fd4bd9ef34a5e1d7ca6b6dfa1e51bc3564f3591eb82</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2CC32XX_close</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a04a16f42ee583b99c1bb71414a008f7f</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>UART2_Handle</type>
      <name>UART2CC32XX_open</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a636081b85886ba046efc0956bed5e1d5</anchor>
      <arglist>(uint_least8_t, UART2_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2CC32XX_read</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>aa039ed82c68e30137b97973009f3db2e</anchor>
      <arglist>(UART2_Handle handle, void *buffer, size_t size, size_t *bytesRead, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2CC32XX_readCancel</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6d364787451dc459b5224573459df9a6</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>UART2CC32XX_write</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3e79511ea313dae6c237adc919bbdd71</anchor>
      <arglist>(UART2_Handle handle, const void *buffer, size_t size, size_t *bytesWritten, uint32_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2CC32XX_writeCancel</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6cde3b8dffff0f57ebb39eb3941eb42e</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UART2CC32XX_flushRx</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a36e5a9c0725c3084926ab0d43892a5a2</anchor>
      <arglist>(UART2_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>const UART2_FxnTable</type>
      <name>UART2CC32XX_fxnTable</name>
      <anchorfile>_u_a_r_t2_c_c32_x_x_8h.html</anchorfile>
      <anchor>a629fc38b0517c199989a2f7e3327cc62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UARTCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/uart/</path>
    <filename>_u_a_r_t_c_c32_x_x_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c32_x_x_8h" name="PowerCC32XX.h" local="no" imported="no">ti/drivers/power/PowerCC32XX.h</includes>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_ring_buf_8h" name="RingBuf.h" local="no" imported="no">ti/drivers/utils/RingBuf.h</includes>
    <class kind="struct">UARTCC32XX_FxnSet</class>
    <class kind="struct">UARTCC32XX_HWAttrsV1</class>
    <class kind="struct">UARTCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_UNASSIGNED</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad2d16f34c68354985bafe93d434bb576</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_01_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3d08a03600bdf352495033794e6f9a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_02_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>af53e345c8e7e9e0034c2e6a4952c8c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_03_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab869b92de3fcaf9ede686955b20c903f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_04_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9eff15eca9516f0b65eba31dde3b14b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_07_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad347ed447b173cbb3a98d2810c0eda12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_08_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7ed6f19ff8ef194e58246b2054194743</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_16_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a389c6f57c4b3d050e83b5c79997bb250</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_17_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7493a3bfc427b795d1e40008b11ae768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_45_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>aeb19dc67d89821d2f856516c673fa85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_45_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a832fcae6fc93c5abaea27ff5cf328017</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_53_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a8d724a5c4b42df62a6ed007da3c85719</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_55_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab7d7406f31b77a54b4c48a127a40a2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_55_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a82b22c5d67269324336c335de10a8b3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_57_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3b3c6b6388c86da6e9f36c13b70358d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_57_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>abe1552438ae79870bc273753c2465398</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_58_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>af33b51e0a36e5a7fb666ff237116eca6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_59_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a23796579b293a3000cd68aaafb4171de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_62_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab00dfaee2a6cc3d0fc423cfe8f391cb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_50_UART0_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a1d939044e5608ec9ba3aee090cbddc96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_50_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a9280a87ac4d52521e65090a2f4354ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_50_UART1_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>aaf5cf2586917d02fae929a24d09c2513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_52_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad6e76751bd6a5d5e0f3f73672b213b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_61_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>aaaeb525d13810402e4c37caf11e0ce51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_61_UART0_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>aeff0743281a7883e8641f6565e41029d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_61_UART1_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ade9d4689cf76025f8b2154ec478ce04d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_62_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a3db17df88d9c3f2d75d6fa1f7d3bcbfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_PIN_62_UART1_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ade98da8f1dbde4e9858eec1172a0af38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_FLOWCTRL_NONE</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>add1d4ef7c6518e4dded4210a6567952a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_FLOWCTRL_HARDWARE</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a73edb03b5d36290930cee401230dfea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_BUSY</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga38c3c7e9cdb00e0a717a4f326490e3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_RX_DATA_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gab87e5a568435493f272b07bdbca9fb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_TX_SPACE_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga40a5ff3e171620cb3fa6288a56acb433</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UARTCC32XX_ErrorCallback</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>acb6bb8cf2b70e351277acd6180cab586</anchor>
      <arglist>)(UART_Handle handle, uint32_t error)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC32XX_Object *</type>
      <name>UARTCC32XX_Handle</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7fad69961f8f906467fa2489905ca08c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UART_FxnTable</type>
      <name>UARTCC32XX_fxnTable</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_8h.html</anchorfile>
      <anchor>ab9c2c70723744587cc3708749713851f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UARTCC32XXDMA.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/uart/</path>
    <filename>_u_a_r_t_c_c32_x_x_d_m_a_8h</filename>
    <includes id="_power_8h" name="Power.h" local="no" imported="no">ti/drivers/Power.h</includes>
    <includes id="_power_c_c32_x_x_8h" name="PowerCC32XX.h" local="no" imported="no">ti/drivers/power/PowerCC32XX.h</includes>
    <includes id="_u_a_r_t_8h" name="UART.h" local="no" imported="no">ti/drivers/UART.h</includes>
    <includes id="_u_d_m_a_c_c32_x_x_8h" name="UDMACC32XX.h" local="no" imported="no">ti/drivers/dma/UDMACC32XX.h</includes>
    <class kind="struct">UARTCC32XXDMA_HWAttrsV1</class>
    <class kind="struct">UARTCC32XXDMA_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_UNASSIGNED</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a8fb2d9a46355fc00af1ceaf35a9f64b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_01_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ae7168506fee6c0647bc70ac21591b04a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_02_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a2212aca8737095c1711bdaf621692b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_03_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a17b4f8f60c514e7b3db293add89ff030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_04_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ad6915ad3325aed1f5b919f0d209fa5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_07_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ac8dc709698daad400525ec79bdf5c224</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_08_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ac5f2c0eb5dbe811220fc85d6e8cce09c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_16_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ae9e28d34c1f2ee6032b21923c9853e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_17_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a0733f5d3630579b0c271c6ee6ca73768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_45_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a0ed635da6a4f4a8361ff83f44be58727</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_45_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ab1d5219c0b8fce2a9bc91b8840de4952</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_53_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a3163f2aaf3b50f438c55f88f164028b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_55_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a71c903d14f9af3a814cea65f461f2170</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_55_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a2934f5ef3d0a27a42f30b23b383e541e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_57_UART0_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a195dac0dec3b3ee6bf36c80a6aec5fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_57_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a8cf8b97a2b28440d974e0bfd9164dcfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_58_UART1_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ae110313d47de0a37c2d42d6db0070e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_59_UART1_RX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a62bef9b95b26aabdee6c699d3689c2ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_62_UART0_TX</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a81bb20ae2ea1d3971dab87b6fd90e69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_50_UART0_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>abf82e8f518317fdadc414c3fa11f1f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_50_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a33cd607b3fc8b2027465dd7fce6f27f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_50_UART1_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a0b649a3e89361f0f49ef71e088a2476b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_52_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>aedf66678cad8289b283fc5d7a5b94c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_61_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ac76eb69eb053b53f6a89c24bf255f6b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_61_UART0_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a72d2db635533b90fe1ad44813f92dd19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_61_UART1_CTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a500495909c44c13a555be56ffd4afaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_62_UART0_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>abd9e9774367ff070b9ed60e0bdad2f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_PIN_62_UART1_RTS</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a47514edc370383187783ac2700e6c27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_FLOWCTRL_NONE</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>af301884c26f72238aa26ec217b2ce134</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_FLOWCTRL_HARDWARE</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>affb7bc13ebc92b1cf8213a27ac0762f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_BUSY</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga8901b84c7e2b48425c195150cee2c1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_RX_DATA_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga767f57c3d3cc972d6dfbfe06b6be0a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_TX_SPACE_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gabbb4459dc6b30b24df7363a63c04f1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>UARTCC32XXDMA_ErrorCallback</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ad6f79384f9fc97f7ee4d84b48295b10b</anchor>
      <arglist>)(UART_Handle handle, uint32_t error)</arglist>
    </member>
    <member kind="typedef">
      <type>struct UARTCC32XXDMA_Object *</type>
      <name>UARTCC32XXDMA_Handle</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>a25cbd4c7cf74782099e40839aa70d414</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const UART_FxnTable</type>
      <name>UARTCC32XXDMA_fxnTable</name>
      <anchorfile>_u_a_r_t_c_c32_x_x_d_m_a_8h.html</anchorfile>
      <anchor>ad0c07f745f0f1f1952e878176832a48f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UDMACC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/dma/</path>
    <filename>_u_d_m_a_c_c32_x_x_8h</filename>
    <class kind="struct">UDMACC32XX_HWAttrs</class>
    <class kind="struct">UDMACC32XX_Config</class>
    <class kind="struct">UDMACC32XX_Object</class>
    <member kind="typedef">
      <type>void(*</type>
      <name>UDMACC32XX_ErrorFxn</name>
      <anchorfile>_u_d_m_a_c_c32_x_x_8h.html</anchorfile>
      <anchor>adb07face7973e5c56c4c2c42439b938c</anchor>
      <arglist>)(uintptr_t arg)</arglist>
    </member>
    <member kind="typedef">
      <type>UDMACC32XX_Config *</type>
      <name>UDMACC32XX_Handle</name>
      <anchorfile>_u_d_m_a_c_c32_x_x_8h.html</anchorfile>
      <anchor>a0997550090216a2ba450afe62c17cb25</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDMACC32XX_close</name>
      <anchorfile>_u_d_m_a_c_c32_x_x_8h.html</anchorfile>
      <anchor>af9941aa4ed059c5e36d018e8a58f937f</anchor>
      <arglist>(UDMACC32XX_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UDMACC32XX_init</name>
      <anchorfile>_u_d_m_a_c_c32_x_x_8h.html</anchorfile>
      <anchor>a7940e6baeef1a2c121ca329680e147b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>UDMACC32XX_Handle</type>
      <name>UDMACC32XX_open</name>
      <anchorfile>_u_d_m_a_c_c32_x_x_8h.html</anchorfile>
      <anchor>ad1ddaa270825f1527509efc870d7f198</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>unistd.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/kernel/nortos/posix/</path>
    <filename>unistd_8h</filename>
    <includes id="types_8h" name="types.h" local="yes" imported="no">sys/types.h</includes>
    <member kind="function">
      <type>unsigned</type>
      <name>sleep</name>
      <anchorfile>unistd_8h.html</anchorfile>
      <anchor>ad4669b3813c3b4a616a738317fdc974f</anchor>
      <arglist>(unsigned seconds)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>usleep</name>
      <anchorfile>unistd_8h.html</anchorfile>
      <anchor>a59715f1a0a2ee4dc75e8343aca15c1dd</anchor>
      <arglist>(useconds_t useconds)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Watchdog.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/</path>
    <filename>_watchdog_8h</filename>
    <class kind="struct">Watchdog_Params</class>
    <class kind="struct">Watchdog_FxnTable</class>
    <class kind="struct">Watchdog_Config_</class>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_CMD_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga4d1b16e67bf555b8fe49182eb8a28b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaf7d1273929fd4d1f630c31b90def9684</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_SUCCESS</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa8dd490de97398b1da33798d8e54b53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_ERROR</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7cc28c1119ebecae88a5ae0735228489</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga589be79a7f8ce642863f231e1dae7577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNSUPPORTED</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f4ea82c3209f4acc21607ee0e9e053c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_Config_ *</type>
      <name>Watchdog_Handle</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab9ae92ba1721e383cedcff2eea73d9ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_Callback</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a2d201451a10bb67efc3e222ac7f099c1</anchor>
      <arglist>)(uintptr_t handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_ClearFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a0315c4931ba68423472f47c23c86f296</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_CloseFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a2d13686bc3dd7fdb05ec97d63be489ee</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Watchdog_ControlFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>aefe9152c3cd5afd45d7ef61d398169a1</anchor>
      <arglist>)(Watchdog_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>Watchdog_InitFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a6401b1a23d9048efb4ed69a074ea60f9</anchor>
      <arglist>)(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="typedef">
      <type>Watchdog_Handle(*</type>
      <name>Watchdog_OpenFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a05ae778da809a34e4d84c95d35ba5f58</anchor>
      <arglist>)(Watchdog_Handle handle, Watchdog_Params *params)</arglist>
    </member>
    <member kind="typedef">
      <type>int_fast16_t(*</type>
      <name>Watchdog_SetReloadFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>afced0e92286fe54ad1fe51c496da7a0c</anchor>
      <arglist>)(Watchdog_Handle handle, uint32_t ticks)</arglist>
    </member>
    <member kind="typedef">
      <type>uint32_t(*</type>
      <name>Watchdog_ConvertMsToTicksFxn</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a18910effbe7c123ab85385e9b34ac54f</anchor>
      <arglist>)(Watchdog_Handle handle, uint32_t milliseconds)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Watchdog_Config_</type>
      <name>Watchdog_Config</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a7e9f9a94559ff298a7a288a0618bbcf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Watchdog_DebugMode</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab1aa5862661c88a16b9d7bc12709d51e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_DEBUG_STALL_ON</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab1aa5862661c88a16b9d7bc12709d51ea787c87976091a6f294070dadd1747ed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_DEBUG_STALL_OFF</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ab1aa5862661c88a16b9d7bc12709d51ea745be9d89bc0c15eda5c4082020f8bb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Watchdog_ResetMode</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ada0db7216129d7dad494bb0cd0169f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_RESET_OFF</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ada0db7216129d7dad494bb0cd0169f88a78ba6b49345f0116143f4d4e7a9ec488</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Watchdog_RESET_ON</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>ada0db7216129d7dad494bb0cd0169f88aafccd6330c396d9ffc2786524625bf1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_clear</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a396decd6b1807db10c636f9987c3be4c</anchor>
      <arglist>(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_close</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a1c0dfea7011b06f303d01afb631ffbdd</anchor>
      <arglist>(Watchdog_Handle handle)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Watchdog_control</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a513c121c62f277318a7c35b0b2bdc869</anchor>
      <arglist>(Watchdog_Handle handle, uint_fast16_t cmd, void *arg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_init</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>afaadfb59be17661ae95562f2081355e7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Watchdog_Handle</type>
      <name>Watchdog_open</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a26795f67f599b74de830ca7bf36bdced</anchor>
      <arglist>(uint_least8_t index, Watchdog_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Watchdog_Params_init</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a6a6f54cfdac33d3bf33464a212262afc</anchor>
      <arglist>(Watchdog_Params *params)</arglist>
    </member>
    <member kind="function">
      <type>int_fast16_t</type>
      <name>Watchdog_setReload</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a63ea82dda83e42e236578b9810e56880</anchor>
      <arglist>(Watchdog_Handle handle, uint32_t ticks)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Watchdog_convertMsToTicks</name>
      <anchorfile>_watchdog_8h.html</anchorfile>
      <anchor>a7b93cd0bd3a6f11aa28b0c7219755979</anchor>
      <arglist>(Watchdog_Handle handle, uint32_t milliseconds)</arglist>
    </member>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Overview</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Usage</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Synopsis</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_example_callback</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Examples</docanchor>
    <docanchor file="_watchdog_8h">ti_drivers_Watchdog_Configuration</docanchor>
  </compound>
  <compound kind="file">
    <name>WatchdogCC32XX.h</name>
    <path>/db/vtree/library/trees/drivers/drivers-5.10.01.00/exports/tidrivers_cc32xx/source/ti/drivers/watchdog/</path>
    <filename>_watchdog_c_c32_x_x_8h</filename>
    <includes id="_watchdog_8h" name="Watchdog.h" local="no" imported="no">ti/drivers/Watchdog.h</includes>
    <class kind="struct">WatchdogCC32XX_HWAttrs</class>
    <class kind="struct">WatchdogCC32XX_Object</class>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_IS_TIMER_ENABLE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga2180fa0accdea4b379edd12a3a5d9113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_GET_TIMER_VALUE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga5ef077bbc3ab4392e24fc13282993d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_IS_TIMER_LOCKED</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga8a2cadcd075a2a23fcfa9d980adf09a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_GET_TIMER_RELOAD_VALUE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga1d0226cc406f566d7832552edd06bc28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Watchdog_FxnTable</type>
      <name>WatchdogCC32XX_fxnTable</name>
      <anchorfile>_watchdog_c_c32_x_x_8h.html</anchorfile>
      <anchor>a6035ac575fbea7e6df0bcee2698855d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>_NoRTOS_Config</name>
    <filename>struct___no_r_t_o_s___config.html</filename>
    <member kind="variable">
      <type>void(*</type>
      <name>idleCallback</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>a74d5d90dda12ce20bf02b161d3b034a0</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>clockTickPeriod</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>ab40aceb951cb2960ff7287a4c16f4f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>swiIntNum</name>
      <anchorfile>struct___no_r_t_o_s___config.html</anchorfile>
      <anchor>a84176428197106e7fb51c3bf010b6b83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_Config_</name>
    <filename>struct_a_d_c___config__.html</filename>
    <member kind="variable">
      <type>ADC_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_a_d_c___config__.html</anchorfile>
      <anchor>a451827ead452ffc830675afbef573ee2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_a_d_c___config__.html</anchorfile>
      <anchor>a42007f8f413bd43d28b7972b9e60bbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_a_d_c___config__.html</anchorfile>
      <anchor>a5acc18036a502afb93d1097a185e921f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_FxnTable</name>
    <filename>struct_a_d_c___fxn_table.html</filename>
    <member kind="variable">
      <type>ADC_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>ae7aebe8cc8f3493502e3dceecb688c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>af92f7867301c8edd125436ca66e16877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ConvertFxn</type>
      <name>convertFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>ac7255105d1eca815a45714ff0d2186cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_ConvertToMicroVoltsFxn</type>
      <name>convertToMicroVolts</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>a35a09bfb36dd7b17a419a34ed0ac76ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>a5b2882d28b0e4a8c8d7bb2ed741380e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ADC_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_a_d_c___fxn_table.html</anchorfile>
      <anchor>aa74579528b7be192281bf5c23e6dcf03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADC_Params</name>
    <filename>struct_a_d_c___params.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_a_d_c___params.html</anchorfile>
      <anchor>a62c67d0ad10066d4e30e67d648937a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isProtected</name>
      <anchorfile>struct_a_d_c___params.html</anchorfile>
      <anchor>afcfab4dda63383c2dcf0bb21fe519c53</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCCC32XX_HWAttrsV1</name>
    <filename>struct_a_d_c_c_c32_x_x___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint_fast16_t</type>
      <name>adcPin</name>
      <anchorfile>struct_a_d_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a7d2d9078ddb93d1f02e3fb1f8a637ad6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCCC32XX_Object</name>
    <filename>struct_a_d_c_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_a_d_c_c_c32_x_x___object.html</anchorfile>
      <anchor>a0e0e9f63a83b28908e00c7e489d4c1e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ADCCC32XX_State</name>
    <filename>struct_a_d_c_c_c32_x_x___state.html</filename>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_a_d_c_c_c32_x_x___state.html</anchorfile>
      <anchor>ae608531d5facb94f70a3abd4a479cb9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>numOpenChannels</name>
      <anchorfile>struct_a_d_c_c_c32_x_x___state.html</anchorfile>
      <anchor>a4243f13d0e34a969d4728af6c0aa212c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Button_Config</name>
    <filename>struct_button___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_button___config.html</anchorfile>
      <anchor>ad9f1c280c5ba9614dfb230b11b051386</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_button___config.html</anchorfile>
      <anchor>a438e4c616319dcf9ecdd9180850127e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Button_HWAttrs</name>
    <filename>struct_button___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>gpioIndex</name>
      <anchorfile>struct_button___h_w_attrs.html</anchorfile>
      <anchor>af3acb380f658a2957d0f51aa619f8a94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Button_Object</name>
    <filename>struct_button___object.html</filename>
    <member kind="variable">
      <type>ClockP_Handle</type>
      <name>clockHandle</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a9703c569479be47a356e884cc7ff8376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Button_StateVariables</type>
      <name>buttonStateVariables</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a994b8ececb21ded0b1787168f59b43c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Button_EventMask</type>
      <name>buttonEventMask</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>acdcc028a39062d39297129783ba1d502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Button_Callback</type>
      <name>buttonCallback</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a4828e787b147ac076032a775cd736398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>debounceDuration</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a17d27b9d0d2202a194727d8adb1167d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>longPressDuration</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a4958e829ee1af33cdd3c356204629c04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>doublePressDetectiontimeout</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>a26c91392adad279edf3cbc7fb03fed58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Button_Pull</type>
      <name>buttonPull</name>
      <anchorfile>struct_button___object.html</anchorfile>
      <anchor>ab83137ae1092c6b566b0194ab2ea5742</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Button_Params</name>
    <filename>struct_button___params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>debounceDuration</name>
      <anchorfile>struct_button___params.html</anchorfile>
      <anchor>a12cb92a9710dcd4c1a81c546e9f48ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>longPressDuration</name>
      <anchorfile>struct_button___params.html</anchorfile>
      <anchor>a8145a7ef96400990e033b8124bbbd3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>doublePressDetectiontimeout</name>
      <anchorfile>struct_button___params.html</anchorfile>
      <anchor>a5166d29595293b67eb4b85ba89e3031d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Button_EventMask</type>
      <name>buttonEventMask</name>
      <anchorfile>struct_button___params.html</anchorfile>
      <anchor>ac841ce154ce3799018cb5c6929d8b4b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Camera_Config_</name>
    <filename>struct_camera___config__.html</filename>
    <member kind="variable">
      <type>Camera_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_camera___config__.html</anchorfile>
      <anchor>ac55c2e97997d3e63cfa837837e923eba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_camera___config__.html</anchorfile>
      <anchor>ad285eec36a93303bffb2255c3a1aec40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_camera___config__.html</anchorfile>
      <anchor>a218992e03eed02ea8695e910d6ccf0bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Camera_FxnTable</name>
    <filename>struct_camera___fxn_table.html</filename>
    <member kind="variable">
      <type>Camera_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_camera___fxn_table.html</anchorfile>
      <anchor>af279c6a9d953882c3d7ce26da6899ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_camera___fxn_table.html</anchorfile>
      <anchor>a4f2a817f5f93b5c30f25830a75b524aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_camera___fxn_table.html</anchorfile>
      <anchor>a785c5f005aa70b0205f5a24f5286ac02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_camera___fxn_table.html</anchorfile>
      <anchor>a1a1ffb4979ca2e85f513b06bc32794cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_CaptureFxn</type>
      <name>captureFxn</name>
      <anchorfile>struct_camera___fxn_table.html</anchorfile>
      <anchor>a68229a53d38db79a70137aff58e394ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Camera_Params</name>
    <filename>struct_camera___params.html</filename>
    <member kind="variable">
      <type>Camera_CaptureMode</type>
      <name>captureMode</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>ab370847eb029c1b816830f6a2fb1956f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>outputClock</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a0b8e5d861228a67c891ac7737c3546af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_HSyncPolarity</type>
      <name>hsyncPolarity</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a08f9574d65f148d071452c4ae0841d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_VSyncPolarity</type>
      <name>vsyncPolarity</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a707b9746ec88eb4d183a7471fd8151bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_PixelClkConfig</type>
      <name>pixelClkConfig</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a55279b026ec9bee61c7f3fedef456d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_ByteOrder</type>
      <name>byteOrder</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>ac23766c87406fdf6b9aca3a3b9b4e15c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_IfSynchoronisation</type>
      <name>interfaceSync</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>ad32edd6c21bc9952deeb917034ca0f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_StopCaptureConfig</type>
      <name>stopConfig</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a89b5c7168ff120da5fc7461fb71499aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_StartCaptureConfig</type>
      <name>startConfig</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>aa754cc494ff462b01a7ed647742b15af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>captureTimeout</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a7a66a4013966579c58e2d02ad788d6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_Callback</type>
      <name>captureCallback</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a2bc1db1262e09919a7711301cd784fda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_camera___params.html</anchorfile>
      <anchor>a35814b7c3aea7ecb153cbe05371cad27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CameraCC32XXDMA_HWAttrs</name>
    <filename>struct_camera_c_c32_x_x_d_m_a___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>ab35bfe98c5466f241eff49822a4de046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intNum</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a2136697500f1604ed6231fc232e46faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a4310d7487b3300d3ea77f0b1b7345f51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>channelIndex</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___h_w_attrs.html</anchorfile>
      <anchor>a6ae0ebea75dcba9f1836774d7d380b2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CameraCC32XXDMA_Object</name>
    <filename>struct_camera_c_c32_x_x_d_m_a___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad0c5fd07fa80c82f0c9b91967e35764c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_CaptureMode</type>
      <name>operationMode</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a914926365c8f5a65a1251560a5b8860d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Camera_Callback</type>
      <name>captureCallback</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a18597688773c693a51b5390677dd7678</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>captureTimeout</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>afc5b53a8841d834c3488e73a7bd3ba32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>captureBuf</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a322853c174c938cf537752f7220526ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bufferlength</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ace9686ed42c8be35499750ea0a5b9759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>frameLength</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>af1625d99fb291b6c2f2f6c1e4d01410c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>cameraDMA_PingPongMode</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aca428626aaadbd40c14d2db32970b88c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>cameraDMAxIntrRcvd</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aa942cedc5b6cdaf195f116efa4e7aaa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inUse</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad18486537a70e669f9f1443c8ffc5a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>captureSem</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aec1d2b83416df75d37cc41575a5269ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_camera_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aead1cd445281ee57a6e743423aaa1a95</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Capture_Config_</name>
    <filename>struct_capture___config__.html</filename>
    <member kind="variable">
      <type>Capture_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_capture___config__.html</anchorfile>
      <anchor>ab70ae8cc52fd4bcaaa63e8b849645e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_capture___config__.html</anchorfile>
      <anchor>a317acc4e42e86b9a1396ef3554239720</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_capture___config__.html</anchorfile>
      <anchor>a340cb3dd3080c190189a50315a30f357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Capture_FxnTable</name>
    <filename>struct_capture___fxn_table.html</filename>
    <member kind="variable">
      <type>Capture_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>aa211ebfde18e18e9c8d8dc28f0cbeb58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>a53426d2eabd2c36741023b25c590b044</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>a06543203cd1940ed0fc5cfd8414c4b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>a060a80e93b307e574309a5e03615c8e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_StartFxn</type>
      <name>startFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>ade10463970bb19bfa1b45a1ae248e703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_StopFxn</type>
      <name>stopFxn</name>
      <anchorfile>struct_capture___fxn_table.html</anchorfile>
      <anchor>a565fce5ab6bee7adc07d26d2ec698cfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Capture_Params</name>
    <filename>struct_capture___params.html</filename>
    <member kind="variable">
      <type>Capture_Mode</type>
      <name>mode</name>
      <anchorfile>struct_capture___params.html</anchorfile>
      <anchor>a727621a60ba029f6311f2ff72c98e285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_CallBackFxn</type>
      <name>callbackFxn</name>
      <anchorfile>struct_capture___params.html</anchorfile>
      <anchor>ac56b9fb245bae692f5b5442abccc24a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_PeriodUnits</type>
      <name>periodUnit</name>
      <anchorfile>struct_capture___params.html</anchorfile>
      <anchor>acc5f4ead58706dd7248bb8daf0e02a66</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CaptureCC32XX_HWAttrs</name>
    <filename>struct_capture_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>capturePin</name>
      <anchorfile>struct_capture_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ac5041c920a5278c71457744eab23a8e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_capture_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a81b082ca9e3b7b444e41404286085549</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CaptureCC32XX_Object</name>
    <filename>struct_capture_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a1f1df62b342886d84ca03163db72da8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>notifyObj</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a61e705348198ac2cd67cce9e9705217c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_CallBackFxn</type>
      <name>callBack</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a04142779fb892e17c490076a1804a3ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Capture_PeriodUnits</type>
      <name>periodUnits</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a6fa68fd4ab81de99c3fa5c3d891ed4ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>mode</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a6013145b4ac61bb6a5a54248053f2322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timer</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>a881fcc7d674631fd748c0c5bfac407f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>previousCount</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>ad6960dcb7a31904b6298f0816ba150d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>struct_capture_c_c32_x_x___object.html</anchorfile>
      <anchor>adf694eb0e0e399beb6ae4a253806c771</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_AesAadInputParams</name>
    <filename>struct_crypto_c_c32_x_x___aes_aad_input_params.html</filename>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>pKey2</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_aad_input_params.html</anchorfile>
      <anchor>ae0cf3710fc1ed77b35c64fe837df79f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC32XX_AesKeySize</type>
      <name>key2Size</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_aad_input_params.html</anchorfile>
      <anchor>a2294f21e519eb332f0385935f9ea0559</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>len</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_aad_input_params.html</anchorfile>
      <anchor>ae02b19c042acb7036e165e4738efd73d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>CryptoCC32XX_AesAadParams</name>
    <filename>union_crypto_c_c32_x_x___aes_aad_params.html</filename>
    <member kind="variable">
      <type>CryptoCC32XX_AesAadInputParams</type>
      <name>input</name>
      <anchorfile>union_crypto_c_c32_x_x___aes_aad_params.html</anchorfile>
      <anchor>a894d9ab2603f10f116f8e4f0afc35676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>tag</name>
      <anchorfile>union_crypto_c_c32_x_x___aes_aad_params.html</anchorfile>
      <anchor>ae0792a6e57d5e4938f2a9855d0d38962</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_AesParams</name>
    <filename>struct_crypto_c_c32_x_x___aes_params.html</filename>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>pKey</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_params.html</anchorfile>
      <anchor>a8eb142edeaca7fe715cda3b4fe7b36ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC32XX_AesKeySize</type>
      <name>keySize</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_params.html</anchorfile>
      <anchor>a11b689045dee5b8bfb0e48ca1185b8b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pIV</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_params.html</anchorfile>
      <anchor>a4b2d3eeae208ff0cd4a773470b95543f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC32XX_AesAadParams</type>
      <name>aadParams</name>
      <anchorfile>struct_crypto_c_c32_x_x___aes_params.html</anchorfile>
      <anchor>a96b5213f9d5a828388bc026bb474d35d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_Config</name>
    <filename>struct_crypto_c_c32_x_x___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_crypto_c_c32_x_x___config.html</anchorfile>
      <anchor>ac265b4a3d21805d184012c25e7c843f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_DesParams</name>
    <filename>struct_crypto_c_c32_x_x___des_params.html</filename>
    <member kind="variable">
      <type>const uint8_t *</type>
      <name>pKey</name>
      <anchorfile>struct_crypto_c_c32_x_x___des_params.html</anchorfile>
      <anchor>a827c2b816124360b67d13502459beedb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC32XX_DesKeySize</type>
      <name>keySize</name>
      <anchorfile>struct_crypto_c_c32_x_x___des_params.html</anchorfile>
      <anchor>a724bb6ed14be439aa3f4382e49bf0539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pIV</name>
      <anchorfile>struct_crypto_c_c32_x_x___des_params.html</anchorfile>
      <anchor>a9819a3e1bde4596795d38d932dec6ea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>CryptoCC32XX_EncryptParams</name>
    <filename>union_crypto_c_c32_x_x___encrypt_params.html</filename>
    <member kind="variable">
      <type>CryptoCC32XX_AesParams</type>
      <name>aes</name>
      <anchorfile>union_crypto_c_c32_x_x___encrypt_params.html</anchorfile>
      <anchor>adc3bd4be259de3a607c1de69e15dfbed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CryptoCC32XX_DesParams</type>
      <name>des</name>
      <anchorfile>union_crypto_c_c32_x_x___encrypt_params.html</anchorfile>
      <anchor>a8f9dc1e4b36168c868612a44583bac5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_HmacParams</name>
    <filename>struct_crypto_c_c32_x_x___hmac_params.html</filename>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>pKey</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a37c7b8a248a126685fc98227fcf83327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>moreData</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a4bd03f90ece73b2a77817fa177fe68c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pContext</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a89e72b1dbe75f0b0bdbf7dde368589d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>first</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a8ec2749095c0793d5356f2c948d9cd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>digestCount</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a488fdfb0ec8faa966d7c52b206e8d98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>innerDigest</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>afff2753156dd5f4c3786b501730013c9</anchor>
      <arglist>[32]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>buff</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a54cfc6719d597a7bc899a09b8a280410</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>buffLen</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>aceb4e9d6711f5439023c999573417d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>blockSize</name>
      <anchorfile>struct_crypto_c_c32_x_x___hmac_params.html</anchorfile>
      <anchor>a73ea0b139bcc19154e5a5bb4ac684898</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CryptoCC32XX_Object</name>
    <filename>struct_crypto_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_crypto_c_c32_x_x___object.html</anchorfile>
      <anchor>a1b47cd50396a4979c40d5cbd987f90c2</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_crypto_c_c32_x_x___object.html</anchorfile>
      <anchor>ae5634ade9e7b1ad2b8f11ac022ef1c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>sem</name>
      <anchorfile>struct_crypto_c_c32_x_x___object.html</anchorfile>
      <anchor>ad5e3b03de5e166a0a6f8f1585dcafa5d</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_Config</name>
    <filename>struct_display___config.html</filename>
    <member kind="variable">
      <type>Display_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>adce10e2738107a8b017ac8df3dbe1d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>a3888ffcab482aacee937ec782f49110d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_display___config.html</anchorfile>
      <anchor>a5fe62abb9c875eca79144e916082ecb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_FxnTable</name>
    <filename>struct_display___fxn_table.html</filename>
    <member kind="variable">
      <type>Display_initFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a61477f2b3203c0441725caae4b208f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_openFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a66473aac0719cf33382770aab5e51f7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_clearFxn</type>
      <name>clearFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>ac2db3a7d155afd3bf0f83a125d3e1745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_clearLinesFxn</type>
      <name>clearLinesFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a50c9960307eb7abdddeaea450f2b413d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_vprintfFxn</type>
      <name>vprintfFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a0a8010b19adec2c5f543e0b97f454a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_closeFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>ab87c3ac60591e2f8276ca68e372a0eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_controlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a8fc3ff1c182a8c00cbbbbe182dacba8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_getTypeFxn</type>
      <name>getTypeFxn</name>
      <anchorfile>struct_display___fxn_table.html</anchorfile>
      <anchor>a77c12532ad85c855dd889b28d7d5a282</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Display_Params</name>
    <filename>struct_display___params.html</filename>
    <member kind="variable">
      <type>Display_LineClearMode</type>
      <name>lineClearMode</name>
      <anchorfile>struct_display___params.html</anchorfile>
      <anchor>af442a90969018ed8073eef6451425f40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayGrLib_Object</name>
    <filename>struct_display_gr_lib___object.html</filename>
    <member kind="variable">
      <type>Graphics_Context</type>
      <name>g_sContext</name>
      <anchorfile>struct_display_gr_lib___object.html</anchorfile>
      <anchor>a862853916cae353daca18557f29fc7c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayHost_HWAttrs</name>
    <filename>struct_display_host___h_w_attrs.html</filename>
    <member kind="variable">
      <type>char *</type>
      <name>strBuf</name>
      <anchorfile>struct_display_host___h_w_attrs.html</anchorfile>
      <anchor>ac3696cae4d018951b95be22f560d8f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>strBufLen</name>
      <anchorfile>struct_display_host___h_w_attrs.html</anchorfile>
      <anchor>a410831f94366a36020e1018ec71e7501</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayHost_Object</name>
    <filename>struct_display_host___object.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>dummy</name>
      <anchorfile>struct_display_host___object.html</anchorfile>
      <anchor>a636a6b965c094235003c75f758fecefb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharp_HWAttrsV1</name>
    <filename>struct_display_sharp___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a278ed6d447cb2d95830b0229be38ce25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>csPin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a7281bd7086d5a1bb3394e2d8d8259c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>powerPin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>aec495b58b10d9c1c4a4ac3ca7d17d1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>enablePin</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a8c42d75e2e59a0d61c912d724cda85f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>pixelHeight</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a5d046a70cfa7de34fa53a14b702bd3f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>pixelWidth</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>afcfd96e28aa5b22bd9a350eca860a3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>displayBuf</name>
      <anchorfile>struct_display_sharp___h_w_attrs_v1.html</anchorfile>
      <anchor>a6e11d2f8c113a4f09ee630011e25dfe9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharp_Object</name>
    <filename>struct_display_sharp___object.html</filename>
    <member kind="variable">
      <type>Graphics_Context</type>
      <name>g_sContext</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a95e52d201167a1789c3d44f86d9a7d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>hSpi</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>ace64d49d3e54bd958f5631be3b5a019e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Display_LineClearMode</type>
      <name>lineClearMode</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a1b911a160ce7d497a13c517038710d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Graphics_Display</type>
      <name>g_sDisplay</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>ad7c24f944e50108ddc86b8b1cc6c037f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DisplaySharpColor_t</type>
      <name>displayColor</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a99bea24fb7ee15769a37eb53087daf22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>semLCD</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a0dbcb1a0eae3976ac55e77a6c674caae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>displayBuffer</name>
      <anchorfile>struct_display_sharp___object.html</anchorfile>
      <anchor>a268dce94be3fcbae2e9d317810269932</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplaySharpColor_t</name>
    <filename>struct_display_sharp_color__t.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>fg</name>
      <anchorfile>struct_display_sharp_color__t.html</anchorfile>
      <anchor>a98c48c9cef6f817b8bea0d1f7da88ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bg</name>
      <anchorfile>struct_display_sharp_color__t.html</anchorfile>
      <anchor>a4a3d7b6e3b83826fabdfb2c2f75aa3c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart2_HWAttrs</name>
    <filename>struct_display_uart2___h_w_attrs.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uartIdx</name>
      <anchorfile>struct_display_uart2___h_w_attrs.html</anchorfile>
      <anchor>aea00fe74dddebe9656020dd4a0fdab31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baudRate</name>
      <anchorfile>struct_display_uart2___h_w_attrs.html</anchorfile>
      <anchor>a31e06bac9b245a7b6da8b4bf9f4dc506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mutexTimeout</name>
      <anchorfile>struct_display_uart2___h_w_attrs.html</anchorfile>
      <anchor>a7ab888784423f3a30a593d27c18ba573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>strBuf</name>
      <anchorfile>struct_display_uart2___h_w_attrs.html</anchorfile>
      <anchor>a18e30a9a37197b2dfb0e74b828967e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>strBufLen</name>
      <anchorfile>struct_display_uart2___h_w_attrs.html</anchorfile>
      <anchor>a19d46b01f241b4098917fc3bcda8c9d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart2_Object</name>
    <filename>struct_display_uart2___object.html</filename>
    <member kind="variable">
      <type>UART2_Handle</type>
      <name>hUart</name>
      <anchorfile>struct_display_uart2___object.html</anchorfile>
      <anchor>a216439458e407b061cdb5a8aeaa29fce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>mutex</name>
      <anchorfile>struct_display_uart2___object.html</anchorfile>
      <anchor>abf139f6735264768d2b832c13489387a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>lineClearSeq</name>
      <anchorfile>struct_display_uart2___object.html</anchorfile>
      <anchor>a9dd5654d8617452468554995dad6ead4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart_HWAttrs</name>
    <filename>struct_display_uart___h_w_attrs.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>uartIdx</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a3c111ee8c6a5c628ab9aa3f58bb24b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baudRate</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a808a00c56f02105b6a8254c861f770f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mutexTimeout</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a088c26aa2cb1345d33d016617c1db852</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>strBuf</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a50486e4fcebccea63bf5233176fa8512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>strBufLen</name>
      <anchorfile>struct_display_uart___h_w_attrs.html</anchorfile>
      <anchor>a3a5db18ba55168690f3064f98d7ceaac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DisplayUart_Object</name>
    <filename>struct_display_uart___object.html</filename>
    <member kind="variable">
      <type>UART_Handle</type>
      <name>hUart</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a8b35f7e4e65999298f8e461817545f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>mutex</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a492f4737cfbde275b3e7e898431e6c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>lineClearSeq</name>
      <anchorfile>struct_display_uart___object.html</anchorfile>
      <anchor>a238a4fefc6643ebc4cd56825f1945fc2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GPIOCC32XX_Config</name>
    <filename>struct_g_p_i_o_c_c32_x_x___config.html</filename>
    <member kind="variable">
      <type>GPIO_PinConfig *</type>
      <name>pinConfigs</name>
      <anchorfile>struct_g_p_i_o_c_c32_x_x___config.html</anchorfile>
      <anchor>a8fe1cc965d8022075fbbb813d46c38f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>GPIO_CallbackFxn *</type>
      <name>callbacks</name>
      <anchorfile>struct_g_p_i_o_c_c32_x_x___config.html</anchorfile>
      <anchor>a9474b8ebf871a6a1056882e5cc6dcbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numberOfPinConfigs</name>
      <anchorfile>struct_g_p_i_o_c_c32_x_x___config.html</anchorfile>
      <anchor>a9434ec45162e759edd80946e509c3b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numberOfCallbacks</name>
      <anchorfile>struct_g_p_i_o_c_c32_x_x___config.html</anchorfile>
      <anchor>ae2a8eb871a5e1c0a30f28bdfc3e7df7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_g_p_i_o_c_c32_x_x___config.html</anchorfile>
      <anchor>a708ddcd7f329fac8d930a253de53ae57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Config_</name>
    <filename>struct_i2_c___config__.html</filename>
    <member kind="variable">
      <type>I2C_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>a635dcef77b14e153ffb35e270cd46886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>a8bdac95426bbb6b46559fab1e81898ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_i2_c___config__.html</anchorfile>
      <anchor>af4722d351fb7137a34166e047a4f96bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_FxnTable</name>
    <filename>struct_i2_c___fxn_table.html</filename>
    <member kind="variable">
      <type>I2C_CancelFxn</type>
      <name>cancelFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>a9fdc075682ec4ae2e2f856b5c758748a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>a02f4e6a7daeb64d6741372a5636eedb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>af23db6bdc9b619633fb70ddff44412ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>ae27540a7175c9ad14b590ddc92e06390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>afb8c5f67ba6d0941f6265707083b16f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_TransferFxn</type>
      <name>transferFxn</name>
      <anchorfile>struct_i2_c___fxn_table.html</anchorfile>
      <anchor>a16048b22814e3d123f82a7674599b15c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Params</name>
    <filename>struct_i2_c___params.html</filename>
    <member kind="variable">
      <type>I2C_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a79c5c51380ffbdb21df1dff6cb57de0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a57edf1b900368904779d0c57a73cf047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2C_BitRate</type>
      <name>bitRate</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>ad31857f6dbedb77c60c92cc8cd8cde0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_i2_c___params.html</anchorfile>
      <anchor>a2416cc06d853e6cc24e1f294dfebb194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2C_Transaction</name>
    <filename>struct_i2_c___transaction.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>writeBuf</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>aa3490c2af4b443a7a4ec13f57aec6d20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a08959a9f098163d02d6002e73b3a4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>readBuf</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a804b918d5cb08bb75a39866d0b89e01e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a2085d4c943f0d8617365b7c427e6a0de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a29ec65addac2d4ef5d1235c2329e2fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile int_fast16_t</type>
      <name>status</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a911f51c3c6fffcb962b225363fdbbb81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>slaveAddress</name>
      <anchorfile>struct_i2_c___transaction.html</anchorfile>
      <anchor>a2e5c027c6f243f7169305f86bb2ab6e0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2CCC32XX_HWAttrsV1</name>
    <filename>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baseAddr</name>
      <anchorfile>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>ab02f48d204af84dec55dbd8bd0d2794b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intNum</name>
      <anchorfile>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a0b2f7194e82f58740ad7f3abc82da6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intPriority</name>
      <anchorfile>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>afac4d344496d208e78cfde80cf708727</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>clkPin</name>
      <anchorfile>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a62459416830269c081ed662f3761f337</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>dataPin</name>
      <anchorfile>struct_i2_c_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a452590c307736f0e1ba7e7613b68d11e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Config</name>
    <filename>struct_i2_s___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_i2_s___config.html</anchorfile>
      <anchor>aa7e7ee65f8c52e2ca5de1cfb7fea1276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_i2_s___config.html</anchorfile>
      <anchor>a6ebd7b14353f66a0e0d1c406ff5b481e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Params</name>
    <filename>struct_i2_s___params.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>trueI2sFormat</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a3b7f7f942b6fb548141409be5a228e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>invertWS</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a9d3ad248a0bca19f6c8aba2ef4e311c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isMSBFirst</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>aa6bc7fe594699bd27444b2b3b8aa17e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isDMAUnused</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a040e104c9b7118fb5719b3007801a2cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_MemoryLength</type>
      <name>memorySlotLength</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a257e437c1d8fb08ddd7457c47c479db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>beforeWordPadding</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>af450bbb82e3268acd51468d084b52b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>afterWordPadding</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>abedf75df9cdd087f99fc5f7caeb67277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>bitsPerWord</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a4bde5e88326f32724193b9d67de9409c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Role</type>
      <name>moduleRole</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a0774324bd379cbac6bba7aada9a3017b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_SamplingEdge</type>
      <name>samplingEdge</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>ab963a56402bc13a1e6c16fa046db151f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_DataInterfaceUse</type>
      <name>SD0Use</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a1e7dcdbcaa1d392499e7e8c5194ccb11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_DataInterfaceUse</type>
      <name>SD1Use</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a40b06dc2ce35072ab5ce2af83710be37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_ChannelConfig</type>
      <name>SD0Channels</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>ae97322ea561e6c5237b60818e82627e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_ChannelConfig</type>
      <name>SD1Channels</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a35e4c06e74c7ffee100850e93787d93b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_PhaseType</type>
      <name>phaseType</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a5b80fd825ba28a6db860108a9cb4f5e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>fixedBufferLength</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>ae3241f138f3e247875ef9686622b4d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>startUpDelay</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>ad43b78dab7cc91991be4c6c8f67814e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MCLKDivider</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a88df8c7e594eded74880e06ccb5cae12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>samplingFrequency</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>aff5aa130ef087ebb86932182787c1df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a94ed67cfe1320bd8daf013c132b907cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>a2cf905e275e93a49707613aedcb2ab9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>I2S_Callback</type>
      <name>errorCallback</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>aa12b8175a33bc574818208f4ccb8540d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_i2_s___params.html</anchorfile>
      <anchor>af9d903683ef9e8352c6f1bda555a740c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2S_Transaction</name>
    <filename>struct_i2_s___transaction.html</filename>
    <member kind="variable">
      <type>List_Elem</type>
      <name>queueElement</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>af3845aa9cddc6c3c587f19c1c77ce1d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>bufPtr</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>a70113860dcc951988c368cffc515fba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bufSize</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>af47a4404eed157d9baa6a538aea74862</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bytesTransferred</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>a0865db369f6222100e66df9b0f65651b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>untransferredBytes</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>aec3c067329e18bd5eddd9ee47c30d124</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>numberOfCompletions</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>ad43a81fc718af43129be039ee68f1346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>arg</name>
      <anchorfile>struct_i2_s___transaction.html</anchorfile>
      <anchor>aa8f434483667cba3efb20ce3992aae0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>I2SCC32XX_HWAttrs</name>
    <filename>struct_i2_s_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinSD1</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>acfdb4bf6866feb4b9a8309d445d8f978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinSD0</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a46c687ef01aa11fce34de27e7b7bb4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinSCK</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a41ded7f527df4d53a668f8b0b6fe5f83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinSCKX</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>aee2a75b256d1e07a61dc954d26b04335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinWS</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ad64135f0ae456be85dbd2cdb9864cc2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxChannelIndex</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a993500aafd1be1f3e2dfdd6830f7bc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txChannelIndex</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a606e5be2d6c7ad8ed6efa1ad64507551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_i2_s_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a60b8606e45788bfbcd2d1513cb2fc141</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LED_Config</name>
    <filename>struct_l_e_d___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_l_e_d___config.html</anchorfile>
      <anchor>afefeaa8dd2b92c7ce7c1cb6f7ba6dcfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_l_e_d___config.html</anchorfile>
      <anchor>a1b6dfd7052fcab6740bcd981aab9b5c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LED_HWAttrs</name>
    <filename>struct_l_e_d___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>index</name>
      <anchorfile>struct_l_e_d___h_w_attrs.html</anchorfile>
      <anchor>a00744b45a9df5a3fc9d480615b255eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LED_Type</type>
      <name>type</name>
      <anchorfile>struct_l_e_d___h_w_attrs.html</anchorfile>
      <anchor>a56f4d54df1562f438ae6821f49812322</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LED_Object</name>
    <filename>struct_l_e_d___object.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pwmPeriod</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>ab52a396e57999d50900502be901b2626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Handle</type>
      <name>pwmHandle</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a72fb1621eeccc1a3905096e611a0968a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Handle</type>
      <name>clockHandle</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>af9b7e617e11e9171682577951197ab6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Struct</type>
      <name>clock</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a3ca9f1577a9974690cc2877cf5e7c976</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LED_State</type>
      <name>state</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a73b5673feb140738b3d73940ffdd5c10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LED_State</type>
      <name>rawState</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a46ff9c9af0c38b7e441266beb1f05dd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LED_Type</type>
      <name>ledType</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a1e28d3974f8cbf8bd7c32ef6d2a50be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>brightness</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a7c71c80bf3db56df7995d2172647c01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>gpioIndex</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>ad58b29cf7c8abf187864f014f5e55722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>togglePeriod</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a14f9d02853c37989418dff8b8cc22c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>blinkCount</name>
      <anchorfile>struct_l_e_d___object.html</anchorfile>
      <anchor>a98cbfe65e3eaf9ba6101095b6126e458</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LED_Params</name>
    <filename>struct_l_e_d___params.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pwmPeriod</name>
      <anchorfile>struct_l_e_d___params.html</anchorfile>
      <anchor>ae89cc105e98b217004f9cbbf61fbac5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>blinkPeriod</name>
      <anchorfile>struct_l_e_d___params.html</anchorfile>
      <anchor>a58c5ea152a72482ed1238b8e88a65adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>brightness</name>
      <anchorfile>struct_l_e_d___params.html</anchorfile>
      <anchor>a828942684fc4dcd88c81bee6d740ee04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LED_State</type>
      <name>setState</name>
      <anchorfile>struct_l_e_d___params.html</anchorfile>
      <anchor>ad47abdd61ebfc122bd9a0d361abebadb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>List_Elem_</name>
    <filename>struct_list___elem__.html</filename>
    <member kind="variable">
      <type>struct List_Elem_ *</type>
      <name>next</name>
      <anchorfile>struct_list___elem__.html</anchorfile>
      <anchor>a3472db6d50d5191700bdf1670fdef9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct List_Elem_ *</type>
      <name>prev</name>
      <anchorfile>struct_list___elem__.html</anchorfile>
      <anchor>ae18320a0fdbf1d4044518fde458c0c3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>List_List</name>
    <filename>struct_list___list.html</filename>
    <member kind="variable">
      <type>List_Elem *</type>
      <name>head</name>
      <anchorfile>struct_list___list.html</anchorfile>
      <anchor>ac6fe915aed884adffb39b7c5538b4b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>List_Elem *</type>
      <name>tail</name>
      <anchorfile>struct_list___list.html</anchorfile>
      <anchor>aaa078249706663590a38d168b115171e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Attrs</name>
    <filename>struct_n_v_s___attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>regionBase</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>a6c36a2b1c3a5cdfae48ac7665b479aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>ad15dd254ec5ce79e82dd3eb3e6e25fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s___attrs.html</anchorfile>
      <anchor>a8d341bb3f922bae7c50600f301564774</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Config_</name>
    <filename>struct_n_v_s___config__.html</filename>
    <member kind="variable">
      <type>NVS_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>ade295be230bf42b6140ce89757c92c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>a1b7be7029b10ca1babf1afc824494352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_n_v_s___config__.html</anchorfile>
      <anchor>acc2f91b7a436df48b14e67e936aaa0a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_FxnTable</name>
    <filename>struct_n_v_s___fxn_table.html</filename>
    <member kind="variable">
      <type>NVS_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>ad52c763811aad3bb099f2c92c794d26d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a1a5e20488f0b701ea0980bd17228022c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_EraseFxn</type>
      <name>eraseFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a638a6cf443ca76532ba9b7b564379de2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_GetAttrsFxn</type>
      <name>getAttrsFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a7d1f0f2c1dd51aa90cecccd178638531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a8e59ff1f3109c7b04194f176df155555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_LockFxn</type>
      <name>lockFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a2b5a1e3491a985d786210a26221dd9e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a41667ec87600c340a861475f916feb1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a33828cc4c1c845e5a7f95440e79a4e94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_UnlockFxn</type>
      <name>unlockFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>afae868b5c2f52df1dcd840f0d4876966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NVS_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_n_v_s___fxn_table.html</anchorfile>
      <anchor>a67cbdb1f87bf99c91079da45aa0150a3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVS_Params</name>
    <filename>struct_n_v_s___params.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_n_v_s___params.html</anchorfile>
      <anchor>a348c8fdf3758e5ea7a65212d0b917687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSRAM_HWAttrs</name>
    <filename>struct_n_v_s_r_a_m___h_w_attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>regionBase</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>a06f0a7a3323a55f6740f7c0a362dcf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>ae07d198b33dae009dedfa38897d69b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s_r_a_m___h_w_attrs.html</anchorfile>
      <anchor>aa52893b2c1da0f062d69db8ef4128be9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSRAM_Object</name>
    <filename>struct_n_v_s_r_a_m___object.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorBaseMask</name>
      <anchorfile>struct_n_v_s_r_a_m___object.html</anchorfile>
      <anchor>a21a3e3f641687421de4908c9ee2bf393</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_n_v_s_r_a_m___object.html</anchorfile>
      <anchor>af14797e6df756e8d18d27db5a75925d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSSPI25X_HWAttrs</name>
    <filename>struct_n_v_s_s_p_i25_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>regionBaseOffset</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a0743a03845422aebdcc49c67552637cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>regionSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>aa33d42d0f66905a9d5d70ba77916099c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a4187978da42e59bb81953569577a53b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>verifyBuf</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ad231c8f7f6c73d29e2b715c8b1e032ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>verifyBufSize</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ac0e721a58e6b25c8ab1fc0759698f796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle *</type>
      <name>spiHandle</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>affd4e2d11d8b0c9dd43aeb22de7361f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ae99187ec73db72f537b87b75200fc52f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>spiBitRate</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a738695395ff8772994c1446793636df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiCsnGpioIndex</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>ade20d02364fd0f77d795295f4b85d363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>statusPollDelayUs</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___h_w_attrs.html</anchorfile>
      <anchor>a0babde38f1743458205b95c316363e80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NVSSPI25X_Object</name>
    <filename>struct_n_v_s_s_p_i25_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>ac279aced49b5423b40cfab02b5c78d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>spiHandle</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>a6e78dbf7192457ef032aa7f94c68c4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>sectorBaseMask</name>
      <anchorfile>struct_n_v_s_s_p_i25_x___object.html</anchorfile>
      <anchor>a6cb6753a7703769a54800945a065bfba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Power_NotifyObj</name>
    <filename>struct_power___notify_obj.html</filename>
    <member kind="variable">
      <type>List_Elem</type>
      <name>link</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>a0715ba7a7af18cd16286eeefa20252c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast16_t</type>
      <name>eventTypes</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>a2fc010ad9ca5f6827323308aa56709ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyFxn</type>
      <name>notifyFxn</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>acfc434bbe72476fdac364ffe7df28f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>clientArg</name>
      <anchorfile>struct_power___notify_obj.html</anchorfile>
      <anchor>ab430e61fc76f545d992c452a3bc74405</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC32XX_ConfigV1</name>
    <filename>struct_power_c_c32_x_x___config_v1.html</filename>
    <member kind="variable">
      <type>Power_PolicyInitFxn</type>
      <name>policyInitFxn</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a781bf126e3071442438491903eec8890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_PolicyFxn</type>
      <name>policyFxn</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a5291041b1a84651542674e5402d809af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>enterLPDSHookFxn</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>aba9887d0411d02dec98145a552cb40ec</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>resumeLPDSHookFxn</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>aa27819273461bca77c5d77bb422b32fb</anchor>
      <arglist>)(void)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enablePolicy</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>ad5877b98d1851d42d111716bae11a141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableGPIOWakeupLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>ab261edd8765e42e3d220e831b165a87d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableGPIOWakeupShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a83a42e8dd00e9991f70d88b4c208e944</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableNetworkWakeupLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a2c54abc4c0629475191ccf850f297f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOSourceLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>af4447d531bdb2469aaa4fe22ea79d130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOTypeLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a0b742ffcffcace592a104d46ae653c47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>wakeupGPIOFxnLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a635c1689316aa991a93515dee9bb2171</anchor>
      <arglist>)(uint_least8_t argument)</arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>wakeupGPIOFxnLPDSArg</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a31eca3e54677aea0c43aec9abdc38638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOSourceShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a155bddbf8cef6a9b2dcad7878f9edb5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOTypeShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a79734ee6c2bf7fc4b88655f8fa17a7ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ramRetentionMaskLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a8f8ffd184f86a7c28b629eb2a141b107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>keepDebugActiveDuringLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>ace5b9463c9d0bfa7e9dada9c5ca3b01c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ioRetentionShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a7d60c228158f0a984a04a44f6bbb300b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkInfo *</type>
      <name>pinParkDefs</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a8973743b0bec33370e6d46a5fa6e70ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>numPins</name>
      <anchorfile>struct_power_c_c32_x_x___config_v1.html</anchorfile>
      <anchor>a4740436e5bf7f74e988c5cf0b2b218b9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC32XX_ParkInfo</name>
    <filename>struct_power_c_c32_x_x___park_info.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pin</name>
      <anchorfile>struct_power_c_c32_x_x___park_info.html</anchorfile>
      <anchor>accc07ff476224c453e9c86b5128d5013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>parkState</name>
      <anchorfile>struct_power_c_c32_x_x___park_info.html</anchorfile>
      <anchor>a6ff9c226811f204d28e4d4408f35fa9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PowerCC32XX_Wakeup</name>
    <filename>struct_power_c_c32_x_x___wakeup.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>enableGPIOWakeupLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a15af01c898a575aa6edf95a6b6d2a7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableGPIOWakeupShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a161150e52fceca43483d2260818ddbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>enableNetworkWakeupLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a79000b9e72280e4d3cf8411eaf4aecc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOSourceLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a2fd7c55017d91a918c507f524a72f65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOTypeLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a5d6b52275ed1f0afee4a6b7affa210c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>wakeupGPIOFxnLPDS</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a6cedba49c732a17599edc38d35dcbb5c</anchor>
      <arglist>)(uint_least8_t argument)</arglist>
    </member>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>wakeupGPIOFxnLPDSArg</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a57623b57ceaca85db85c2e1b5154e65d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOSourceShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>a57ea736e36f120b44b7ba85e3afedaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>wakeupGPIOTypeShutdown</name>
      <anchorfile>struct_power_c_c32_x_x___wakeup.html</anchorfile>
      <anchor>af33690995518ebc4a29775ab2e25c691</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_Config_</name>
    <filename>struct_p_w_m___config__.html</filename>
    <member kind="variable">
      <type>PWM_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>a36b812aeed91072b4a917e7342278d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>ab0f7f8412e33fb690759b836069356a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_p_w_m___config__.html</anchorfile>
      <anchor>a93a946b1ade9f430d4d1aae474e41f6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_FxnTable</name>
    <filename>struct_p_w_m___fxn_table.html</filename>
    <member kind="variable">
      <type>PWM_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>a1d6e6575c66ae470f23dc2f40e54706c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>af96cd80b3f63291664e9268cd7a30cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>aebcde91c512c962f100d13f511789254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>aca1bd99df949b2e0121ff90598279441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetDutyFxn</type>
      <name>setDutyFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>a766700e0a02097f9fd2d332b71082605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetPeriodFxn</type>
      <name>setPeriodFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>a8c2294da9c53264f7096f6679316f950</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_SetDutyAndPeriodFxn</type>
      <name>setDutyAndPeriodFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>a7b0acc8714b18dfbcacdf3562954604e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_StartFxn</type>
      <name>startFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>afd7e6ebdef185aac438ba871f6163fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_StopFxn</type>
      <name>stopFxn</name>
      <anchorfile>struct_p_w_m___fxn_table.html</anchorfile>
      <anchor>a0614274c889e81ab19a24f2b076b17d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWM_Params</name>
    <filename>struct_p_w_m___params.html</filename>
    <member kind="variable">
      <type>PWM_Period_Units</type>
      <name>periodUnits</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>a9b31d4a26ee33211085b5a9a983f6f9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>periodValue</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>abb64879de715fcfa14e9c756f279b972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Duty_Units</type>
      <name>dutyUnits</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>aa8616ac3e487fe6b46fd0486c10873d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dutyValue</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>ad0ed6daabdc32e1eecfae60ebe13e975</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_IdleLevel</type>
      <name>idleLevel</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>adc9d7e702b3e45b68e448ad4811a3691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_p_w_m___params.html</anchorfile>
      <anchor>a37396e0fa9aac45d2a8292cf5d653471</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWMTimerCC32XX_HWAttrsV2</name>
    <filename>struct_p_w_m_timer_c_c32_x_x___h_w_attrs_v2.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pwmPin</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___h_w_attrs_v2.html</anchorfile>
      <anchor>a9b4f342c57b063fceb50b237ce5520de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PWMTimerCC32XX_Object</name>
    <filename>struct_p_w_m_timer_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a67c1603c655c379610acc0034d3998f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>duty</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>ad1e6ce6bc52478afd5aa3aea726cfefa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>period</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>acd6c89fea0ac448356fa7de7619b03d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Duty_Units</type>
      <name>dutyUnits</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a429617ba3a57bb14a6dff2e65bd972dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_Period_Units</type>
      <name>periodUnits</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>aa95d589427aea557081b40f55eac3e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PWM_IdleLevel</type>
      <name>idleLevel</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a2c93faff2f211dcc5462e6a37ad1549c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>pwmStarted</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a534de3f76b8648411daf6b56ecdd9581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_p_w_m_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a2ae2d2bbe265220e6f297bd65f98cbfc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>RingBuf_Object</name>
    <filename>struct_ring_buf___object.html</filename>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>buffer</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>a3aabec3f4cf04dbc4083548e830d8f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>length</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ac7102de5f975cd743e9618625f6028c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>count</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ae0c8cf16fcfb34570c11db5f5af7aaf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>head</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>a39b92dd09345c4799adf2de4920af5e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>tail</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>ab792bbd6ff48d13ae09eedc33bb79289</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxCount</name>
      <anchorfile>struct_ring_buf___object.html</anchorfile>
      <anchor>afdea48daa7a86ad212139842569b8a3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_Config_</name>
    <filename>struct_s_d___config__.html</filename>
    <member kind="variable">
      <type>SD_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>a15df01acc4194fe38acd711e668840da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>afe674251049a6d824b2a65dfdaf446ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_s_d___config__.html</anchorfile>
      <anchor>aead18f144f5939a3ef9501b550fe63a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_FxnTable</name>
    <filename>struct_s_d___fxn_table.html</filename>
    <member kind="variable">
      <type>SD_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>a33d7845495c34c489fa467ec627dcfcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>a703eeb45ed06146af3553f0f47aa7966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_getNumSectorsFxn</type>
      <name>getNumSectorsFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>aa49b9f42a37683084826c9a27a392fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_getSectorSizeFxn</type>
      <name>getSectorSizeFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>af010d32dd82422ce72ea813b821f191e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>a6eb6b67d00c9c9cddbcfd57c36d70591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_InitializeFxn</type>
      <name>initializeFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>af8c5d6b2d6246456b69df269f98064ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>a92541f8ec79dd250d7238aff590dbdea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>ada7b76e6fbeba6ba0fa6fc7237093a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_s_d___fxn_table.html</anchorfile>
      <anchor>a70a8e6d62ec5f38ba8218c8b40797d7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SD_Params</name>
    <filename>struct_s_d___params.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_s_d___params.html</anchorfile>
      <anchor>a8da6e2fe984f911a17d0649c6308f509</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDFatFS_Config</name>
    <filename>struct_s_d_fat_f_s___config.html</filename>
    <member kind="variable">
      <type>SDFatFS_Object *</type>
      <name>object</name>
      <anchorfile>struct_s_d_fat_f_s___config.html</anchorfile>
      <anchor>ae15d4fd6236acda2094bd3c3cfa96fde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDFatFS_Object</name>
    <filename>struct_s_d_fat_f_s___object.html</filename>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>driveNum</name>
      <anchorfile>struct_s_d_fat_f_s___object.html</anchorfile>
      <anchor>a46ee26f8730a9807a2424aedc19ac818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DSTATUS</type>
      <name>diskState</name>
      <anchorfile>struct_s_d_fat_f_s___object.html</anchorfile>
      <anchor>ae3d41c3f4c8adf7b8291b2aa701296f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FATFS</type>
      <name>filesystem</name>
      <anchorfile>struct_s_d_fat_f_s___object.html</anchorfile>
      <anchor>af165bb538abef87ab17d4dd39d7a9d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_Handle</type>
      <name>sdHandle</name>
      <anchorfile>struct_s_d_fat_f_s___object.html</anchorfile>
      <anchor>a890dbef54e1891408b6962d7c90acc8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDHostCC32XX_HWAttrs</name>
    <filename>struct_s_d_host_c_c32_x_x___h_w_attrs.html</filename>
  </compound>
  <compound kind="struct">
    <name>SDHostCC32XX_HWAttrsV1</name>
    <filename>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>clkRate</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a8927631618c1dddff2d31b7b6e381c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int_fast32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>afb1234183a776ea76fd4783b4f3f61f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint_fast32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>aca47b5691607142cf044dcebc800a4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>rxChIdx</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a1ce7b2626d014f97978c286d2413a47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>txChIdx</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a5b6329c66c64cca258e3b4e9c5d23fe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dataPin</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a2bebaf808520a4609084b03c919d08a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>cmdPin</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>aa1e041e47ae623cb913717db93522d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>clkPin</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a27f71f7078f2855f1dc528b9f7e042a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDHostCC32XX_Object</name>
    <filename>struct_s_d_host_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>volatile uint32_t</type>
      <name>rca</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a06b2adaf39e0291f7fdc6dd5c5c5d394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile uint32_t</type>
      <name>sectorCount</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>aa0456d1ca1d783393a7663413c89c90b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile uint32_t *</type>
      <name>buffer</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a78a7a13701c23c0ef97b020cefb4a476</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>cmdSem</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a3bb48e74eb2696f0cf56b7bb4b2d4339</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a9a33d4b058de0312297881fb239865b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC32XX_Handle</type>
      <name>dmaHandle</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>ad4330f75f1baa786cbcc353e6b9c538e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>powerMgrId</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>ad5a03dbc4fd4b8269f7c1666a69eb130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a344a75d8e3384db6e03fb583c3b6b05d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkCLK</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>abf2893807f8a0390bb02028025107ce8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>clkPin</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a0106038a8879f79b093f404328ff8cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile int_fast8_t</type>
      <name>stat</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a4703f5b851b47bbef1b8f122ab7ce4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a6fbba81dc56fa44767d79e87fd3f074c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ping</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a80f38ac17e196f5623f647f3741daeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>dmaPosted</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>a63a1f96b72fa11ee5915155d54078c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_CardType</type>
      <name>cardType</name>
      <anchorfile>struct_s_d_host_c_c32_x_x___object.html</anchorfile>
      <anchor>ac4ba856e5f5d0d3ed767b1f208467e49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDSPI_HWAttrs</name>
    <filename>struct_s_d_s_p_i___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint_least8_t</type>
      <name>spiIndex</name>
      <anchorfile>struct_s_d_s_p_i___h_w_attrs.html</anchorfile>
      <anchor>af5bd2c5c0c7569c7a98e5629a853ec61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>spiCsGpioIndex</name>
      <anchorfile>struct_s_d_s_p_i___h_w_attrs.html</anchorfile>
      <anchor>a5fcc4985f5db6b4b6f1e91114f5f091d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SDSPI_Object</name>
    <filename>struct_s_d_s_p_i___object.html</filename>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>lockSem</name>
      <anchorfile>struct_s_d_s_p_i___object.html</anchorfile>
      <anchor>a48550e6fa0a3d3d2a867e6a5cc7022fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Handle</type>
      <name>spiHandle</name>
      <anchorfile>struct_s_d_s_p_i___object.html</anchorfile>
      <anchor>a407717e1dd35d8088bd80c4af1f0d645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SD_CardType</type>
      <name>cardType</name>
      <anchorfile>struct_s_d_s_p_i___object.html</anchorfile>
      <anchor>a6c86fe777f2681482cda251b852fafe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_d_s_p_i___object.html</anchorfile>
      <anchor>a8cb5de785c5712208854b6ee7a055a8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Config_</name>
    <filename>struct_s_p_i___config__.html</filename>
    <member kind="variable">
      <type>SPI_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>a422fb4ed4cc7ceb4d8f7d03d9f37639f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>a99ceb1a7284c7f76c6ce19f599721df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_s_p_i___config__.html</anchorfile>
      <anchor>aa0e01417e2e18ecf220f5f580882b94e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_FxnTable</name>
    <filename>struct_s_p_i___fxn_table.html</filename>
    <member kind="variable">
      <type>SPI_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a4cfaf232f1b8c27f570a7e48f31cdffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a8823765c2e1d303e18da6bec1a432210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>aa4a0b45347320aed418d45cdb6609664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a938876d892f41db4a3837f93e1ef04c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferFxn</type>
      <name>transferFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>ae4294e8e6273b581459432386439ca88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferCancelFxn</type>
      <name>transferCancelFxn</name>
      <anchorfile>struct_s_p_i___fxn_table.html</anchorfile>
      <anchor>a50f7f21536780c912dedf32c0918034c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Params</name>
    <filename>struct_s_p_i___params.html</filename>
    <member kind="variable">
      <type>SPI_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a16dbcc3768a01fb7deae25b48fc0d69c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>transferTimeout</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a600801907cf396a96825eaf69781913a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a68d1d610da6a6bf299121b939ef2a352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Mode</type>
      <name>mode</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>abe5eca64adf4ca96bed206a271d9b157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bitRate</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>ab3f035044fdbe75adac8c1d729d8cf20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dataSize</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a30722b1de5e3b089ecf0c669da42ed2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_FrameFormat</type>
      <name>frameFormat</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a67b5ebb8ec72796a0260c427c91cc093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_s_p_i___params.html</anchorfile>
      <anchor>a909f58a310514d16b4fee1b51033d976</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPI_Transaction</name>
    <filename>struct_s_p_i___transaction.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>count</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>ad049d6a900c4bdb59a5ee8ce3d5bced2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>txBuf</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a9461a248f1cceb4048668d44b323a0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>rxBuf</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a214f57d7809c875fb9456a62a406e041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>arg</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>ac47daaa10705d748ace918a098aa1945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Status</type>
      <name>status</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>aa244504b2384411f7de17340be62128a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>nextPtr</name>
      <anchorfile>struct_s_p_i___transaction.html</anchorfile>
      <anchor>a3857151eff782605a3b3c4edeb884130</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC32XXDMA_HWAttrsV1</name>
    <filename>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a291634e7ff74f369d9d7d58c578823ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intNum</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a9a369023434e97b97ec7bc4cd4e997fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a4dd7d57fa12208a77dc3b75c2c7bc80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>spiPRCM</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a9fe09849271730031c5c4c70ec616919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>csControl</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ad6eb0704adcd7eb48897a91b8c564c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>csPolarity</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a6a72e339d4f0ae043f8d96f5cf94634c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>pinMode</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>abde99321fe08667b6eb1c99a0ab069a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>turboMode</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a664c5a41b81b2e8022178bb14a5687e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t *</type>
      <name>scratchBufPtr</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a5803b30a5c618f2f3bb4367e276494d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>defaultTxBufValue</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ae37a577a5b299ba44485babad490860c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxChannelIndex</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a91b9e6beabc91f965a7d40d5eb0df650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txChannelIndex</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a5832b23fa7855a1a36c1b5ec4258e28e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>minDmaTransferSize</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a0c1ec73d871618beb88b50562d595c4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>mosiPin</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a7576af366d6e4d35537bf367460c5b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>misoPin</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a3a385bc2935f75c7204f94183baa8877</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>clkPin</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ad6e5aaeb0fad2b5ee18da0bf20dfc9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>csPin</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a48e4f5bcae539f4073b7ddead466212d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPICC32XXDMA_Object</name>
    <filename>struct_s_p_i_c_c32_x_x_d_m_a___object.html</filename>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ae863cbcc3e01afd9f39770aa2d1c4319</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>notifyObj</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ab5140ee0fcc7d595a2161f8113bc5e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>transferComplete</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a589d310cf371d850c3042a2f6d818fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_CallbackFxn</type>
      <name>transferCallbackFxn</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a71196ba7a030f92216e1ed0c1de6f46d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Transaction *</type>
      <name>transaction</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aac31afe2253a337b762803cc52a5f2fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC32XX_Handle</type>
      <name>dmaHandle</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a2d691cd67dcbab7f500f6d195e4a3099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>amtDataXferred</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a0ab94161553f6a2079dad6eba06cb5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currentXferAmt</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a506e33f66d1a09d0541b3fca6b4094f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>bitRate</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a678ee89e28ac21d13906d2a272d4a97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>dataSize</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a01362bf375844471546ea23c7d281c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>transferTimeout</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a86745d5125686c887f89a5b81d90c936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_Mode</type>
      <name>spiMode</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a65b24c5c45f95a0438d2bfc1e30e3d43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_TransferMode</type>
      <name>transferMode</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a8da53459132b7c400a6c47b20895b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPI_FrameFormat</type>
      <name>frameFormat</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a731b693df8585b8616036602aa2b5855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>cancelInProgress</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a1ca6f5a591ebe0e2096090865b85e8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a9e04b46d3a288089c4589fbed1b16a75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>rxFifoTrigger</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad806ef96c1f2cec040591305168ea971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>txFifoTrigger</name>
      <anchorfile>struct_s_p_i_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ab7dc9e7e23f2233d005b990d443a22f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_config</name>
    <filename>structspiffs__config.html</filename>
    <member kind="variable">
      <type>spiffs_read</type>
      <name>hal_read_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a2d2cc2d17896ba4f5e78c524cd7da76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_write</type>
      <name>hal_write_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ab9402faf21097e938cb86b70efab38b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_erase</type>
      <name>hal_erase_f</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a86af9c6671604e9c6e08cfe6c3fdfaeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ad1746f2435254dd38ebdbf167a3289e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_addr</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>ad14f81b04bcc96bb09909015e06a5b3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>phys_erase_block</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a5d33e08b152880f482c976f897a1632f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>log_block_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>afda08e08a059b922706188f6f2c557ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>log_page_size</name>
      <anchorfile>structspiffs__config.html</anchorfile>
      <anchor>a2525c28d372c9d46152b9997972c25fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_DIR</name>
    <filename>structspiffs___d_i_r.html</filename>
    <member kind="variable">
      <type>spiffs *</type>
      <name>fs</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>ad006821d5233083eaf04fa13fae90d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>block</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>a822b1a3cdc78d84d377af471cde6cbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>entry</name>
      <anchorfile>structspiffs___d_i_r.html</anchorfile>
      <anchor>a14d25754d25e2dab074381fd20395c2e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_dirent</name>
    <filename>structspiffs__dirent.html</filename>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>obj_id</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>adb9c8e8a7c378611c58c02c4a28a9d85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>name</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>abd0b462b485b05eb9ee1703b1ee5beab</anchor>
      <arglist>[SPIFFS_OBJ_NAME_LEN]</arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_type</type>
      <name>type</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>a38414e80ef79bb9dcf421555e9435f89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>size</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>a5cbe52f4c2bb069e109857246decc01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_page_ix</type>
      <name>pix</name>
      <anchorfile>structspiffs__dirent.html</anchorfile>
      <anchor>af3dd1aaf484385078fa8f171c6c9456d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_stat</name>
    <filename>structspiffs__stat.html</filename>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>obj_id</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a50f7d3e286b659e09498edf4e17f1daf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>size</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a861b9a64014f77a01b9630278a7c2410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_type</type>
      <name>type</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>ae08c958bb4b22fd9c6d576e1fea23685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_page_ix</type>
      <name>pix</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a06f9e575229aee0252974423e045fe50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>name</name>
      <anchorfile>structspiffs__stat.html</anchorfile>
      <anchor>a42b32d4cd1868c63f8a8598e5d888a8b</anchor>
      <arglist>[SPIFFS_OBJ_NAME_LEN]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>spiffs_t</name>
    <filename>structspiffs__t.html</filename>
    <member kind="variable">
      <type>spiffs_config</type>
      <name>cfg</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a7f9247b4b84e6b6a6f3b988fdf83ba99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>block_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a8554c5fc24edbd495ed55da15ea172af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>free_cursor_block_ix</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a0e0cb263ec86272f5a75503d362582c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>free_cursor_obj_lu_entry</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aa98ef3edf530c19d0847f900720f3499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_block_ix</type>
      <name>cursor_block_ix</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ab61206cd5cbcaf8ee4bcd1cdf2fb53ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cursor_obj_lu_entry</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aaac9760dde13fbb11ba81871ecee6b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>lu_work</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>aadc62737ea37cf850aa84f7cb0faabb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>work</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>af48f680e30ac20c12412545af0515201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t *</type>
      <name>fd_space</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a4471d7ec110042b1c68cb06311b1daf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>fd_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a1538b44ff998bbc79b59d5adbffeb9dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>s32_t</type>
      <name>err_code</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a5a2359dde97d3ce7158b0ed37ecca219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>free_blocks</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a70cd3e118549e8ec2f20a34725a91a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>stats_p_allocated</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ac567c1d29a7c3c91c8e9ad480a5f4c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>stats_p_deleted</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ad261e9db98b460b8e514ef11eaed5220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>cleaning</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a57d679557baf30480c0b435461e34f44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_obj_id</type>
      <name>max_erase_count</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a98c1ac3d41d58deb2f667856901b714f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_check_callback</type>
      <name>check_cb_f</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a5eb5f40440f41dfca5e0a3aba520e4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>spiffs_file_callback</type>
      <name>file_cb_f</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>ab3da90414142391c3eeeb5905b7eb30b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u8_t</type>
      <name>mounted</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a542d258081a8be645319ff597cfcedd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>user_data</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>a00dfd42d670514d50b7a906b75e45a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>u32_t</type>
      <name>config_magic</name>
      <anchorfile>structspiffs__t.html</anchorfile>
      <anchor>acaf98085b60c8f1a916bb4023a2bd3be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPIFFSNVS_Data_</name>
    <filename>struct_s_p_i_f_f_s_n_v_s___data__.html</filename>
    <member kind="variable">
      <type>NVS_Handle</type>
      <name>nvsHandle</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___data__.html</anchorfile>
      <anchor>ace8ae79c7417bbb05f93cd4aad152aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SPIFFSNVS_Lock</type>
      <name>lock</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___data__.html</anchorfile>
      <anchor>ac00631ca202002964fdaef5d00d899cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SPIFFSNVS_Lock_</name>
    <filename>struct_s_p_i_f_f_s_n_v_s___lock__.html</filename>
    <member kind="variable">
      <type>MutexP_Handle</type>
      <name>mutex</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a80a8ba22db4613ab647b69a86dacf384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uintptr_t</type>
      <name>keys</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a5e104ec48b7039a3ab0e1d501068d375</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable">
      <type>volatile u32_t</type>
      <name>count</name>
      <anchorfile>struct_s_p_i_f_f_s_n_v_s___lock__.html</anchorfile>
      <anchor>a289bb44a011b127b056b774cfe041c6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>StructRingBuf_Object</name>
    <filename>struct_struct_ring_buf___object.html</filename>
    <member kind="variable">
      <type>uint8_t *</type>
      <name>buffer</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>a1db83b2e7a88a53a2cb355d180beb0c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>length</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>abb5595bacd1bb52da76284f86aa0d116</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>count</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>a2b5d78695cdedba62893fc5b338e1cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>head</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>af6082ec6aa542584962e48e6640c572f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>tail</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>ac3af0daaebc471b35756f5c76be7f39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxCount</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>ae17248391989a32060d09d79fd0326e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>structSize</name>
      <anchorfile>struct_struct_ring_buf___object.html</anchorfile>
      <anchor>a10f1fe86461da8a8e84e64b3236a03d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Timer_Config_</name>
    <filename>struct_timer___config__.html</filename>
    <member kind="variable">
      <type>Timer_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_timer___config__.html</anchorfile>
      <anchor>ad729580a94414d8dddf43fa91e2a570a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_timer___config__.html</anchorfile>
      <anchor>adbf31e859dbb61b99d9ca845ab9923da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_timer___config__.html</anchorfile>
      <anchor>aec53bedfd4e8ccfc12b337ea13a2914e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Timer_FxnTable</name>
    <filename>struct_timer___fxn_table.html</filename>
    <member kind="variable">
      <type>Timer_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a46a749abec6cac2a1c7c9a1c01be8454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a24a2d17932b03c91f58d3da49ba87b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_GetCountFxn</type>
      <name>getCountFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a35b072602f29f9a162d7959f660def1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a078c35072648bbf61d23622196646c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>adaf989ca314f706c4289653857349a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_SetPeriodFxn</type>
      <name>setPeriodFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a7895417e440701ce6f28bf0c8945cc84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_StartFxn</type>
      <name>startFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a26301dd61833f80d77f2b6cb53ce9297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_StopFxn</type>
      <name>stopFxn</name>
      <anchorfile>struct_timer___fxn_table.html</anchorfile>
      <anchor>a8757d775fbe0987c614d7ad02edd8fd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Timer_Params</name>
    <filename>struct_timer___params.html</filename>
    <member kind="variable">
      <type>Timer_Mode</type>
      <name>timerMode</name>
      <anchorfile>struct_timer___params.html</anchorfile>
      <anchor>a2ef959938ec2dd893d67b0c7a41ac02f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_PeriodUnits</type>
      <name>periodUnits</name>
      <anchorfile>struct_timer___params.html</anchorfile>
      <anchor>af481da8a02e76c8584c39242cc8aa1a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_CallBackFxn</type>
      <name>timerCallback</name>
      <anchorfile>struct_timer___params.html</anchorfile>
      <anchor>a922a81e82f3cd1af089cc541c85b7098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>period</name>
      <anchorfile>struct_timer___params.html</anchorfile>
      <anchor>a3497c8cb00dc660b2de92461de7e5c19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TimerCC32XX_HWAttrs</name>
    <filename>struct_timer_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddress</name>
      <anchorfile>struct_timer_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a7e2a682bbe83b63185fcc2b8834529dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TimerCC32XX_SubTimer</type>
      <name>subTimer</name>
      <anchorfile>struct_timer_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>aa8bf77bb937f5558d3bb897b87e2c650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intNum</name>
      <anchorfile>struct_timer_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a01c18153f87ede566ded07a305eb3b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>intPriority</name>
      <anchorfile>struct_timer_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a89f440e0e07dd631eeb50cf8be973044</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TimerCC32XX_Object</name>
    <filename>struct_timer_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a2bf051ee295fd934307d0ea7702ae503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>notifyObj</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>adf3275faebe67a35f868e6bd2c09e8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>timerSem</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>ab8f6a9a17eaa474a72aeca35e4a95933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_CallBackFxn</type>
      <name>callBack</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a24da33078992de34b5f30db39ea59f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Timer_Mode</type>
      <name>mode</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a5c42b1495549d0c5b6a3bdf9e1b1003e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>timer</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a485889fd000ec3a2cf39effe3c3b29d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>period</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a3d36e5c2852f7b3ead300653fa1496c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>prescaler</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>aec2da1dc53678b07cf2ae25e61acaeaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>struct_timer_c_c32_x_x___object.html</anchorfile>
      <anchor>a25c2c776e3e26c1462c9f9287f43c118</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART2_Config_</name>
    <filename>struct_u_a_r_t2___config__.html</filename>
    <member kind="variable">
      <type>UART2_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_u_a_r_t2___config__.html</anchorfile>
      <anchor>afa525846114c0baf3affb3e55775bbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_u_a_r_t2___config__.html</anchorfile>
      <anchor>a9c5eb1b5db22e3b8aa9319713376b78f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_u_a_r_t2___config__.html</anchorfile>
      <anchor>ab10f5818195e1fcd0344b654687d1f97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART2_FxnTable</name>
    <filename>struct_u_a_r_t2___fxn_table.html</filename>
    <member kind="variable">
      <type>UART2_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>abf7a7041a1697a9499cf3b781ffe0ab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>a59d5d30f012129d011033eeacbe21433</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>a951a3b605d0e19c8907bba208d3e911e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_ReadCancelFxn</type>
      <name>readCancelFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>ad829f6309b1f746c6b05687a3957f6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>a46508998973cdd99efca89af473b05b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_WriteCancelFxn</type>
      <name>writeCancelFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>a33763b83c5e0e47b6a41ab9fceaef7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_FlushRxFxn</type>
      <name>flushRxFxn</name>
      <anchorfile>struct_u_a_r_t2___fxn_table.html</anchorfile>
      <anchor>a7869bb0ece569d898f9585684e2774f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART2_Params</name>
    <filename>struct_u_a_r_t2___params.html</filename>
    <member kind="variable">
      <type>UART2_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a6dd95ee323c2aabf14b1aa82e27bc7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a7ee665634b02989a5a506dce0b51d298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a72feec1f368666cc1d330400b0eec1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>aadcf916de5cdd5591997d289f03ccfdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_ReadReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a6932346cebafafca64fd705d5416b32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a52da516a384dd7b59d8570ac05562f9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_DataLen</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>aed9521ee8f72ce949f611b37b9fc20ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_StopBits</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a32a2799eac42264531c0885ce4c79b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Parity</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>aeab242e0d26c1a6faf3e9bdc799de916</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>userArg</name>
      <anchorfile>struct_u_a_r_t2___params.html</anchorfile>
      <anchor>a309c74a40012a74de35b6e916b625bc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART2CC32XX_HWAttrs</name>
    <filename>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a6804e40c917611c504e7e23fc099553a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a6aed568c4f1c81609632f48f21bdbdcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a946dc98d340dfb349f352511637c150b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flowControl</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a9c358c83f7fe60ea496befb946c8d1df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>aa196c8917ab9d2127b2438e91765bf15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a754cd759639b93c876be573bfde01d4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>aac68619c5dac9dc346d897015c8d047b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a0231c9bd7f5264905b3407c4e6c8e1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2CC32XX_FifoThreshold</type>
      <name>txIntFifoThr</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ab2c1cfc42c3e4fea3084152fbe42816e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2CC32XX_FifoThreshold</type>
      <name>rxIntFifoThr</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a99874c5f08d531309d3c19775da9c18e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>rxDmaChannel</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a3bd90964230fea89dda44b2ef1568c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>txDmaChannel</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a59934263e97d05088ebba3798f327e7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART2CC32XX_Object</name>
    <filename>struct_u_a_r_t2_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a213a3d275d3eabc97366625333620512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a476b74e79cf8ce3fa77cf298ed6568d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a9d7cabea93dd9c590a646a758bb0957c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_ReadReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a9c653db6d8c56b06586181ec0fc53f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>txEnabled</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a701d5298c52e34dcaf033fdf12dcd50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct UART2CC32XX_Object::@1</type>
      <name>state</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ab3e11ff1a10e935acc8f56fa924eb142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwi</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a72a063f9a4eb985d56d26b85ed988e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ab85a025cfe98f5dbfc6e76a1eca96151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_DataLen</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a4aa3e0223392a739de0534cf071cc21a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_StopBits</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>aa1c734e53077ab09a1ff53b27930bded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Parity</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a68b01bb5c9965156bb6850e6ba4b6dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>rxStatus</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>afd01808917076511c7c28067d5e5b0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>txStatus</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a68e594444bdc80bf8c2eaf7f675ecdf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>userArg</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a2cad8b257ca009fafa618ec22ec51d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC32XX_Handle</type>
      <name>udmaHandle</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>af5d1b4dfeaee181a268a7e01040bdf43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>add65c5659120dd3d7ad1711de5c96692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a8a0a165bc8ab93e21b9e3a95060de1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nReadTransfers</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a3c1530bac5cbe628004d995a4e4a5902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ada4b9f12f55a479ba93e45956483b59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>rxSize</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a4c98f2d8e5908dd5f3186d4b7c9881f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bytesRead</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a2193d303bd264ee53ab733633628d890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>aff8361a98b555ac8336d733fbc38baff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a4a69cee01da1ac7fa8eedf3fbd7997ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a00cfd31977d772a5910eda11168e1d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ae5636bafe63479333e4a69d81a4faeae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>nWriteTransfers</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ac0d20b26aaaa66b72f59f2195d30c920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a1877b93a437117eda4d765d4b3665eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>txSize</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>aa9481d0622dc6a132baf10c01e529905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>bytesWritten</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a23b7d05b048bdbbe2c85a8ee33e20760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a94d9b37612b67572baf3ea0dfd6f5fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART2_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a33bf66bb7ae79da84c1895196afddaf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>ac222cec6bf6982791ae6cc561effc098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>powerMgrId</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a7cf5eaee09bc2e06ff1d594cfabba6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkTX</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>af273d419f980464a4ce3e386ba4895a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a9945da8f153c97f6971634118d272b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkRTS</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a424d6f5f0da42b1e5902bc08082c0e47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t2_c_c32_x_x___object.html</anchorfile>
      <anchor>a670be4921649287e33fa95b88d517fb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_Config_</name>
    <filename>struct_u_a_r_t___config__.html</filename>
    <member kind="variable">
      <type>UART_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a20c35d866935a4bb465c5a4d02183d74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a3e4817fc0e2b0225caeda2072acf56c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_u_a_r_t___config__.html</anchorfile>
      <anchor>a33679e33b65c88fc4e7c2815054923ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_FxnTable</name>
    <filename>struct_u_a_r_t___fxn_table.html</filename>
    <member kind="variable">
      <type>UART_CloseFxn</type>
      <name>closeFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>ab21579c919ae5ebfc3180358d7439787</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ControlFxn</type>
      <name>controlFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a350e08db86d6de3e45e950d077208df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_InitFxn</type>
      <name>initFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a56e1ef00843055476e9b88a510a801d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_OpenFxn</type>
      <name>openFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>afd53378ea35fb42710bcf5520acf05fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadFxn</type>
      <name>readFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>ac4cc1fdecea3b36d525034122a84d4ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadPollingFxn</type>
      <name>readPollingFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a42eee2074bfa5ec52aba695227935e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReadCancelFxn</type>
      <name>readCancelFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>ab2799a9e8d84457fa842b66965d93ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WriteFxn</type>
      <name>writeFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a91feea9956f15f89d8def60d79bf0ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WritePollingFxn</type>
      <name>writePollingFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a3339c9996ef55652fd500e3958ed2dc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_WriteCancelFxn</type>
      <name>writeCancelFxn</name>
      <anchorfile>struct_u_a_r_t___fxn_table.html</anchorfile>
      <anchor>a5eb722a7231589656f26cb1e8b06095e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UART_Params</name>
    <filename>struct_u_a_r_t___params.html</filename>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>ab8677572499b3734fcaa00f6431b0e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a53a95d4c2266d6e7ecea6640baf92d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a1a88437b402afc20922a7f90b9449619</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a4849aaa2dfa2a010f2361e14b77841d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a5457b86b6793f1c4757457b9b22e379d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a0497d8a55aea66d3ab2118f8966e8e33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a47382bd027b944868ce873ad71d29d0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a707659dcecb10f490000511ec2de2060</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a02e8b9127a7d6fa49021f01a7ee69ad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a61642ef82bbcfc98494739a98afff58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>afadb98d0a0ef6e17240bab79306e7828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>adb937e0b27c71886e58953312d3d1376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>a59f12dc5b7329f484573521c0e2b3d78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>acaa90dc09cd820477c5bfaae152a2010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_u_a_r_t___params.html</anchorfile>
      <anchor>ab4df0d3f6c1e1121f303d11271abb7a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC32XX_FxnSet</name>
    <filename>struct_u_a_r_t_c_c32_x_x___fxn_set.html</filename>
    <member kind="variable">
      <type>bool(*</type>
      <name>readIsrFxn</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___fxn_set.html</anchorfile>
      <anchor>ade2a69cfac20f08aac4b18c82eb86781</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>readTaskFxn</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___fxn_set.html</anchorfile>
      <anchor>a47ad3bbefe19e31f4d3a040c9fa0ac40</anchor>
      <arglist>)(UART_Handle handle)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC32XX_HWAttrsV1</name>
    <filename>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>aa0f3a12c7ce1081624ef0020f5a9d2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>adda229a538e5e239949565d9677a36d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a824fdc6655f48328d1dd51204cbfa4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flowControl</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>ae88e3f5a6d57e8273f46600decfb15ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>ringBufPtr</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a864b5cf45327d01dc4a039b374a7f697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ringBufSize</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>ae44282e366fedc3224583a8c787cf12b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a981f3b056fdc8fab9c9b3d8d4c570078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a26d782ae87dbe841c789c125d2c9bd00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>ae558d0acdab993706032bc69a6409c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>a65eda760213ce43fd2a505b4484404b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC32XX_ErrorCallback</type>
      <name>errorFxn</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___h_w_attrs_v1.html</anchorfile>
      <anchor>af76b4cc189d2f1b6543b936fb08779a5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC32XX_Object</name>
    <filename>struct_u_a_r_t_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>af2d30e3cdcb5951d0d5007bc124a5aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aa5d421583d525cf2f52308244418095b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a64151f58e9790d4d51447695e47ace4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a0c34ae89bac416f11387a567a886656e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ae7bc783d545ace373b2ab35be678b113</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a64753dcfa57d7cb3068b9ee9089d2e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aa11b5c6c15e28d35932f1c15a1d20a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>bufTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aec19a32fec0fa657d7f30d52503c9c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>callCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aafcb97579f7a467d33c2010412ff298b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>drainByISR</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ab42dc57b1ccdb69495a09d82dd2c896e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>rxEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a05c8aef7e0a937e5438510405f35efbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>txEnabled</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>adcf5a3084cc80054e7527d27e57affae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>inReadCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a42a74d460e008c38ade93b33769e3b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>volatile bool</type>
      <name>readCallbackPending</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a6b8118ebfd21e32b11d5d91309aa4aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct UARTCC32XX_Object::@0</type>
      <name>state</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a75fff7661cc6bf31407c4beb6dfc8563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aa82a7eddf5a64994183e2635c3f928ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Handle</type>
      <name>timeoutClk</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a3cec5b3b53c68db41ba350ff57777556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a941fc52b62a090efe4bbf3733af12d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a59c1eeaede3e8325c7ebe6662e0028f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ac75b9e77624b4e11f23dd73bed1b5aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ac0e017c9eb9cd44254ab761ba58fa4ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RingBuf_Object</type>
      <name>ringBuffer</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a1817a11c8f868369629fc85cfb889751</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC32XX_FxnSet</type>
      <name>readFxns</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a4f104180dc08dca89a502d78d425135f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned char *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a644bb73db23ef24cb464782ee8e5f7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a2bd1194edb1b8f7f4b854121199618b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>af646dabb38a8adaaadd230e263354c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aa36621016fa2824aa1835dafd4acb810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a7bef8ac1c65493028ff52a4ee2d54861</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ab709032922f2d61ac45ac904644afd07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const unsigned char *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>aa775755856ce18174706228f28cde459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a9ebab52c492c78415f7ed9aacb307f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a95b4875ff9f3fe633526b7bbe23261a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>ae3f8f36bf60eeef14a7ffca4c4eabb31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a3d10e902a4de892a5d8030348df87a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a4168549630b6d7d060b7e875a564beaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a2be185f5cdb3be913baad08042bfe5f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>powerMgrId</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a6ab1cfd3775eb8b25fea52a5a4a80483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkTX</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a69e8c4e7bc31067487ca4adb542927c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a75aea8fc10c5c093badf63bd7a947ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkRTS</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a2a234960a8d783800017bbd5c497315d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x___object.html</anchorfile>
      <anchor>a6b6acae74b8438763324c2ed7a697994</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC32XXDMA_HWAttrsV1</name>
    <filename>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baseAddr</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a84033703d6b5d409c0af7a7a9b653c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intNum</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ae49e65934249e84b1f2516ea91ae8ff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intPriority</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a390e7f4e2cf0191f31188c33d3d03994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>flowControl</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>afdc5aee2187b84e73315f71628afd198</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>rxChannelIndex</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ab8095891a1c93cc77111c984d2029495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long</type>
      <name>txChannelIndex</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>af16bdbd23b24ca72fd0bcd11195194b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rxPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ac712c95a8938e706324bf00ee67d7f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ad2a634186c539228e4d97aafa96ab79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>ctsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a51efd42d4a4eedca8ad34fd917777ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>a466797a61fe47d6f6da94735f98d2f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UARTCC32XXDMA_ErrorCallback</type>
      <name>errorFxn</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___h_w_attrs_v1.html</anchorfile>
      <anchor>ad8a195f07f337e7493df5dd5057714c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UARTCC32XXDMA_Object</name>
    <filename>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>opened</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a93e4e3b4a683e2df9815fd7c19c5c18b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>readMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>abeef778ce7067c19ac692c3fdcb8b100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Mode</type>
      <name>writeMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a689cb712f8448fa9a5a008c61698997f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>readTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a0299d948c6ecf396b0e18d52b9b2d6b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>writeTimeout</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ae695db047242cd866e6f4862cc923c91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>readCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a41605bd28b777174e29ed7d60662ffb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Callback</type>
      <name>writeCallback</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a6f90d0da16235de182dccf9d1dcccfa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_ReturnMode</type>
      <name>readReturnMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>abfc3e909bd2b20ac4234a0c03a3916b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>readDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a565a6f5d70154b9bfa4a7b25338b0dac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_DataMode</type>
      <name>writeDataMode</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ab206ef888e6130d14a998ce58849dbc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>baudRate</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a340fdb8541420c0df1349d1b28b21f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_LEN</type>
      <name>dataLength</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a1d1212a41cba3a2840c2676807c9ae46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_STOP</type>
      <name>stopBits</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a0f557783f19ba1b339e4b9ab5e820470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_PAR</type>
      <name>parityType</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a1a60fe3e436a6bb9d8db7756489467da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UART_Echo</type>
      <name>readEcho</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a982982418bd395bc04922e601fba5fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const void *</type>
      <name>writeBuf</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ab55e45c374b4967670f988a9fed87f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeCount</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ab966f024376af733c71dc0bb85857184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>writeSize</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ac659f645290e51bdaddd8a000612ef59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>readBuf</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a5ea6c7649240bc302fbbdaeb79ed370e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readCount</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a11e70847db049b80b5ac3bf3238aaada</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>readSize</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aac74dc00be57fddbb2fd2e7e93760151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>writeSem</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aab2eaf7bbb59b16123198dbc6873ea60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SemaphoreP_Handle</type>
      <name>readSem</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a827d5c3f447900b2756ef32b0e32d7ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aed3c419b9a5757f836f396e9705aa712</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ClockP_Handle</type>
      <name>txFifoEmptyClk</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a4005f89a2700c3432aed1747647879df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>postNotify</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ace16d4e38a142b9d45c9144f46898275</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>powerMgrId</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a587e4524b79066aecbc83a37157528d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkTX</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a2d819fea6e4dce052fa1d2b48e9d6686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>txPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>ad31df3840300d739f333ef61709887af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PowerCC32XX_ParkState</type>
      <name>prevParkRTS</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a005b796e0482ee63422e2b7aa106f235</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>rtsPin</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>a7426499923c9dee93214e0fa84e92f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC32XX_Handle</type>
      <name>dmaHandle</name>
      <anchorfile>struct_u_a_r_t_c_c32_x_x_d_m_a___object.html</anchorfile>
      <anchor>aaefb5dd31cdbddc3306eafc7fddd3f8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC32XX_Config</name>
    <filename>struct_u_d_m_a_c_c32_x_x___config.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___config.html</anchorfile>
      <anchor>a8162ba3b2732a507d1ed5f7a33b21923</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___config.html</anchorfile>
      <anchor>aed5ef00c889e6733881cd663ef20eebc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC32XX_HWAttrs</name>
    <filename>struct_u_d_m_a_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>void *</type>
      <name>controlBaseAddr</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ab437c6796eecbffd602a07c6446fd147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UDMACC32XX_ErrorFxn</type>
      <name>dmaErrorFxn</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a99f5b65f0016ea6412c4f8fb3b1a0e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intNum</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a090073b2860517886865a8f3ad8a38db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>intPriority</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a06303d21e675e3961276b4ca07d6ce98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UDMACC32XX_Object</name>
    <filename>struct_u_d_m_a_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___object.html</anchorfile>
      <anchor>a34aef42cac317d10aabdd2efaf7b0e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HwiP_Handle</type>
      <name>hwiHandle</name>
      <anchorfile>struct_u_d_m_a_c_c32_x_x___object.html</anchorfile>
      <anchor>a819f3a9582e463286227760b1d769ab0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_Config_</name>
    <filename>struct_watchdog___config__.html</filename>
    <member kind="variable">
      <type>Watchdog_FxnTable const  *</type>
      <name>fxnTablePtr</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a2ceb6aabf71a42cf6e4162d1ce314e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>object</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a445dc09c39f77c050e15f83a5b431943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void const  *</type>
      <name>hwAttrs</name>
      <anchorfile>struct_watchdog___config__.html</anchorfile>
      <anchor>a839535d8cd9c2c46e4112cd6e99c684f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_FxnTable</name>
    <filename>struct_watchdog___fxn_table.html</filename>
    <member kind="variable">
      <type>Watchdog_ClearFxn</type>
      <name>watchdogClear</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>a925066f771f1c4ad0e8607e8aa6aee4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_CloseFxn</type>
      <name>watchdogClose</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>a4e8c8b1da4a51c4b76d33e702637f326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ControlFxn</type>
      <name>watchdogControl</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>a415d44b4771fd48395105c5644a14429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_InitFxn</type>
      <name>watchdogInit</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>a098c5fc8de0d3bf2071960387156c3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_OpenFxn</type>
      <name>watchdogOpen</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>aaff59460698cbba41fca6660c44ee9c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_SetReloadFxn</type>
      <name>watchdogSetReload</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>aff9226f8aff3780cf4a05d3e0adf7ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ConvertMsToTicksFxn</type>
      <name>watchdogConvertMsToTicks</name>
      <anchorfile>struct_watchdog___fxn_table.html</anchorfile>
      <anchor>ab253c59bdf8e993393478369de95a038</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Watchdog_Params</name>
    <filename>struct_watchdog___params.html</filename>
    <member kind="variable">
      <type>Watchdog_Callback</type>
      <name>callbackFxn</name>
      <anchorfile>struct_watchdog___params.html</anchorfile>
      <anchor>a710aaa2504356ab3d3f9a27ac19ddb85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_ResetMode</type>
      <name>resetMode</name>
      <anchorfile>struct_watchdog___params.html</anchorfile>
      <anchor>a94b5d650f8beb7dce719360404039ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_DebugMode</type>
      <name>debugStallMode</name>
      <anchorfile>struct_watchdog___params.html</anchorfile>
      <anchor>abe7792eef8afa2972a4625f428b7241b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>custom</name>
      <anchorfile>struct_watchdog___params.html</anchorfile>
      <anchor>aa2d75e83d9cb6bf71400934b709ec234</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WatchdogCC32XX_HWAttrs</name>
    <filename>struct_watchdog_c_c32_x_x___h_w_attrs.html</filename>
    <member kind="variable">
      <type>unsigned int</type>
      <name>baseAddr</name>
      <anchorfile>struct_watchdog_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ae1f13f3ec247fee84c0d926e78b3e6a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intNum</name>
      <anchorfile>struct_watchdog_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>ac7a3918d5b95722f778f44d305c984d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>intPriority</name>
      <anchorfile>struct_watchdog_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>acf1f11e88df1ffd3f5250d35c43c1c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>reloadValue</name>
      <anchorfile>struct_watchdog_c_c32_x_x___h_w_attrs.html</anchorfile>
      <anchor>a0f80ac4c136429bafd1b6d68a9d61c7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>WatchdogCC32XX_Object</name>
    <filename>struct_watchdog_c_c32_x_x___object.html</filename>
    <member kind="variable">
      <type>Power_NotifyObj</type>
      <name>notifyObj</name>
      <anchorfile>struct_watchdog_c_c32_x_x___object.html</anchorfile>
      <anchor>a7bebc6d6c701b1f18019ed8b4d7d1e86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>reloadValue</name>
      <anchorfile>struct_watchdog_c_c32_x_x___object.html</anchorfile>
      <anchor>a2d8f9f3c5c8d91def7280bc212d9ef68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Watchdog_DebugMode</type>
      <name>debugMode</name>
      <anchorfile>struct_watchdog_c_c32_x_x___object.html</anchorfile>
      <anchor>a7cc63a6eda22187296d56f034af26406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>isOpen</name>
      <anchorfile>struct_watchdog_c_c32_x_x___object.html</anchorfile>
      <anchor>a7a1810a1fd73af5afda05581cbba2d78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPIFFSNVS_STATUS</name>
    <title>SPIFFSNVS status codes</title>
    <filename>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga44e1652f2eb8528bf93adc77e3e013d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_ERROR</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga24d6594e8daac912958ef381ffd60763</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_NVS_IDX</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaaed3fec880853b3df3ddc6f2bd171f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_BLOCK_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7961506209d7c5a1dc791159d6c52a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPIFFSNVS_STATUS_INV_PAGE_SIZE</name>
      <anchorfile>group___s_p_i_f_f_s_n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga21872212b529e6a1157b6f3f4e579dbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ADC_CONTROL</name>
    <title>ADC_control command and status codes</title>
    <filename>group___a_d_c___c_o_n_t_r_o_l.html</filename>
    <subgroup>ADC_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>ADC_CMD_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga1850e2c1e2791103d1102917d1e5b01b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_RESERVED</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga5a8bd7786df22349b1a5434f48b08581</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_SUCCESS</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaee02c8883a7e443d36ea47f9696730ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_ERROR</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga33ce323c3bbdc8a3f4e018f99a92b09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADC_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___a_d_c___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga704a8cd95bdee94b0f61f06566062e8c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ADC_CMD</name>
    <title>Command Codes</title>
    <filename>group___a_d_c___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>CAMERA_CONTROL</name>
    <title>Camera_control command and status codes</title>
    <filename>group___c_a_m_e_r_a___c_o_n_t_r_o_l.html</filename>
    <subgroup>Camera_STATUS</subgroup>
    <subgroup>Camera_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_CMD_RESERVED</name>
      <anchorfile>group___c_a_m_e_r_a___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaed2b3df48a75ec7e6e78320bb3a48eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_RESERVED</name>
      <anchorfile>group___c_a_m_e_r_a___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga13b3728d2673d72db6cc71744a0cbedf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Camera_STATUS</name>
    <title>Status Codes</title>
    <filename>group___camera___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_SUCCESS</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa4d73b4da4ce113c8fb545d1f2649257</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_ERROR</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2863402eca66d26cf447fc02340a0d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMERA_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___camera___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaae8cae4253d68cc8ae921b63a74d1cb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Camera_CMD</name>
    <title>Command Codes</title>
    <filename>group___camera___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>capturePinIdentifiersCC32XX</name>
    <title>CaptureCC32XX_HWAttrs &apos;capturePin&apos;</title>
    <filename>group__capture_pin_identifiers_c_c32_x_x.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_01</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaab6f92096fe054b126140412c4aca3fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_02</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga89546c923e06750d54018fa7ca400cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_03</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga03bd2e7d3aea434e577df20537563dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_04</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa4906df49fe0732139dce8f1f8ee723d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_05</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf2b1e61b620b825511af385ef5a3f9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_06</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gad83dbb82c35acc6a2b1804d386bca3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_07</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab5f47fc3b13c4444838eca9a6d2cdc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_15</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa5354f8a446fe1c99c33a08d59d038c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_17</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa92ca8344ad77c6c2003713301533193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_50</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gab0cdb9a66537366b684b714a091b2f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_53</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga97028e10717b482f1761b7688d79dc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_55</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga93ea1364563c9c42e85016b6bc41b7a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_57</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga78d1d540dbbd4998a6d229e5e5c72f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_60</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga73ed11859cb1948650013bfd9f798b0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_61</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaa0013ba561bdc94f115ae0dc1efa107e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_63</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gafda041247ad55e7d661d3a15e4a7be29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CaptureCC32XX_PIN_64</name>
      <anchorfile>group__capture_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3ebeec1d545d6a20399d2d1555022677</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GPIOCC32XX_PinConfigIds</name>
    <title>GPIO pin identification macros used to configure GPIO pins</title>
    <filename>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_EMPTY_PIN</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf51e71d53bee1689ca94447f0a203446</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_00</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga66c5e06961dde0e35aa21aad4a39007d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_01</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gab74ecf0b1dc2503343eb75a8d2b92e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_02</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga5bfae7c21db05d71a287cc8d3d346c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_03</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga8f6b4bc9a89034d93418c3abd10043d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_04</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa909ccf5ac289cf70a1cd4871d47f7f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_05</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga054dc451d2c1c78ad0d1bbd6bcb71f82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_06</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga04353d72534d9fc0fe734979273cce31</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_07</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaeab3712581a5799dc5ecefb750a18df4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_08</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga1000d5aec64eaaa83312960c58382417</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_09</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga97d27cf77d13a4bc0bd6bb7fce8841c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_10</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaa6b23d6bc6e6500ed2c6d3682ce860e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_11</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga290cb2051ced416f4648a37e5e81bdc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_12</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga4d01d74e6136bc8fcd7e88b7daeedc0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_13</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga3b47fcbc24e39daac60d9597c7d9809b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_14</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga605a3a7fbd2a02b498130df909f30e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_15</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga72c8cc238b2a732ebbfdb1e1843618c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_16</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf843db0af8bd59983e1bbaca484f51a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_17</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga49771649b024dd040f94e7c58c083146</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_22</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaed3b842467af76448b6bb36424d43927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_23</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gacd47d2ef240fd1f5393fc6a33b55b5ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_24</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga17d47034e903846b6eacb38845fbe268</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_25</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga9cc07e8692514c1d4bbd3f52640057cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_26</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga81e6b1f3630c7f0dd7339a2e6cf3457a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_27</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gaf9e28ebb77e0c0d835775586cca6ac52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_28</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga7cdaec1fbdec4241fdaab8716ad4a20e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_29</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga25ffb67bdab2e98ef1fa1f2915d77ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_30</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga16c596c6a80c55c1b8073823f4525e95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_31</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gadab844d3954882a6af78b1c7429692a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_GPIO_32</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>ga0faf3ed7f29dc8b8f874213f31318f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIOCC32XX_USE_STATIC</name>
      <anchorfile>group___g_p_i_o_c_c32_x_x___pin_config_ids.html</anchorfile>
      <anchor>gabfa67fcbdc5c5304f95ef46853638395</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GPIO_PinConfigSettings</name>
    <title>Macros used to configure GPIO pins</title>
    <filename>group___g_p_i_o___pin_config_settings.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUTPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaad0c4b9c093f1d57fd03061b7456193a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac52528c42a8eb3be193f49de5ed7d820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae660060d38901c2370d8f104fbb842a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga16cfdcae58be5f77932b36f43e7c1d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_OD_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gaf4e7be1d009ff2c25a048ab7fe401d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga2917f431dff7eb7f5559643bd8df251d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_MED</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac1d2c5bf8f2359d26d28abc8aa393b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_STR_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga25609d59d41f081ae9759d5862dc9dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gae86eb6dc677c962a9ad94bdad6752dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_OUT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad4fd3be9a7bec74d862cb1caecc5d4be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_INPUT</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga874e34de3bef2d9415b4311dd6bed234</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_NOPULL</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad2e8d27bfc96ef0de4dd35db10055412</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PU</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4fb7b60751481b6988049fe8fa94a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_PD</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gad09e6716ad1b54cb6509b8c92a6567c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_NONE</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga666c6995ed5737b43a707d1cacd9fe69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_FALLING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga7a69ee26049dc2f8b5059b00a24b9f74</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_RISING</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga4a9f53e525d1f1659b485274d08ff91f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_BOTH_EDGES</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0829900a2dd949219edc6ddc8d928f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_LOW</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gab0f05c331bb66230f175e574d0d317a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_HIGH</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga669d2e840e0f934426670a069a5efe0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_CFG_IN_INT_ONLY</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>gac8df4b49e09cb612275ed7d00e8cc1cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GPIO_DO_NOT_CONFIG</name>
      <anchorfile>group___g_p_i_o___pin_config_settings.html</anchorfile>
      <anchor>ga0974eb3af57b7bccef9ac749d4cf23a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>I2C_STATUS</name>
    <title>I2C Status codes</title>
    <filename>group___i2_c___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_QUEUED</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa63ec7e8376d0bfa4c6255a1f723e13f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_SUCCESS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa0bcf3acd26ac82bd8ff91daba2c78c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ERROR</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7323fe57c39c46d0da9910e17f5f0b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga11c31c9869ed2441789205d9e5967d66</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_TIMEOUT</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacef5657ae83115da15f49dd76801638b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_CLOCK_TIMEOUT</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gae1ce91f866196f18abebfd6aead32cbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ADDR_NACK</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga75c95f62df35a6769b69904e6cd90181</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_DATA_NACK</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3773311442a356cd750e1cf34b85ed5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_ARB_LOST</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gadb5718560335315df79d4abe7ddba317</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_INCOMPLETE</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4d4ff3732548047b7c09a1f34ab93d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_BUS_BUSY</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf7455cb02ee12dfc513ceb28323b4b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_CANCEL</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2cca884b9720ab2ca750ebfdb8614601</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2C_STATUS_INVALID_TRANS</name>
      <anchorfile>group___i2_c___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad92f93f1f1c8ef8fc2be70bb8b0c7aa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>I2S_STATUS</name>
    <title>Status Codes</title>
    <filename>group___i2_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>I2S_ALL_TRANSACTIONS_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab6513a393fed75b7c1b507d5ec9047fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TRANSACTION_SUCCESS</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8265d03e72406770257a834e377247b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_TIMEOUT_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga815abf87dfe4353e42bea24940f45d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_BUS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeff50b687883296e143e5da70102a915</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_WS_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab9cb86b261eb8a0abcfc19091f46385a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_READ_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50be1b2cc5cef182aff769f626eb6e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I2S_PTR_WRITE_ERROR</name>
      <anchorfile>group___i2_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacb0dde45fe8df930d9914a100fbfcef8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_CONTROL</name>
    <title>NVS_control command and status codes</title>
    <filename>group___n_v_s___c_o_n_t_r_o_l.html</filename>
    <subgroup>NVS_STATUS</subgroup>
    <subgroup>NVS_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>NVS_CMD_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaa9fa1c41660d17139bce63ff34cd774f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_RESERVED</name>
      <anchorfile>group___n_v_s___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gad82fd139152ca14946c80c6c91edb4a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_STATUS</name>
    <title>Status Codes</title>
    <filename>group___n_v_s___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_SUCCESS</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga5f3b6583ee909863b86799762dc8b4aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_ERROR</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga995c9896630b7a0cd1662e7be9c4cf34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac8aa59663f65af4fa564a3a83cd7d6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_TIMEOUT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga1b42309ac8efec007159e58382dd4a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_OFFSET</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga30a816faeeb9a50757055fb6f10189a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_ALIGNMENT</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga07f2472d1204718531ddf7a369b86ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_SIZE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga6bdc99317ca872755243d9a76ad1db95</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NVS_STATUS_INV_WRITE</name>
      <anchorfile>group___n_v_s___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad8da7024d67625daf4347c22d50fdb4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NVS_CMD</name>
    <title>Command Codes</title>
    <filename>group___n_v_s___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>pwmPinIdentifiersCC32XX</name>
    <title>PWMTimerCC32XX_HWAttrs &apos;pwmPin&apos; field options</title>
    <filename>group__pwm_pin_identifiers_c_c32_x_x.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_01</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga3618e170f0375e7f4c41263559d1282f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_02</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf155150099317e188cd7de403c210bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_17</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga26150cae31df21ab2940bc1197ad9d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_19</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga0494fc4c430672164f9da33123e552c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_21</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>gaf825b711c08749fa231f21ebd4dc393d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PWMTimerCC32XX_PIN_64</name>
      <anchorfile>group__pwm_pin_identifiers_c_c32_x_x.html</anchorfile>
      <anchor>ga8f18fefd94a4a5f08ae3ad0d620c8c97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SD_CONTROL</name>
    <title>SD_control command and status codes</title>
    <filename>group___s_d___c_o_n_t_r_o_l.html</filename>
    <subgroup>SD_STATUS</subgroup>
    <subgroup>SD_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>SD_CMD_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaeae6617d0410c8dfd0df727b44d9fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_RESERVED</name>
      <anchorfile>group___s_d___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gabca601c1ba0b541c82e3065b5f115ace</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SD_STATUS</name>
    <title>Status Codes</title>
    <filename>group___s_d___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_SUCCESS</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga691cc2fe1fe0fa94560519b53f18c647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_ERROR</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ed21a29e85502f5a205d5273df01713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SD_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_d___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga072054678e68aafcd16a7bf45892d8c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SD_CMD</name>
    <title>Command Codes</title>
    <filename>group___s_d___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>SPI_CONTROL</name>
    <title>SPI_control command and status codes</title>
    <filename>group___s_p_i___c_o_n_t_r_o_l.html</filename>
    <subgroup>SPI_STATUS</subgroup>
    <subgroup>SPI_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>SPI_CMD_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga3d23d16525ee76f77276472d8dea80b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_RESERVED</name>
      <anchorfile>group___s_p_i___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gae1af8c6ebf5e8fe481649f65e37b1b9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPI_STATUS</name>
    <title>Status Codes</title>
    <filename>group___s_p_i___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_SUCCESS</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab38fa90ff62128dbc98b2ecd84ca106f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_ERROR</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2d0020dd673cc28a9e1c20b0ff101073</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPI_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___s_p_i___s_t_a_t_u_s.html</anchorfile>
      <anchor>gacfcd15e1eecdb99b4867adc7592a8d6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SPI_CMD</name>
    <title>Command Codes</title>
    <filename>group___s_p_i___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>UART_CONTROL</name>
    <title>UART_control command and status codes</title>
    <filename>group___u_a_r_t___c_o_n_t_r_o_l.html</filename>
    <subgroup>UART_STATUS</subgroup>
    <subgroup>UART_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga0f5a809e0884da33fef102236eb51644</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_RESERVED</name>
      <anchorfile>group___u_a_r_t___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga8f35027907fbab6a9ee302d2ee52a879</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UART_STATUS</name>
    <title>Status Codes</title>
    <filename>group___u_a_r_t___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga101b7761f89b3ec49f0c6726669acfed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_ERROR</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2ae076f4aae13ca8e2aea674207df0ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___u_a_r_t___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga61125a2eb8059fd8b96ad95edc68ac2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UART_CMD</name>
    <title>Command Codes</title>
    <filename>group___u_a_r_t___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_BUSY</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga38c3c7e9cdb00e0a717a4f326490e3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_RX_DATA_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gab87e5a568435493f272b07bdbca9fb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XX_CMD_IS_TX_SPACE_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga40a5ff3e171620cb3fa6288a56acb433</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_BUSY</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga8901b84c7e2b48425c195150cee2c1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_RX_DATA_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga767f57c3d3cc972d6dfbfe06b6be0a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UARTCC32XXDMA_CMD_IS_TX_SPACE_AVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gabbb4459dc6b30b24df7363a63c04f1e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_PEEK</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga942596a37cb2109ae021f88f3d907bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_ISAVAILABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gaf5be6db621c5b048637dc93b26797693</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_GETRXCOUNT</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>ga470321cbd9eccf137ffbe6553ae7f35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXENABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gad67d01fa376f25bb28141d819647e8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART_CMD_RXDISABLE</name>
      <anchorfile>group___u_a_r_t___c_m_d.html</anchorfile>
      <anchor>gac0b19ce2fa9f43d3fe255bcdbd3cda7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_CONTROL</name>
    <title>Watchdog_control command and status codes</title>
    <filename>group___watchdog___c_o_n_t_r_o_l.html</filename>
    <subgroup>Watchdog_STATUS</subgroup>
    <subgroup>Watchdog_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_CMD_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga4d1b16e67bf555b8fe49182eb8a28b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_RESERVED</name>
      <anchorfile>group___watchdog___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gaf7d1273929fd4d1f630c31b90def9684</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_STATUS</name>
    <title>Status Codes</title>
    <filename>group___watchdog___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_SUCCESS</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa8dd490de97398b1da33798d8e54b53f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_ERROR</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga7cc28c1119ebecae88a5ae0735228489</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga589be79a7f8ce642863f231e1dae7577</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Watchdog_STATUS_UNSUPPORTED</name>
      <anchorfile>group___watchdog___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f4ea82c3209f4acc21607ee0e9e053c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Watchdog_CMD</name>
    <title>Command Codes</title>
    <filename>group___watchdog___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_IS_TIMER_ENABLE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga2180fa0accdea4b379edd12a3a5d9113</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_GET_TIMER_VALUE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga5ef077bbc3ab4392e24fc13282993d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_IS_TIMER_LOCKED</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga8a2cadcd075a2a23fcfa9d980adf09a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WatchdogCC32XX_CMD_GET_TIMER_RELOAD_VALUE</name>
      <anchorfile>group___watchdog___c_m_d.html</anchorfile>
      <anchor>ga1d0226cc406f566d7832552edd06bc28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_TYPES</name>
    <title>Meta-types of display implementations</title>
    <filename>group___d_i_s_p_l_a_y___t_y_p_e_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANY</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga18e865923359fab7d26c09dc169caf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_INVALID</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga09ec0c157c10708af6c2fec8e5b26805</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LCD</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga9b8f62fe443d3a584f598392d233f38c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_UART</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga0257ac5b377a67eb525400e4c2a4f0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_LOG</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gaaf8a10cc8b8de9d38f144d44f968b1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ITM</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gae19f6c6b10d4e3d491819fb02ae4c865</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_HOST</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga159af3b59e8fa662fc153a0307fd1817</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_ANSI</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>gabdee477121870fb7102a9a572c5cdc9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Display_Type_GRLIB</name>
      <anchorfile>group___d_i_s_p_l_a_y___t_y_p_e_s.html</anchorfile>
      <anchor>ga498ae390d2feea643ec3f23533859f35</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_CONTROL</name>
    <title>Display_control command and status codes</title>
    <filename>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</filename>
    <subgroup>DISPLAY_STATUS</subgroup>
    <subgroup>DISPLAY_CMD</subgroup>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>ga99c2401cd11ea3b49e5e3e4ffac5c886</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_RESERVED</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_o_n_t_r_o_l.html</anchorfile>
      <anchor>gacb7031dd18c19e3ecb86d97cb7b17abb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_STATUS</name>
    <title>Status Codes</title>
    <filename>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_SUCCESS</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4f6a4a10f24cf55bc13d1750e38bb946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_ERROR</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaf91798b06dd95fce8063b7328420fab3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_STATUS_UNDEFINEDCMD</name>
      <anchorfile>group___d_i_s_p_l_a_y___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga3e506301dbdad496a95e12c3b17efc6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>DISPLAY_CMD</name>
    <title>Command Codes</title>
    <filename>group___d_i_s_p_l_a_y___c_m_d.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_CLOSE</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga5be24ea4a3ddfd94efbb513d649ac88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAY_CMD_TRANSPORT_OPEN</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>gae12206be356c6b2ce885b5ada9b1854d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DISPLAYSHARP_CMD_SET_COLORS</name>
      <anchorfile>group___d_i_s_p_l_a_y___c_m_d.html</anchorfile>
      <anchor>ga27b9623d9abc7aa7eeae74ea7d77cd0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>I2C_CMD</name>
    <title>I2C_CMD</title>
    <filename>group___i2_c___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>Power_Latency_Type</name>
    <title>Power_Latency_Type</title>
    <filename>group___power___latency___type.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_TOTAL</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>gaa5e33b10202cc5a261c1800b4ae1de3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_RESUME</name>
      <anchorfile>group___power___latency___type.html</anchorfile>
      <anchor>ga7343f6504f2df361dca3760a97584371</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Notify_Response</name>
    <title>Power_Notify_Response</title>
    <filename>group___power___notify___response.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYDONE</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98c91c03b469de0cf4f53b89a867ee19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_NOTIFYERROR</name>
      <anchorfile>group___power___notify___response.html</anchorfile>
      <anchor>ga98066f45fce59fd38d8edcb6f2ac96fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Status</name>
    <title>Power_Status</title>
    <filename>group___power___status.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_SOK</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga92eed670a5d7e3d43f612ca0da9d3fe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EFAIL</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaed2f92a8c72bfa183e14d10a2e35789f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDINPUT</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga200ab87d1e0ffbc4eb3864d18646e0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EINVALIDPOINTER</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga0d24bacb087e8282be2e4394503a429a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ECHANGE_NOT_ALLOWED</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>gaa4e7b580b1c9c026036bf53befe5723b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EBUSY</name>
      <anchorfile>group___power___status.html</anchorfile>
      <anchor>ga3132904395c5631392bd6301d9a2181e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Power_Transition_State</name>
    <title>Power_Transition_State</title>
    <filename>group___power___transition___state.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>Power_ACTIVE</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga01074d8221d330077fbe040b9143e183</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga6038b3877b09c908834af7d46595b989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_EXITING_SLEEP</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga1ea41cdfb6fb053eaed2792c4edf886d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_ENTERING_SHUTDOWN</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>gad09d75dfaa5d799c4f044df9814db485</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Power_CHANGING_PERF_LEVEL</name>
      <anchorfile>group___power___transition___state.html</anchorfile>
      <anchor>ga2b7d4ba49a9418af10c84132a8cbf108</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PWM_STATUS</name>
    <title>PWM_STATUS</title>
    <filename>group___p_w_m___s_t_a_t_u_s.html</filename>
  </compound>
  <compound kind="group">
    <name>PWM_CMD</name>
    <title>PWM_CMD</title>
    <filename>group___p_w_m___c_m_d.html</filename>
  </compound>
  <compound kind="group">
    <name>UART2_STATUS</name>
    <title>UART2_STATUS</title>
    <filename>group___u_a_r_t2___s_t_a_t_u_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_SUCCESS</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga50f50c06775b7ee13f45fe80c93fb356</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_SREADTIMEOUT</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga2eafae271234b3df03442a2f5b1b7270</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EFRAMING</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga056a6acd9fc1a49cb30c8baabecc35df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EPARITY</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaa3d362690c0ab4dd14e50f53737499a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EBREAK</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4684c6671d256dc72b13ddb1eafd9971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EOVERRUN</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gab410e4da00bc79fdbbe921e89a78ffeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EINUSE</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga0ec322208aa002ae4b058a410a387801</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EINVALID</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gac2a4b2002f04d6caaeee837aa662e7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EFAIL</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad3e0d7738225ce8f423e32e0c90d883e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_EMEMORY</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga4cab16fd65127a1987a20caa0653476b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ETIMEOUT</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gaeb708c48cd2517f08660196f16d31a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ECANCELLED</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>gad528e61ecc06c90d5824796ce547ecb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UART2_STATUS_ENOTOPEN</name>
      <anchorfile>group___u_a_r_t2___s_t_a_t_u_s.html</anchorfile>
      <anchor>ga02bfc05124702d98c0540896ead270a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>Disclaimer</name>
    <title></title>
    <filename>_disclaimer</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>SimpleLink MCU SDK Driver API Reference</title>
    <filename>index</filename>
    <docanchor file="index" title="Table of Contents">tableofcontents</docanchor>
    <docanchor file="index" title="TI-Drivers Overview">drivers_common_overview</docanchor>
    <docanchor file="index" title="Drivers and Documentation">drivers</docanchor>
    <docanchor file="index" title="Display Driver">display</docanchor>
    <docanchor file="index" title="Driver Apps">apps</docanchor>
    <docanchor file="index" title="Driver Utilities">utilities</docanchor>
    <docanchor file="index" title="Driver Configuration">driver_configuration</docanchor>
    <docanchor file="index" title="Driver Configuration Files">driver_configuration_files</docanchor>
    <docanchor file="index" title="Driver Objects">driver_objects</docanchor>
    <docanchor file="index" title="Driver Hardware Attributes">driver_hardware_attributes</docanchor>
    <docanchor file="index" title="Driver Function Table">driver_function_table</docanchor>
    <docanchor file="index" title="NoRTOS Framework Module">nortos</docanchor>
  </compound>
</tagfile>
