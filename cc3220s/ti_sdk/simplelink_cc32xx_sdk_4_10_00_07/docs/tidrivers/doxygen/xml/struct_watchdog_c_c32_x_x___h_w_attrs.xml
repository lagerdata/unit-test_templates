<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_watchdog_c_c32_x_x___h_w_attrs" kind="struct" language="C++" prot="public">
    <compoundname>WatchdogCC32XX_HWAttrs</compoundname>
    <includes refid="_watchdog_c_c32_x_x_8h" local="no">WatchdogCC32XX.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_watchdog_c_c32_x_x___h_w_attrs_1ae1f13f3ec247fee84c0d926e78b3e6a8" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int WatchdogCC32XX_HWAttrs::baseAddr</definition>
        <argsstring></argsstring>
        <name>baseAddr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Base address for Watchdog </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" line="207" column="1" bodyfile="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_watchdog_c_c32_x_x___h_w_attrs_1ac7a3918d5b95722f778f44d305c984d4" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int WatchdogCC32XX_HWAttrs::intNum</definition>
        <argsstring></argsstring>
        <name>intNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WDT interrupt number </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" line="208" column="1" bodyfile="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_watchdog_c_c32_x_x___h_w_attrs_1acf1f11e88df1ffd3f5250d35c43c1c01" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int WatchdogCC32XX_HWAttrs::intPriority</definition>
        <argsstring></argsstring>
        <name>intPriority</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>WDT interrupt priority </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" line="209" column="1" bodyfile="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_watchdog_c_c32_x_x___h_w_attrs_1a0f80ac4c136429bafd1b6d68a9d61c7a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t WatchdogCC32XX_HWAttrs::reloadValue</definition>
        <argsstring></argsstring>
        <name>reloadValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reload value for Watchdog </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" line="210" column="1" bodyfile="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Watchdog hardware attributes for CC32XX. </para>    </briefdescription>
    <detaileddescription>
<para>intPriority is the Watchdog timer&apos;s interrupt priority, as defined by the underlying OS. It is passed unmodified to the underlying OS&apos;s interrupt handler creation code, so you need to refer to the OS documentation for usage. For example, for SYS/BIOS applications, refer to the ti.sysbios.family.arm.m3.Hwi documentation for SYS/BIOS usage of interrupt priorities. If the driver uses the ti.dpl interface instead of making OS calls directly, then the HwiP port handles the interrupt priority in an OS specific way. In the case of the SYS/BIOS port, intPriority is passed unmodified to Hwi_create(). </para>    </detaileddescription>
    <location file="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" line="206" column="1" bodyfile="exports/tidrivers_cc32xx/source/ti/drivers/watchdog/WatchdogCC32XX.h" bodystart="206" bodyend="211"/>
    <listofallmembers>
      <member refid="struct_watchdog_c_c32_x_x___h_w_attrs_1ae1f13f3ec247fee84c0d926e78b3e6a8" prot="public" virt="non-virtual"><scope>WatchdogCC32XX_HWAttrs</scope><name>baseAddr</name></member>
      <member refid="struct_watchdog_c_c32_x_x___h_w_attrs_1ac7a3918d5b95722f778f44d305c984d4" prot="public" virt="non-virtual"><scope>WatchdogCC32XX_HWAttrs</scope><name>intNum</name></member>
      <member refid="struct_watchdog_c_c32_x_x___h_w_attrs_1acf1f11e88df1ffd3f5250d35c43c1c01" prot="public" virt="non-virtual"><scope>WatchdogCC32XX_HWAttrs</scope><name>intPriority</name></member>
      <member refid="struct_watchdog_c_c32_x_x___h_w_attrs_1a0f80ac4c136429bafd1b6d68a9d61c7a" prot="public" virt="non-virtual"><scope>WatchdogCC32XX_HWAttrs</scope><name>reloadValue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
